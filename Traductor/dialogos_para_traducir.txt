# ARQUIVO: .\script_corregido.rpy DIALOGOS: 272

#   define m = Character( "[name]"
    define m = Character( "[TRADUCIR: [name]]"

#   define mg = Character( "Sr. Galmeir"
    define mg = Character( "[TRADUCIR: Sr. Galmeir]"

#   define g = Character( "Chica"
    define g = Character( "[TRADUCIR: Chica]"

#   define v = Character( "Victoria"
    define v = Character( "[TRADUCIR: Victoria]"

#   show text "{color=#ffffff}ADVERTENCIA: El juego contiene contenido sexual. Todos los personajes son mayores de 18 años. Se recomienda discreción.{/color}"
    show text "[TRADUCIR: {color=#ffffff}ADVERTENCIA: El juego contiene contenido sexual. Todos los personajes son mayores de 18 años. Se recomienda discreción.{/color}]"

#   image introvid = Movie(channel= "xss"
    image introvid = Movie(channel= "[TRADUCIR: xss]"

#   image introvid2 = Movie(channel= "xrus"
    image introvid2 = Movie(channel= "[TRADUCIR: xrus]"

#   name = renpy.input( "¿Cómo te llamas? (Deja en blanco para 'Matt')."
    name = renpy.input( "[TRADUCIR: ¿Cómo te llamas? (Deja en blanco para 'Matt').]"

#   name = name.strip() or "Matt"
    name = name.strip() or "[TRADUCIR: Matt]"

#   m "¿Hmm?"
    m "[TRADUCIR: ¿Hmm?]"

#   m "({i}*suspiro* Parece que se coló de nuevo.{/i})"
    m "[TRADUCIR: ({i}*suspiro* Parece que se coló de nuevo.{/i})]"

#   m "({i}Este último mes ha sido una locura total.{/i})"
    m "[TRADUCIR: ({i}Este último mes ha sido una locura total.{/i})]"

#   m "({i}A veces me pregunto cómo habrían sido las cosas si todo hubiera salido diferente.{/i})"
    m "[TRADUCIR: ({i}A veces me pregunto cómo habrían sido las cosas si todo hubiera salido diferente.{/i})]"

#   m "({i}Es extraño cómo una pequeña decisión puede cambiarlo todo.{/i})"
    m "[TRADUCIR: ({i}Es extraño cómo una pequeña decisión puede cambiarlo todo.{/i})]"

#   m "({i}...una acción simple puede poner tu vida patas arriba.{/i})"
    m "[TRADUCIR: ({i}...una acción simple puede poner tu vida patas arriba.{/i})]"

#   m "({i}...y una simple mirada... puede cambiar el destino.{/i})"
    m "[TRADUCIR: ({i}...y una simple mirada... puede cambiar el destino.{/i})]"

#   m "¿Entonces? ¿Qué opinas?"
    m "[TRADUCIR: ¿Entonces? ¿Qué opinas?]"

#   mg "¿Quieres la respuesta honesta?"
    mg "[TRADUCIR: ¿Quieres la respuesta honesta?]"

#   m "Eh... ¿sí? Por eso lo entregué."
    m "[TRADUCIR: Eh... ¿sí? Por eso lo entregué.]"

#   mg "Sinceramente, creo que estás asumiendo demasiado."
    mg "[TRADUCIR: Sinceramente, creo que estás asumiendo demasiado.]"

#   mg "Tu trabajo es definitivamente superior al promedio, pero con las clases por venir, no creo que puedas con toda la carga."
    mg "[TRADUCIR: Tu trabajo es definitivamente superior al promedio, pero con las clases por venir, no creo que puedas con toda la carga.]"

#   m "Con todo respeto, señor, creo que puedo manejar ambas cosas."
    m "[TRADUCIR: Con todo respeto, señor, creo que puedo manejar ambas cosas.]"

#   mg "'Puedes hacer dos cosas a la vez, pero no puedes concentrarte efectivamente en dos cosas a la vez.'"
    mg "[TRADUCIR: 'Puedes hacer dos cosas a la vez, pero no puedes concentrarte efectivamente en dos cosas a la vez.']"

#   m "...Gary Keller."
    m "[TRADUCIR: ...Gary Keller.]"

#   mg "¡Exactamente!"
    mg "[TRADUCIR: ¡Exactamente!]"

#   mg "Eres un trabajador incansable, [name]. La mejor ética de trabajo que he visto en mucho tiempo."
    mg "[TRADUCIR: Eres un trabajador incansable, [name]. La mejor ética de trabajo que he visto en mucho tiempo.]"

#   mg "Pero no quiero verte fracasar. Tendrás nuestras puertas abiertas cuando termine el semestre."
    mg "[TRADUCIR: Pero no quiero verte fracasar. Tendrás nuestras puertas abiertas cuando termine el semestre.]"

#   m "G-gracias, señor."
    m "[TRADUCIR: G-gracias, señor.]"

#   m "({i}Y así... me quedé sin trabajo durante el último mes del verano.{/i})"
    m "[TRADUCIR: ({i}Y así... me quedé sin trabajo durante el último mes del verano.{/i})]"

#   m "({i}No estaba en apuros económicos, pero quería hacer algo más que meter la cara en los libros cuando comenzara el nuevo curso.{/i})"
    m "[TRADUCIR: ({i}No estaba en apuros económicos, pero quería hacer algo más que meter la cara en los libros cuando comenzara el nuevo curso.{/i})]"

#   m "({i}Mi padre y yo dejamos esta ciudad cuando estaba en primaria, cuando lo trasladaron por trabajo.{/i})"
    m "[TRADUCIR: ({i}Mi padre y yo dejamos esta ciudad cuando estaba en primaria, cuando lo trasladaron por trabajo.{/i})]"

#   m "({i}Después de que tuvo que mudarse al extranjero por un ascenso, ya no tenía motivos para quedarme en nuestra nueva ciudad, así que decidí regresar a mi ciudad natal.{/i})"
    m "[TRADUCIR: ({i}Después de que tuvo que mudarse al extranjero por un ascenso, ya no tenía motivos para quedarme en nuestra nueva ciudad, así que decidí regresar a mi ciudad natal.{/i})]"

#   m "({i}A pesar de haber crecido aquí, era bastante solitario, y no interactuaba con mucha gente de mi edad.{/i})"
    m "[TRADUCIR: ({i}A pesar de haber crecido aquí, era bastante solitario, y no interactuaba con mucha gente de mi edad.{/i})]"

#   m "({i}Cuando me mudé, no había muchas personas que me diera pena dejar atrás, y nadie a quien tuviera ganas de volver a ver.{/i})"
    m "[TRADUCIR: ({i}Cuando me mudé, no había muchas personas que me diera pena dejar atrás, y nadie a quien tuviera ganas de volver a ver.{/i})]"

#   m "({i}A pesar de que mi padre es muy rico, no soportaba la idea de vivir a costa de otros, y estaba decidido a generar mis propios ingresos.{/i})"
    m "[TRADUCIR: ({i}A pesar de que mi padre es muy rico, no soportaba la idea de vivir a costa de otros, y estaba decidido a generar mis propios ingresos.{/i})]"

#   m "({i}Eventualmente ahorré lo suficiente para tener mi propio lugar, pero me costaba encontrar algo con qué ocupar mi tiempo.{/i})"
    m "[TRADUCIR: ({i}Eventualmente ahorré lo suficiente para tener mi propio lugar, pero me costaba encontrar algo con qué ocupar mi tiempo.{/i})]"

#   m "({i}No conocer a nadie en la ciudad no ayudaba mucho.{/i})"
    m "[TRADUCIR: ({i}No conocer a nadie en la ciudad no ayudaba mucho.{/i})]"

#   m "({i}Pero una sola interacción aquel día lluvioso volviendo de la oficina...{/i})"
    m "[TRADUCIR: ({i}Pero una sola interacción aquel día lluvioso volviendo de la oficina...{/i})]"

#   m "({i}...cambiaría por completo el último mes de mi verano.{/i})"
    m "[TRADUCIR: ({i}...cambiaría por completo el último mes de mi verano.{/i})]"

#   m "({i}Nunca fui bueno con las mujeres.{/i})"
    m "[TRADUCIR: ({i}Nunca fui bueno con las mujeres.{/i})]"

#   m "({i}No era porque fuera feo ni nada, simplemente nunca sabía qué decir.{/i})"
    m "[TRADUCIR: ({i}No era porque fuera feo ni nada, simplemente nunca sabía qué decir.{/i})]"

#   m "({i}Siempre decía algo estúpido o estaba en el lugar equivocado en el momento equivocado.{/i})"
    m "[TRADUCIR: ({i}Siempre decía algo estúpido o estaba en el lugar equivocado en el momento equivocado.{/i})]"

#   m "({i}Tampoco era alguien que creyera en el destino o el azar.{/i})"
    m "[TRADUCIR: ({i}Tampoco era alguien que creyera en el destino o el azar.{/i})]"

#   m "({i}Así que, sea lo que sea que me hizo ser el héroe ese día...{/i})"
    m "[TRADUCIR: ({i}Así que, sea lo que sea que me hizo ser el héroe ese día...{/i})]"

#   m "({i}Me metió en una situación más grande de lo que cualquier héroe podría manejar.{/i})"
    m "[TRADUCIR: ({i}Me metió en una situación más grande de lo que cualquier héroe podría manejar.{/i})]"

#   m "({i}...mucho más grande.{/i})"
    m "[TRADUCIR: ({i}...mucho más grande.{/i})]"

#   m "S-sí señor. Entiendo."
    m "[TRADUCIR: S-sí señor. Entiendo.]"

#   m "Gracias. Adiós."
    m "[TRADUCIR: Gracias. Adiós.]"

#   m "({i}Otra entrevista fallida.{/i})"
    m "[TRADUCIR: ({i}Otra entrevista fallida.{/i})]"

#   m "({i}Con las clases a solo unas semanas, no tenía idea de cómo iba a pasar el resto del verano.{/i})"
    m "[TRADUCIR: ({i}Con las clases a solo unas semanas, no tenía idea de cómo iba a pasar el resto del verano.{/i})]"

#   m "({i}Tal vez alguna solicitud de trabajo llegó por correo.{/i})"
    m "[TRADUCIR: ({i}Tal vez alguna solicitud de trabajo llegó por correo.{/i})]"

#   m "({i}...nope. Solo correo basura.{/i})"
    m "[TRADUCIR: ({i}...nope. Solo correo basura.{/i})]"

#   m "({i}A este paso, solo estudiaré y dormiré todo el semestre.{/i})"
    m "[TRADUCIR: ({i}A este paso, solo estudiaré y dormiré todo el semestre.{/i})]"

#   m "¿Hmm?"
    m "[TRADUCIR: ¿Hmm?]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}Espera un segundo.{/i})"
    m "[TRADUCIR: ({i}Espera un segundo.{/i})]"

#   m "¿Hola?"
    m "[TRADUCIR: ¿Hola?]"

#   g "*jadeo*"
    g "[TRADUCIR: *jadeo*]"

#   m "¿Hay alguien ahí?"
    m "[TRADUCIR: ¿Hay alguien ahí?]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "Eh, no voy a morder."
    m "[TRADUCIR: Eh, no voy a morder.]"

#   m "({i}Una chica...{/i})"
    m "[TRADUCIR: ({i}Una chica...{/i})]"

#   m "Eh, ¿hay una razón por la que te escondes?"
    m "[TRADUCIR: Eh, ¿hay una razón por la que te escondes?]"

#   m "Si quieres hablar, no tienes que ser tímida."
    m "[TRADUCIR: Si quieres hablar, no tienes que ser tímida.]"

#   g "..."
    g "[TRADUCIR: ...]"

#   m "({i}¿Hmm?{/i})"
    m "[TRADUCIR: ({i}¿Hmm?{/i})]"

#   m "({i}Espera... ¿es la chica del otro día?{/i})"
    m "[TRADUCIR: ({i}Espera... ¿es la chica del otro día?{/i})]"

#   m "({i}Nunca supe su nombre.{/i})"
    m "[TRADUCIR: ({i}Nunca supe su nombre.{/i})]"

#   m "({i}Después del incidente simplemente... se fue corriendo.{/i})"
    m "[TRADUCIR: ({i}Después del incidente simplemente... se fue corriendo.{/i})]"

#   m "({i}Ahora que puedo verla bien... es bastante linda.{/i})"
    m "[TRADUCIR: ({i}Ahora que puedo verla bien... es bastante linda.{/i})]"

#   m "Eh, hola. Me llamo [name]."
    m "[TRADUCIR: Eh, hola. Me llamo [name].]"

#   m "Eres la chica del otro día, ¿cierto?"
    m "[TRADUCIR: Eres la chica del otro día, ¿cierto?]"

#   v "Sí. Soy Victoria."
    v "[TRADUCIR: Sí. Soy Victoria.]"

#   m "¿Victoria, eh? Es un bonito nombre."
    m "[TRADUCIR: ¿Victoria, eh? Es un bonito nombre.]"

#   m "Nunca tuve la oportunidad de hablar contigo después de... ya sabes."
    m "[TRADUCIR: Nunca tuve la oportunidad de hablar contigo después de... ya sabes.]"

#   m "¿Estás bien?"
    m "[TRADUCIR: ¿Estás bien?]"

#   v "..."
    v "[TRADUCIR: ...]"

#   m "({i}¿Hmm? ¿Es tímida?{/i})"
    m "[TRADUCIR: ({i}¿Hmm? ¿Es tímida?{/i})]"

#   m "¿Hola? ¿Victoria?"
    m "[TRADUCIR: ¿Hola? ¿Victoria?]"

#   v "Muchas gracias, y... estoy bien."
    v "[TRADUCIR: Muchas gracias, y... estoy bien.]"

#   m "Me alegra escuchar eso. Me preocupé cuando saliste corriendo."
    m "[TRADUCIR: Me alegra escuchar eso. Me preocupé cuando saliste corriendo.]"

#   m "Entonces, eh... ¿qué te trae por aquí?"
    m "[TRADUCIR: Entonces, eh... ¿qué te trae por aquí?]"

#   m "({i}¿Cómo sabe dónde vivo?{/i})"
    m "[TRADUCIR: ({i}¿Cómo sabe dónde vivo?{/i})]"

#   v "Solo quería... agradecerte como es debido."
    v "[TRADUCIR: Solo quería... agradecerte como es debido.]"

#   v "No tuve oportunidad de hacerlo el otro día."
    v "[TRADUCIR: No tuve oportunidad de hacerlo el otro día.]"

#   m "Oh, no tienes que hacer eso."
    m "[TRADUCIR: Oh, no tienes que hacer eso.]"

#   m "Solo hice lo que cualquiera haría."
    m "[TRADUCIR: Solo hice lo que cualquiera haría.]"

#   v "No, lo digo en serio."
    v "[TRADUCIR: No, lo digo en serio.]"

#   v "Te debo la vida."
    v "[TRADUCIR: Te debo la vida.]"

#   m "({i}Wow, se lo toma muy en serio.{/i})"
    m "[TRADUCIR: ({i}Wow, se lo toma muy en serio.{/i})]"

#   m "Bueno, o sea... no hice mucho."
    m "[TRADUCIR: Bueno, o sea... no hice mucho.]"

#   m "Pero si realmente quieres, no me voy a oponer."
    m "[TRADUCIR: Pero si realmente quieres, no me voy a oponer.]"

#   m "Entonces, ¿qué tenías en mente?"
    m "[TRADUCIR: Entonces, ¿qué tenías en mente?]"

#   v "Umm... cierra los ojos."
    v "[TRADUCIR: Umm... cierra los ojos.]"

#   m "¿Q-qué? ¿Por qué debería-?"
    m "[TRADUCIR: ¿Q-qué? ¿Por qué debería-?]"

#   v "Solo hazlo."
    v "[TRADUCIR: Solo hazlo.]"

#   m "O-okey."
    m "[TRADUCIR: O-okey.]"

#   m "({i}No sé por qué, pero sentí la necesidad de hacer lo que decía.{/i})"
    m "[TRADUCIR: ({i}No sé por qué, pero sentí la necesidad de hacer lo que decía.{/i})]"

#   m "({i}¿Por qué me pediría que-?{/i})"
    m "[TRADUCIR: ({i}¿Por qué me pediría que-?{/i})]"

#   m "¡¡¡!!!"
    m "[TRADUCIR: ¡¡¡!!!]"

#   m "({i}¡¿Q-qué?!{/i})"
    m "[TRADUCIR: ({i}¡¿Q-qué?!{/i})]"

#   m "({i}¡¿Un beso?!{/i})"
    m "[TRADUCIR: ({i}¡¿Un beso?!{/i})]"

#   m "({i}¡¿Y no un beso cualquiera, sino un beso francés?!{/i})"
    m "[TRADUCIR: ({i}¡¿Y no un beso cualquiera, sino un beso francés?!{/i})]"

#   m "({i}¡Jamás esperé que hiciera eso!{/i})"
    m "[TRADUCIR: ({i}¡Jamás esperé que hiciera eso!{/i})]"

#   v "Eres buen besador."
    v "[TRADUCIR: Eres buen besador.]"

#   m "¿G-gracias?"
    m "[TRADUCIR: ¿G-gracias?]"

#   m "({i}No sé cómo sentirme con esto.{/i})"
    m "[TRADUCIR: ({i}No sé cómo sentirme con esto.{/i})]"

#   m "({i}Digo, le salvé la vida, pero...{/i})"
    m "[TRADUCIR: ({i}Digo, le salvé la vida, pero...{/i})]"

#   m "({i}No esperaba que fuera tan... directa.{/i})"
    m "[TRADUCIR: ({i}No esperaba que fuera tan... directa.{/i})]"

#   m "({i}Pero... no puedo decir que no me gustó.{/i})"
    m "[TRADUCIR: ({i}Pero... no puedo decir que no me gustó.{/i})]"

#   m "({i}Será mejor que vuelva adentro antes de que esto se salga de control.{/i})"
    m "[TRADUCIR: ({i}Será mejor que vuelva adentro antes de que esto se salga de control.{/i})]"

#   m "Me... alegra haberte salvado, pero... de verdad tengo que irme ahora."
    m "[TRADUCIR: Me... alegra haberte salvado, pero... de verdad tengo que irme ahora.]"

#   v "..."
    v "[TRADUCIR: ...]"

#   m "({i}Pasaron unos días y no había señales de Victoria.{/i})"
    m "[TRADUCIR: ({i}Pasaron unos días y no había señales de Victoria.{/i})]"

#   m "({i}Pero entonces, de la nada...{/i})"
    m "[TRADUCIR: ({i}Pero entonces, de la nada...{/i})]"

#   m "({i}...ella regresó.{/i})"
    m "[TRADUCIR: ({i}...ella regresó.{/i})]"

#   m "({i}Pensé que si la ignoraba se iría.{/i})"
    m "[TRADUCIR: ({i}Pensé que si la ignoraba se iría.{/i})]"

#   m "({i}Pero día tras día...{/i})"
    m "[TRADUCIR: ({i}Pero día tras día...{/i})]"

#   m "({i}...seguía volviendo.{/i})"
    m "[TRADUCIR: ({i}...seguía volviendo.{/i})]"

#   m "*suspiro*"
    m "[TRADUCIR: *suspiro*]"

#   m "({i}Esto se está volviendo ridículo.{/i})"
    m "[TRADUCIR: ({i}Esto se está volviendo ridículo.{/i})]"

#   m "({i}¿De verdad está parada ahí bajo la lluvia?{/i})"
    m "[TRADUCIR: ({i}¿De verdad está parada ahí bajo la lluvia?{/i})]"

#   m "({i}Si sigue así seguro se va a enfermar.{/i})"
    m "[TRADUCIR: ({i}Si sigue así seguro se va a enfermar.{/i})]"

#   m "({i}E-espera un segundo...{/i})"
    m "[TRADUCIR: ({i}E-espera un segundo...{/i})]"

#   m "({i}¿No está usando sostén?{/i})"
    m "[TRADUCIR: ({i}¿No está usando sostén?{/i})]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}Maldita sea. Por supuesto que me ve mirando.{/i})"
    m "[TRADUCIR: ({i}Maldita sea. Por supuesto que me ve mirando.{/i})]"

#   v "Hola."
    v "[TRADUCIR: Hola.]"

#   m 'Sí, no me vengas con un "Hola"
    m 'Sí, no me vengas con un "[TRADUCIR: Hola]"

#   m "¿Qué puede ser tan importante como para quedarte bajo la lluvia?"
    m "[TRADUCIR: ¿Qué puede ser tan importante como para quedarte bajo la lluvia?]"

#   m "Te vas a enfermar si sigues ahí."
    m "[TRADUCIR: Te vas a enfermar si sigues ahí.]"

#   v "...¿bueno? ¿No me vas a invitar a pasar?"
    v "[TRADUCIR: ...¿bueno? ¿No me vas a invitar a pasar?]"

#   m "({i}Esta chica es un problema.{/i})"
    m "[TRADUCIR: ({i}Esta chica es un problema.{/i})]"

#   m "({i}Pero dadas las circunstancias...{/i})"
    m "[TRADUCIR: ({i}Pero dadas las circunstancias...{/i})]"

#   m "*suspiro* Está bien, pero solo hasta que pase la lluvia."
    m "[TRADUCIR: *suspiro* Está bien, pero solo hasta que pase la lluvia.]"

#   v "Mhm."
    v "[TRADUCIR: Mhm.]"

#   m "({i}Sí... definitivamente un problema.{/i})"
    m "[TRADUCIR: ({i}Sí... definitivamente un problema.{/i})]"

#   m "Bueno, dijeron que la lluvia debería parar en unas horas, así que-"
    m "[TRADUCIR: Bueno, dijeron que la lluvia debería parar en unas horas, así que-]"

#   m "({i}...y me está ignorando.{/i})"
    m "[TRADUCIR: ({i}...y me está ignorando.{/i})]"

#   v "Bonito lugar."
    v "[TRADUCIR: Bonito lugar.]"

#   m "*suspiro* Gracias, supongo."
    m "[TRADUCIR: *suspiro* Gracias, supongo.]"

#   v "Entonces... ¿y ahora qué?"
    v "[TRADUCIR: Entonces... ¿y ahora qué?]"

#   m "({i}Problemas.{/i})"
    m "[TRADUCIR: ({i}Problemas.{/i})]"

#   m "B-bueno, iré a ver si tengo algo seco que puedas usar, para empezar."
    m "[TRADUCIR: B-bueno, iré a ver si tengo algo seco que puedas usar, para empezar.]"

#   m "¿Podrías intentar no romper nada mientras tanto?"
    m "[TRADUCIR: ¿Podrías intentar no romper nada mientras tanto?]"

#   v "Mhm."
    v "[TRADUCIR: Mhm.]"

#   m "*suspiro*"
    m "[TRADUCIR: *suspiro*]"

#   m "Bien, ya estoy de vuelta."
    m "[TRADUCIR: Bien, ya estoy de vuelta.]"

#   m "Lo mejor que pude encontrar fue-"
    m "[TRADUCIR: Lo mejor que pude encontrar fue-]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}¿Se fue?{/i})"
    m "[TRADUCIR: ({i}¿Se fue?{/i})]"

#   m "({i}No tengo idea de qué pasa por la cabeza de esta chica.{/i})"
    m "[TRADUCIR: ({i}No tengo idea de qué pasa por la cabeza de esta chica.{/i})]"

#   m "({i}Definitivamente parecía-{/i})"
    m "[TRADUCIR: ({i}Definitivamente parecía-{/i})]"

#   m "."
    m "[TRADUCIR: .]"

#   m ".."
    m "[TRADUCIR: ..]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}¡¿Qué demonios?!{/i})"
    m "[TRADUCIR: ({i}¡¿Qué demonios?!{/i})]"

#   v "Oh, ya regresaste."
    v "[TRADUCIR: Oh, ya regresaste.]"

#   m "Sí, entonces... ¿me puedes decir por qué decidiste que mi cama era el mejor lugar para esperar?"
    m "[TRADUCIR: Sí, entonces... ¿me puedes decir por qué decidiste que mi cama era el mejor lugar para esperar?]"

#   v "Bueno, porque es cómoda."
    v "[TRADUCIR: Bueno, porque es cómoda.]"

#   m "B-bueno, sí, pero-"
    m "[TRADUCIR: B-bueno, sí, pero-]"

#   "*aclara la garganta*"
    "[TRADUCIR: *aclara la garganta*]"

#   m "De todas formas, no tengo ropa de mujer, pero encontré una camisa extragrande que podrías usar."
    m "[TRADUCIR: De todas formas, no tengo ropa de mujer, pero encontré una camisa extragrande que podrías usar.]"

#   m "Pondré tu ropa mojada en la secadora, pero puedes usar esto mientras termina."
    m "[TRADUCIR: Pondré tu ropa mojada en la secadora, pero puedes usar esto mientras termina.]"

#   v "¡Está bien!"
    v "[TRADUCIR: ¡Está bien!]"

#   m "¡W-woah!"
    m "[TRADUCIR: ¡W-woah!]"

#   m "¿Qué estás haciendo?"
    m "[TRADUCIR: ¿Qué estás haciendo?]"

#   v "Umm... ¿quitándome la ropa? ¿Cómo más la vas a secar?"
    v "[TRADUCIR: Umm... ¿quitándome la ropa? ¿Cómo más la vas a secar?]"

#   m "({i}Eso... es un buen punto.{/i})"
    m "[TRADUCIR: ({i}Eso... es un buen punto.{/i})]"

#   m "P-pero, ¿no puedes esperar a que salga de la habitación, al menos?"
    m "[TRADUCIR: P-pero, ¿no puedes esperar a que salga de la habitación, al menos?]"

#   v "Nah, eso parece mucho caminar de más."
    v "[TRADUCIR: Nah, eso parece mucho caminar de más.]"

#   v "Puedes quitártela mientras estás aquí."
    v "[TRADUCIR: Puedes quitártela mientras estás aquí.]"

#   m "({i}¡Santo cielo!{/i})"
    m "[TRADUCIR: ({i}¡Santo cielo!{/i})]"

#   m "({i}Está medio desnuda... en mi casa.{/i})"
    m "[TRADUCIR: ({i}Está medio desnuda... en mi casa.{/i})]"

#   m "({i}Aunque no puedo quejarme mucho. Esos pechos son simplemente...{/i})"
    m "[TRADUCIR: ({i}Aunque no puedo quejarme mucho. Esos pechos son simplemente...{/i})]"

#   m "({i}E-espera, ¿qué está-{/i})"
    m "[TRADUCIR: ({i}E-espera, ¿qué está-{/i})]"

#   m "¡E-espera!"
    m "[TRADUCIR: ¡E-espera!]"

#   v "Tranquilo. Tengo puesto pantis..."
    v "[TRADUCIR: Tranquilo. Tengo puesto pantis...]"

#   m "Eso... no es realmente el problema aquí."
    m "[TRADUCIR: Eso... no es realmente el problema aquí.]"

#   m "({i}Mentiría si dijera que no es hermosa.{/i})"
    m "[TRADUCIR: ({i}Mentiría si dijera que no es hermosa.{/i})]"

#   m "({i}¿Pero qué onda con ella? ¿Por qué parece tan cómoda con un extraño?{/i})"
    m "[TRADUCIR: ({i}¿Pero qué onda con ella? ¿Por qué parece tan cómoda con un extraño?{/i})]"

#   m "({i}Necesito saber por qué se está comportando así.{/i})"
    m "[TRADUCIR: ({i}Necesito saber por qué se está comportando así.{/i})]"

#   m "Oye, ¿crees que podamos hablar un poco? Estoy confundido sobre algunas cosas."
    m "[TRADUCIR: Oye, ¿crees que podamos hablar un poco? Estoy confundido sobre algunas cosas.]"

#   v "¡Claro!"
    v "[TRADUCIR: ¡Claro!]"

#   m "({i}Y por primera vez... tengo miedo de sentarme en mi propia cama.{/i})"
    m "[TRADUCIR: ({i}Y por primera vez... tengo miedo de sentarme en mi propia cama.{/i})]"

#   m "({i}Es tan linda. Esto es peligroso.{/i})"
    m "[TRADUCIR: ({i}Es tan linda. Esto es peligroso.{/i})]"

#   v "Hola."
    v "[TRADUCIR: Hola.]"

#   m "Umm... hola."
    m "[TRADUCIR: Umm... hola.]"

#   m "Te preguntaré directo. ¿Por qué pareces tan cómoda conmigo?"
    m "[TRADUCIR: Te preguntaré directo. ¿Por qué pareces tan cómoda conmigo?]"

#   v "¿Hmm?"
    v "[TRADUCIR: ¿Hmm?]"

#   m "Bueno, solo nos conocimos hace unos días, y realmente no sabes nada de mí."
    m "[TRADUCIR: Bueno, solo nos conocimos hace unos días, y realmente no sabes nada de mí.]"

#   v "¡Es fácil! ¡Te amo!"
    v "[TRADUCIR: ¡Es fácil! ¡Te amo!]"

#   m "¿A-amor?!"
    m "[TRADUCIR: ¿A-amor?!]"

#   m "({i}¡Se está acercando mucho!)"
    m "[TRADUCIR: ({i}¡Se está acercando mucho!)]"

#   v "Cuando me salvaste el otro día, mi vida pasó frente a mis ojos."
    v "[TRADUCIR: Cuando me salvaste el otro día, mi vida pasó frente a mis ojos.]"

#   v "...y tú estuviste ahí en cada segundo."
    v "[TRADUCIR: ...y tú estuviste ahí en cada segundo.]"

#   m "({i}Oh, Dios. ¿Está hablando en serio?{/i})"
    m "[TRADUCIR: ({i}Oh, Dios. ¿Está hablando en serio?{/i})]"

#   m "Me alegra haberte salvado, pero ¿no deberías tener más cuidado?"
    m "[TRADUCIR: Me alegra haberte salvado, pero ¿no deberías tener más cuidado?]"

#   m "No sabes qué tipo de persona podría haber sido."
    m "[TRADUCIR: No sabes qué tipo de persona podría haber sido.]"

#   m "¿Y si hubiera decidido aprovechar la situación?"
    m "[TRADUCIR: ¿Y si hubiera decidido aprovechar la situación?]"

#   v "No me molestaría... si fueras tú."
    v "[TRADUCIR: No me molestaría... si fueras tú.]"

#   m "({i}¡Ese cuerpo! ¡Estoy luchando por mi vida aquí!{/i})"
    m "[TRADUCIR: ({i}¡Ese cuerpo! ¡Estoy luchando por mi vida aquí!{/i})]"

#   v "¿Te gusta la vista?"
    v "[TRADUCIR: ¿Te gusta la vista?]"

#   m "({i}No puedo negar lo sexy que se ve, pero ¿está bien que haga esto?{/i})"
    m "[TRADUCIR: ({i}No puedo negar lo sexy que se ve, pero ¿está bien que haga esto?{/i})]"

#   m "S-sí. Pero-"
    m "[TRADUCIR: S-sí. Pero-]"

#   v "Shh..."
    v "[TRADUCIR: Shh...]"

#   v "Quiero agradecerte por salvarme. No lo rechaces, ¿ok?"
    v "[TRADUCIR: Quiero agradecerte por salvarme. No lo rechaces, ¿ok?]"

#   m "({i}Joder, no creo que pueda ni aunque quisiera a estas alturas.{/i})"
    m "[TRADUCIR: ({i}Joder, no creo que pueda ni aunque quisiera a estas alturas.{/i})]"

#   m "E-eres muy hermosa, ¿sabes?"
    m "[TRADUCIR: E-eres muy hermosa, ¿sabes?]"

#   m "¿Q-qué?"
    m "[TRADUCIR: ¿Q-qué?]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}¡Santo cielo! ¡Son tan suaves!{/i})"
    m "[TRADUCIR: ({i}¡Santo cielo! ¡Son tan suaves!{/i})]"

#   m "({i}No puedo creer que esté haciendo esto...{/i})"
    m "[TRADUCIR: ({i}No puedo creer que esté haciendo esto...{/i})]"

#   m "({i}... pero no creo que pueda contenerme más.{/i})"
    m "[TRADUCIR: ({i}... pero no creo que pueda contenerme más.{/i})]"

#   v "E-espera, [name]."
    v "[TRADUCIR: E-espera, [name].]"

#   m "({i}Mierda, ¿la regué?)"
    m "[TRADUCIR: ({i}Mierda, ¿la regué?)]"

#   m "L-lo siento."
    m "[TRADUCIR: L-lo siento.]"

#   v "No lo estés. Me gusta, pero se supone que te estoy agradeciendo {i}a ti{/i}, ¿recuerdas?"
    v "[TRADUCIR: No lo estés. Me gusta, pero se supone que te estoy agradeciendo {i}a ti{/i}, ¿recuerdas?]"

#   m "S-sí, pero realmente no tienes que..."
    m "[TRADUCIR: S-sí, pero realmente no tienes que...]"

#   v "Solo relájate, ¿vale? Solo siéntate y déjame..."
    v "[TRADUCIR: Solo relájate, ¿vale? Solo siéntate y déjame...]"

#   v "..."
    v "[TRADUCIR: ...]"

#   v "Dios mío."
    v "[TRADUCIR: Dios mío.]"

#   m "¿E-estás bien?"
    m "[TRADUCIR: ¿E-estás bien?]"

#   v "V-visa preguntarme otra vez cuando termine."
    v "[TRADUCIR: V-visa preguntarme otra vez cuando termine.]"

#   m "({i}Mierda, solo el calor de su aliento se siente tan bien.{/i})"
    m "[TRADUCIR: ({i}Mierda, solo el calor de su aliento se siente tan bien.{/i})]"

#   m "({i}No quiero que se esfuerce demasiado-{/i})"
    m "[TRADUCIR: ({i}No quiero que se esfuerce demasiado-{/i})]"

#   v "Mmgh."
    v "[TRADUCIR: Mmgh.]"

#   m "({i}¡Maldita sea!{/i})"
    m "[TRADUCIR: ({i}¡Maldita sea!{/i})]"

#   m "Eso... se siente bien."
    m "[TRADUCIR: Eso... se siente bien.]"

#   v "*lame*"
    v "[TRADUCIR: *lame*]"

#   m "({i}Joder, se siente tan bien...{/i})"
    m "[TRADUCIR: ({i}Joder, se siente tan bien...{/i})]"

#   m "({i}¡Ella es una maldita experta en esto!{/i})"
    m "[TRADUCIR: ({i}¡Ella es una maldita experta en esto!{/i})]"

#   m "Te ves tan jodidamente sexy con la boca llena."
    m "[TRADUCIR: Te ves tan jodidamente sexy con la boca llena.]"

#   m "No sé cuánto más pueda aguantar."
    m "[TRADUCIR: No sé cuánto más pueda aguantar.]"

#   v "*respiración agitada*"
    v "[TRADUCIR: *respiración agitada*]"

#   v "No... termines todavía."
    v "[TRADUCIR: No... termines todavía.]"

#   v "Tengo que terminar de agradecerte. Te debo la vida, ¿recuerdas?"
    v "[TRADUCIR: Tengo que terminar de agradecerte. Te debo la vida, ¿recuerdas?]"

#   v "Mi vida... mi cuerpo... es todo tuyo, [name]."
    v "[TRADUCIR: Mi vida... mi cuerpo... es todo tuyo, [name].]"

#   m "({i}Mierda.{/i})"
    m "[TRADUCIR: ({i}Mierda.{/i})]"

#   m "Está bien. Lo aceptaré con gusto."
    m "[TRADUCIR: Está bien. Lo aceptaré con gusto.]"

#   v "Mmm..."
    v "[TRADUCIR: Mmm...]"

#   v "Voy a hacerte sentir muy feliz."
    v "[TRADUCIR: Voy a hacerte sentir muy feliz.]"

#   v "S-sólo relájate, ¿vale?"
    v "[TRADUCIR: S-sólo relájate, ¿vale?]"

#   m "({i}Suena nerviosa, pero no muestra duda alguna.{/i})"
    m "[TRADUCIR: ({i}Suena nerviosa, pero no muestra duda alguna.{/i})]"

#   v "*jadeo*"
    v "[TRADUCIR: *jadeo*]"

#   v "*respiración temblorosa*"
    v "[TRADUCIR: *respiración temblorosa*]"

#   m "¿Estás bien?"
    m "[TRADUCIR: ¿Estás bien?]"

#   v "S-sí. ¿Se siente bien?"
    v "[TRADUCIR: S-sí. ¿Se siente bien?]"

#   m "Muy bien. Me quieres coger con tantas ganas, ¿eh?"
    m "[TRADUCIR: Muy bien. Me quieres coger con tantas ganas, ¿eh?]"

#   v "Sí. P-por favor, déjame coger tu gran polla..."
    v "[TRADUCIR: Sí. P-por favor, déjame coger tu gran polla...]"

#   m "Está bien, hermosa. Muéstrame cuánto quieres agradecerme."
    m "[TRADUCIR: Está bien, hermosa. Muéstrame cuánto quieres agradecerme.]"

#   v "O-ohhhh..."
    v "[TRADUCIR: O-ohhhh...]"

#   v "¡Siii!"
    v "[TRADUCIR: ¡Siii!]"

#   m "N-no pares."
    m "[TRADUCIR: N-no pares.]"

#   v "T-tu polla me está... volviendo loca."
    v "[TRADUCIR: T-tu polla me está... volviendo loca.]"

#   m "Estoy... cerca."
    m "[TRADUCIR: Estoy... cerca.]"

#   v "[name]... por favor entra."
    v "[TRADUCIR: [name]... por favor entra.]"

#   v "Por favor... [name[0]]-[name]."
    v "[TRADUCIR: Por favor... [name[0]]-[name].]"

#   "Terminar."
    "[TRADUCIR: Terminar.]"

#   v "*chillido*"
    v "[TRADUCIR: *chillido*]"

#   m "¡Joder!"
    m "[TRADUCIR: ¡Joder!]"

#   m "Eres... increíble."
    m "[TRADUCIR: Eres... increíble.]"

#   v "Eso... se sintió tan bien."
    v "[TRADUCIR: Eso... se sintió tan bien.]"

#   m "({i}¡Esta chica fue una maldita maravilla!{/i})"
    m "[TRADUCIR: ({i}¡Esta chica fue una maldita maravilla!{/i})]"

#   m "({i}Me pregunto si estaría dispuesta a volver pronto.{/i})"
    m "[TRADUCIR: ({i}Me pregunto si estaría dispuesta a volver pronto.{/i})]"

#   v "[name]?"
    v "[TRADUCIR: [name]?]"

#   m "S-sí? ¿Estás bien?"
    m "[TRADUCIR: S-sí? ¿Estás bien?]"

#   v "Me gustaría agradecerte otra vez pronto, ¿vale?"
    v "[TRADUCIR: Me gustaría agradecerte otra vez pronto, ¿vale?]"

#   m "*se ríe* Claro. Aceptaré con gusto cualquier agradecimiento que me des."
    m "[TRADUCIR: *se ríe* Claro. Aceptaré con gusto cualquier agradecimiento que me des.]"

#   "¡Gracias por jugar! ¡Esperamos que hayas disfrutado!"
    "[TRADUCIR: ¡Gracias por jugar! ¡Esperamos que hayas disfrutado!]"

#   "Si te gustó el juego, por favor considera apoyarnos y revisar nuestros próximos cortos NSFW que vienen pronto."
    "[TRADUCIR: Si te gustó el juego, por favor considera apoyarnos y revisar nuestros próximos cortos NSFW que vienen pronto.]"

#   "¡Hasta la próxima! ¡Adiós!"
    "[TRADUCIR: ¡Hasta la próxima! ¡Adiós!]"

# ARQUIVO: .\test_error_unmatched.rpy DIALOGOS: 6

#   define m = Character( "Matt"
    define m = Character( "[TRADUCIR: Matt]"

#   m "Hola, ¿cómo estás?"
    m "[TRADUCIR: Hola, ¿cómo estás?]"

#   m "({i}I wasn't struggling financially, but I wanted to have something to do besides having my face in a book when the school year started back up.{/i})"
    m "[TRADUCIR: ({i}I wasn't struggling financially, but I wanted to have something to do besides having my face in a book when the school year started back up.{/i})]"

#   m "Esto es una prueba"
    m "[TRADUCIR: Esto es una prueba]"

#   m "Esta línea tiene una comilla sin cerrar"
    m "[TRADUCIR: Esta línea tiene una comilla sin cerrar]"

#   m "Esta línea tiene paréntesis sin balancear ("
    m "[TRADUCIR: Esta línea tiene paréntesis sin balancear (]"

# ARQUIVO: .\Archivos Antiguos\script_corregido.rpy DIALOGOS: 272

#   define m = Character( "[name]"
    define m = Character( "[TRADUCIR: [name]]"

#   define mg = Character( "Sr. Galmeir"
    define mg = Character( "[TRADUCIR: Sr. Galmeir]"

#   define g = Character( "Chica"
    define g = Character( "[TRADUCIR: Chica]"

#   define v = Character( "Victoria"
    define v = Character( "[TRADUCIR: Victoria]"

#   show text "{color=#ffffff}ADVERTENCIA: El juego contiene contenido sexual. Todos los personajes son mayores de 18 años. Se recomienda discreción.{/color}"
    show text "[TRADUCIR: {color=#ffffff}ADVERTENCIA: El juego contiene contenido sexual. Todos los personajes son mayores de 18 años. Se recomienda discreción.{/color}]"

#   image introvid = Movie(channel= "xss"
    image introvid = Movie(channel= "[TRADUCIR: xss]"

#   image introvid2 = Movie(channel= "xrus"
    image introvid2 = Movie(channel= "[TRADUCIR: xrus]"

#   name = renpy.input( "¿Cómo te llamas? (Deja en blanco para 'Matt')."
    name = renpy.input( "[TRADUCIR: ¿Cómo te llamas? (Deja en blanco para 'Matt').]"

#   name = name.strip() or "Matt"
    name = name.strip() or "[TRADUCIR: Matt]"

#   m "¿Hmm?"
    m "[TRADUCIR: ¿Hmm?]"

#   m "({i}*suspiro* Parece que se coló de nuevo.{/i})"
    m "[TRADUCIR: ({i}*suspiro* Parece que se coló de nuevo.{/i})]"

#   m "({i}Este último mes ha sido una locura total.{/i})"
    m "[TRADUCIR: ({i}Este último mes ha sido una locura total.{/i})]"

#   m "({i}A veces me pregunto cómo habrían sido las cosas si todo hubiera salido diferente.{/i})"
    m "[TRADUCIR: ({i}A veces me pregunto cómo habrían sido las cosas si todo hubiera salido diferente.{/i})]"

#   m "({i}Es extraño cómo una pequeña decisión puede cambiarlo todo.{/i})"
    m "[TRADUCIR: ({i}Es extraño cómo una pequeña decisión puede cambiarlo todo.{/i})]"

#   m "({i}...una acción simple puede poner tu vida patas arriba.{/i})"
    m "[TRADUCIR: ({i}...una acción simple puede poner tu vida patas arriba.{/i})]"

#   m "({i}...y una simple mirada... puede cambiar el destino.{/i})"
    m "[TRADUCIR: ({i}...y una simple mirada... puede cambiar el destino.{/i})]"

#   m "¿Entonces? ¿Qué opinas?"
    m "[TRADUCIR: ¿Entonces? ¿Qué opinas?]"

#   mg "¿Quieres la respuesta honesta?"
    mg "[TRADUCIR: ¿Quieres la respuesta honesta?]"

#   m "Eh... ¿sí? Por eso lo entregué."
    m "[TRADUCIR: Eh... ¿sí? Por eso lo entregué.]"

#   mg "Sinceramente, creo que estás asumiendo demasiado."
    mg "[TRADUCIR: Sinceramente, creo que estás asumiendo demasiado.]"

#   mg "Tu trabajo es definitivamente superior al promedio, pero con las clases por venir, no creo que puedas con toda la carga."
    mg "[TRADUCIR: Tu trabajo es definitivamente superior al promedio, pero con las clases por venir, no creo que puedas con toda la carga.]"

#   m "Con todo respeto, señor, creo que puedo manejar ambas cosas."
    m "[TRADUCIR: Con todo respeto, señor, creo que puedo manejar ambas cosas.]"

#   mg "'Puedes hacer dos cosas a la vez, pero no puedes concentrarte efectivamente en dos cosas a la vez.'"
    mg "[TRADUCIR: 'Puedes hacer dos cosas a la vez, pero no puedes concentrarte efectivamente en dos cosas a la vez.']"

#   m "...Gary Keller."
    m "[TRADUCIR: ...Gary Keller.]"

#   mg "¡Exactamente!"
    mg "[TRADUCIR: ¡Exactamente!]"

#   mg "Eres un trabajador incansable, [name]. La mejor ética de trabajo que he visto en mucho tiempo."
    mg "[TRADUCIR: Eres un trabajador incansable, [name]. La mejor ética de trabajo que he visto en mucho tiempo.]"

#   mg "Pero no quiero verte fracasar. Tendrás nuestras puertas abiertas cuando termine el semestre."
    mg "[TRADUCIR: Pero no quiero verte fracasar. Tendrás nuestras puertas abiertas cuando termine el semestre.]"

#   m "G-gracias, señor."
    m "[TRADUCIR: G-gracias, señor.]"

#   m "({i}Y así... me quedé sin trabajo durante el último mes del verano.{/i})"
    m "[TRADUCIR: ({i}Y así... me quedé sin trabajo durante el último mes del verano.{/i})]"

#   m "({i}No estaba en apuros económicos, pero quería hacer algo más que meter la cara en los libros cuando comenzara el nuevo curso.{/i})"
    m "[TRADUCIR: ({i}No estaba en apuros económicos, pero quería hacer algo más que meter la cara en los libros cuando comenzara el nuevo curso.{/i})]"

#   m "({i}Mi padre y yo dejamos esta ciudad cuando estaba en primaria, cuando lo trasladaron por trabajo.{/i})"
    m "[TRADUCIR: ({i}Mi padre y yo dejamos esta ciudad cuando estaba en primaria, cuando lo trasladaron por trabajo.{/i})]"

#   m "({i}Después de que tuvo que mudarse al extranjero por un ascenso, ya no tenía motivos para quedarme en nuestra nueva ciudad, así que decidí regresar a mi ciudad natal.{/i})"
    m "[TRADUCIR: ({i}Después de que tuvo que mudarse al extranjero por un ascenso, ya no tenía motivos para quedarme en nuestra nueva ciudad, así que decidí regresar a mi ciudad natal.{/i})]"

#   m "({i}A pesar de haber crecido aquí, era bastante solitario, y no interactuaba con mucha gente de mi edad.{/i})"
    m "[TRADUCIR: ({i}A pesar de haber crecido aquí, era bastante solitario, y no interactuaba con mucha gente de mi edad.{/i})]"

#   m "({i}Cuando me mudé, no había muchas personas que me diera pena dejar atrás, y nadie a quien tuviera ganas de volver a ver.{/i})"
    m "[TRADUCIR: ({i}Cuando me mudé, no había muchas personas que me diera pena dejar atrás, y nadie a quien tuviera ganas de volver a ver.{/i})]"

#   m "({i}A pesar de que mi padre es muy rico, no soportaba la idea de vivir a costa de otros, y estaba decidido a generar mis propios ingresos.{/i})"
    m "[TRADUCIR: ({i}A pesar de que mi padre es muy rico, no soportaba la idea de vivir a costa de otros, y estaba decidido a generar mis propios ingresos.{/i})]"

#   m "({i}Eventualmente ahorré lo suficiente para tener mi propio lugar, pero me costaba encontrar algo con qué ocupar mi tiempo.{/i})"
    m "[TRADUCIR: ({i}Eventualmente ahorré lo suficiente para tener mi propio lugar, pero me costaba encontrar algo con qué ocupar mi tiempo.{/i})]"

#   m "({i}No conocer a nadie en la ciudad no ayudaba mucho.{/i})"
    m "[TRADUCIR: ({i}No conocer a nadie en la ciudad no ayudaba mucho.{/i})]"

#   m "({i}Pero una sola interacción aquel día lluvioso volviendo de la oficina...{/i})"
    m "[TRADUCIR: ({i}Pero una sola interacción aquel día lluvioso volviendo de la oficina...{/i})]"

#   m "({i}...cambiaría por completo el último mes de mi verano.{/i})"
    m "[TRADUCIR: ({i}...cambiaría por completo el último mes de mi verano.{/i})]"

#   m "({i}Nunca fui bueno con las mujeres.{/i})"
    m "[TRADUCIR: ({i}Nunca fui bueno con las mujeres.{/i})]"

#   m "({i}No era porque fuera feo ni nada, simplemente nunca sabía qué decir.{/i})"
    m "[TRADUCIR: ({i}No era porque fuera feo ni nada, simplemente nunca sabía qué decir.{/i})]"

#   m "({i}Siempre decía algo estúpido o estaba en el lugar equivocado en el momento equivocado.{/i})"
    m "[TRADUCIR: ({i}Siempre decía algo estúpido o estaba en el lugar equivocado en el momento equivocado.{/i})]"

#   m "({i}Tampoco era alguien que creyera en el destino o el azar.{/i})"
    m "[TRADUCIR: ({i}Tampoco era alguien que creyera en el destino o el azar.{/i})]"

#   m "({i}Así que, sea lo que sea que me hizo ser el héroe ese día...{/i})"
    m "[TRADUCIR: ({i}Así que, sea lo que sea que me hizo ser el héroe ese día...{/i})]"

#   m "({i}Me metió en una situación más grande de lo que cualquier héroe podría manejar.{/i})"
    m "[TRADUCIR: ({i}Me metió en una situación más grande de lo que cualquier héroe podría manejar.{/i})]"

#   m "({i}...mucho más grande.{/i})"
    m "[TRADUCIR: ({i}...mucho más grande.{/i})]"

#   m "S-sí señor. Entiendo."
    m "[TRADUCIR: S-sí señor. Entiendo.]"

#   m "Gracias. Adiós."
    m "[TRADUCIR: Gracias. Adiós.]"

#   m "({i}Otra entrevista fallida.{/i})"
    m "[TRADUCIR: ({i}Otra entrevista fallida.{/i})]"

#   m "({i}Con las clases a solo unas semanas, no tenía idea de cómo iba a pasar el resto del verano.{/i})"
    m "[TRADUCIR: ({i}Con las clases a solo unas semanas, no tenía idea de cómo iba a pasar el resto del verano.{/i})]"

#   m "({i}Tal vez alguna solicitud de trabajo llegó por correo.{/i})"
    m "[TRADUCIR: ({i}Tal vez alguna solicitud de trabajo llegó por correo.{/i})]"

#   m "({i}...nope. Solo correo basura.{/i})"
    m "[TRADUCIR: ({i}...nope. Solo correo basura.{/i})]"

#   m "({i}A este paso, solo estudiaré y dormiré todo el semestre.{/i})"
    m "[TRADUCIR: ({i}A este paso, solo estudiaré y dormiré todo el semestre.{/i})]"

#   m "¿Hmm?"
    m "[TRADUCIR: ¿Hmm?]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}Espera un segundo.{/i})"
    m "[TRADUCIR: ({i}Espera un segundo.{/i})]"

#   m "¿Hola?"
    m "[TRADUCIR: ¿Hola?]"

#   g "*jadeo*"
    g "[TRADUCIR: *jadeo*]"

#   m "¿Hay alguien ahí?"
    m "[TRADUCIR: ¿Hay alguien ahí?]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "Eh, no voy a morder."
    m "[TRADUCIR: Eh, no voy a morder.]"

#   m "({i}Una chica...{/i})"
    m "[TRADUCIR: ({i}Una chica...{/i})]"

#   m "Eh, ¿hay una razón por la que te escondes?"
    m "[TRADUCIR: Eh, ¿hay una razón por la que te escondes?]"

#   m "Si quieres hablar, no tienes que ser tímida."
    m "[TRADUCIR: Si quieres hablar, no tienes que ser tímida.]"

#   g "..."
    g "[TRADUCIR: ...]"

#   m "({i}¿Hmm?{/i})"
    m "[TRADUCIR: ({i}¿Hmm?{/i})]"

#   m "({i}Espera... ¿es la chica del otro día?{/i})"
    m "[TRADUCIR: ({i}Espera... ¿es la chica del otro día?{/i})]"

#   m "({i}Nunca supe su nombre.{/i})"
    m "[TRADUCIR: ({i}Nunca supe su nombre.{/i})]"

#   m "({i}Después del incidente simplemente... se fue corriendo.{/i})"
    m "[TRADUCIR: ({i}Después del incidente simplemente... se fue corriendo.{/i})]"

#   m "({i}Ahora que puedo verla bien... es bastante linda.{/i})"
    m "[TRADUCIR: ({i}Ahora que puedo verla bien... es bastante linda.{/i})]"

#   m "Eh, hola. Me llamo [name]."
    m "[TRADUCIR: Eh, hola. Me llamo [name].]"

#   m "Eres la chica del otro día, ¿cierto?"
    m "[TRADUCIR: Eres la chica del otro día, ¿cierto?]"

#   v "Sí. Soy Victoria."
    v "[TRADUCIR: Sí. Soy Victoria.]"

#   m "¿Victoria, eh? Es un bonito nombre."
    m "[TRADUCIR: ¿Victoria, eh? Es un bonito nombre.]"

#   m "Nunca tuve la oportunidad de hablar contigo después de... ya sabes."
    m "[TRADUCIR: Nunca tuve la oportunidad de hablar contigo después de... ya sabes.]"

#   m "¿Estás bien?"
    m "[TRADUCIR: ¿Estás bien?]"

#   v "..."
    v "[TRADUCIR: ...]"

#   m "({i}¿Hmm? ¿Es tímida?{/i})"
    m "[TRADUCIR: ({i}¿Hmm? ¿Es tímida?{/i})]"

#   m "¿Hola? ¿Victoria?"
    m "[TRADUCIR: ¿Hola? ¿Victoria?]"

#   v "Muchas gracias, y... estoy bien."
    v "[TRADUCIR: Muchas gracias, y... estoy bien.]"

#   m "Me alegra escuchar eso. Me preocupé cuando saliste corriendo."
    m "[TRADUCIR: Me alegra escuchar eso. Me preocupé cuando saliste corriendo.]"

#   m "Entonces, eh... ¿qué te trae por aquí?"
    m "[TRADUCIR: Entonces, eh... ¿qué te trae por aquí?]"

#   m "({i}¿Cómo sabe dónde vivo?{/i})"
    m "[TRADUCIR: ({i}¿Cómo sabe dónde vivo?{/i})]"

#   v "Solo quería... agradecerte como es debido."
    v "[TRADUCIR: Solo quería... agradecerte como es debido.]"

#   v "No tuve oportunidad de hacerlo el otro día."
    v "[TRADUCIR: No tuve oportunidad de hacerlo el otro día.]"

#   m "Oh, no tienes que hacer eso."
    m "[TRADUCIR: Oh, no tienes que hacer eso.]"

#   m "Solo hice lo que cualquiera haría."
    m "[TRADUCIR: Solo hice lo que cualquiera haría.]"

#   v "No, lo digo en serio."
    v "[TRADUCIR: No, lo digo en serio.]"

#   v "Te debo la vida."
    v "[TRADUCIR: Te debo la vida.]"

#   m "({i}Wow, se lo toma muy en serio.{/i})"
    m "[TRADUCIR: ({i}Wow, se lo toma muy en serio.{/i})]"

#   m "Bueno, o sea... no hice mucho."
    m "[TRADUCIR: Bueno, o sea... no hice mucho.]"

#   m "Pero si realmente quieres, no me voy a oponer."
    m "[TRADUCIR: Pero si realmente quieres, no me voy a oponer.]"

#   m "Entonces, ¿qué tenías en mente?"
    m "[TRADUCIR: Entonces, ¿qué tenías en mente?]"

#   v "Umm... cierra los ojos."
    v "[TRADUCIR: Umm... cierra los ojos.]"

#   m "¿Q-qué? ¿Por qué debería-?"
    m "[TRADUCIR: ¿Q-qué? ¿Por qué debería-?]"

#   v "Solo hazlo."
    v "[TRADUCIR: Solo hazlo.]"

#   m "O-okey."
    m "[TRADUCIR: O-okey.]"

#   m "({i}No sé por qué, pero sentí la necesidad de hacer lo que decía.{/i})"
    m "[TRADUCIR: ({i}No sé por qué, pero sentí la necesidad de hacer lo que decía.{/i})]"

#   m "({i}¿Por qué me pediría que-?{/i})"
    m "[TRADUCIR: ({i}¿Por qué me pediría que-?{/i})]"

#   m "¡¡¡!!!"
    m "[TRADUCIR: ¡¡¡!!!]"

#   m "({i}¡¿Q-qué?!{/i})"
    m "[TRADUCIR: ({i}¡¿Q-qué?!{/i})]"

#   m "({i}¡¿Un beso?!{/i})"
    m "[TRADUCIR: ({i}¡¿Un beso?!{/i})]"

#   m "({i}¡¿Y no un beso cualquiera, sino un beso francés?!{/i})"
    m "[TRADUCIR: ({i}¡¿Y no un beso cualquiera, sino un beso francés?!{/i})]"

#   m "({i}¡Jamás esperé que hiciera eso!{/i})"
    m "[TRADUCIR: ({i}¡Jamás esperé que hiciera eso!{/i})]"

#   v "Eres buen besador."
    v "[TRADUCIR: Eres buen besador.]"

#   m "¿G-gracias?"
    m "[TRADUCIR: ¿G-gracias?]"

#   m "({i}No sé cómo sentirme con esto.{/i})"
    m "[TRADUCIR: ({i}No sé cómo sentirme con esto.{/i})]"

#   m "({i}Digo, le salvé la vida, pero...{/i})"
    m "[TRADUCIR: ({i}Digo, le salvé la vida, pero...{/i})]"

#   m "({i}No esperaba que fuera tan... directa.{/i})"
    m "[TRADUCIR: ({i}No esperaba que fuera tan... directa.{/i})]"

#   m "({i}Pero... no puedo decir que no me gustó.{/i})"
    m "[TRADUCIR: ({i}Pero... no puedo decir que no me gustó.{/i})]"

#   m "({i}Será mejor que vuelva adentro antes de que esto se salga de control.{/i})"
    m "[TRADUCIR: ({i}Será mejor que vuelva adentro antes de que esto se salga de control.{/i})]"

#   m "Me... alegra haberte salvado, pero... de verdad tengo que irme ahora."
    m "[TRADUCIR: Me... alegra haberte salvado, pero... de verdad tengo que irme ahora.]"

#   v "..."
    v "[TRADUCIR: ...]"

#   m "({i}Pasaron unos días y no había señales de Victoria.{/i})"
    m "[TRADUCIR: ({i}Pasaron unos días y no había señales de Victoria.{/i})]"

#   m "({i}Pero entonces, de la nada...{/i})"
    m "[TRADUCIR: ({i}Pero entonces, de la nada...{/i})]"

#   m "({i}...ella regresó.{/i})"
    m "[TRADUCIR: ({i}...ella regresó.{/i})]"

#   m "({i}Pensé que si la ignoraba se iría.{/i})"
    m "[TRADUCIR: ({i}Pensé que si la ignoraba se iría.{/i})]"

#   m "({i}Pero día tras día...{/i})"
    m "[TRADUCIR: ({i}Pero día tras día...{/i})]"

#   m "({i}...seguía volviendo.{/i})"
    m "[TRADUCIR: ({i}...seguía volviendo.{/i})]"

#   m "*suspiro*"
    m "[TRADUCIR: *suspiro*]"

#   m "({i}Esto se está volviendo ridículo.{/i})"
    m "[TRADUCIR: ({i}Esto se está volviendo ridículo.{/i})]"

#   m "({i}¿De verdad está parada ahí bajo la lluvia?{/i})"
    m "[TRADUCIR: ({i}¿De verdad está parada ahí bajo la lluvia?{/i})]"

#   m "({i}Si sigue así seguro se va a enfermar.{/i})"
    m "[TRADUCIR: ({i}Si sigue así seguro se va a enfermar.{/i})]"

#   m "({i}E-espera un segundo...{/i})"
    m "[TRADUCIR: ({i}E-espera un segundo...{/i})]"

#   m "({i}¿No está usando sostén?{/i})"
    m "[TRADUCIR: ({i}¿No está usando sostén?{/i})]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}Maldita sea. Por supuesto que me ve mirando.{/i})"
    m "[TRADUCIR: ({i}Maldita sea. Por supuesto que me ve mirando.{/i})]"

#   v "Hola."
    v "[TRADUCIR: Hola.]"

#   m 'Sí, no me vengas con un "Hola"
    m 'Sí, no me vengas con un "[TRADUCIR: Hola]"

#   m "¿Qué puede ser tan importante como para quedarte bajo la lluvia?"
    m "[TRADUCIR: ¿Qué puede ser tan importante como para quedarte bajo la lluvia?]"

#   m "Te vas a enfermar si sigues ahí."
    m "[TRADUCIR: Te vas a enfermar si sigues ahí.]"

#   v "...¿bueno? ¿No me vas a invitar a pasar?"
    v "[TRADUCIR: ...¿bueno? ¿No me vas a invitar a pasar?]"

#   m "({i}Esta chica es un problema.{/i})"
    m "[TRADUCIR: ({i}Esta chica es un problema.{/i})]"

#   m "({i}Pero dadas las circunstancias...{/i})"
    m "[TRADUCIR: ({i}Pero dadas las circunstancias...{/i})]"

#   m "*suspiro* Está bien, pero solo hasta que pase la lluvia."
    m "[TRADUCIR: *suspiro* Está bien, pero solo hasta que pase la lluvia.]"

#   v "Mhm."
    v "[TRADUCIR: Mhm.]"

#   m "({i}Sí... definitivamente un problema.{/i})"
    m "[TRADUCIR: ({i}Sí... definitivamente un problema.{/i})]"

#   m "Bueno, dijeron que la lluvia debería parar en unas horas, así que-"
    m "[TRADUCIR: Bueno, dijeron que la lluvia debería parar en unas horas, así que-]"

#   m "({i}...y me está ignorando.{/i})"
    m "[TRADUCIR: ({i}...y me está ignorando.{/i})]"

#   v "Bonito lugar."
    v "[TRADUCIR: Bonito lugar.]"

#   m "*suspiro* Gracias, supongo."
    m "[TRADUCIR: *suspiro* Gracias, supongo.]"

#   v "Entonces... ¿y ahora qué?"
    v "[TRADUCIR: Entonces... ¿y ahora qué?]"

#   m "({i}Problemas.{/i})"
    m "[TRADUCIR: ({i}Problemas.{/i})]"

#   m "B-bueno, iré a ver si tengo algo seco que puedas usar, para empezar."
    m "[TRADUCIR: B-bueno, iré a ver si tengo algo seco que puedas usar, para empezar.]"

#   m "¿Podrías intentar no romper nada mientras tanto?"
    m "[TRADUCIR: ¿Podrías intentar no romper nada mientras tanto?]"

#   v "Mhm."
    v "[TRADUCIR: Mhm.]"

#   m "*suspiro*"
    m "[TRADUCIR: *suspiro*]"

#   m "Bien, ya estoy de vuelta."
    m "[TRADUCIR: Bien, ya estoy de vuelta.]"

#   m "Lo mejor que pude encontrar fue-"
    m "[TRADUCIR: Lo mejor que pude encontrar fue-]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}¿Se fue?{/i})"
    m "[TRADUCIR: ({i}¿Se fue?{/i})]"

#   m "({i}No tengo idea de qué pasa por la cabeza de esta chica.{/i})"
    m "[TRADUCIR: ({i}No tengo idea de qué pasa por la cabeza de esta chica.{/i})]"

#   m "({i}Definitivamente parecía-{/i})"
    m "[TRADUCIR: ({i}Definitivamente parecía-{/i})]"

#   m "."
    m "[TRADUCIR: .]"

#   m ".."
    m "[TRADUCIR: ..]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}¡¿Qué demonios?!{/i})"
    m "[TRADUCIR: ({i}¡¿Qué demonios?!{/i})]"

#   v "Oh, ya regresaste."
    v "[TRADUCIR: Oh, ya regresaste.]"

#   m "Sí, entonces... ¿me puedes decir por qué decidiste que mi cama era el mejor lugar para esperar?"
    m "[TRADUCIR: Sí, entonces... ¿me puedes decir por qué decidiste que mi cama era el mejor lugar para esperar?]"

#   v "Bueno, porque es cómoda."
    v "[TRADUCIR: Bueno, porque es cómoda.]"

#   m "B-bueno, sí, pero-"
    m "[TRADUCIR: B-bueno, sí, pero-]"

#   "*aclara la garganta*"
    "[TRADUCIR: *aclara la garganta*]"

#   m "De todas formas, no tengo ropa de mujer, pero encontré una camisa extragrande que podrías usar."
    m "[TRADUCIR: De todas formas, no tengo ropa de mujer, pero encontré una camisa extragrande que podrías usar.]"

#   m "Pondré tu ropa mojada en la secadora, pero puedes usar esto mientras termina."
    m "[TRADUCIR: Pondré tu ropa mojada en la secadora, pero puedes usar esto mientras termina.]"

#   v "¡Está bien!"
    v "[TRADUCIR: ¡Está bien!]"

#   m "¡W-woah!"
    m "[TRADUCIR: ¡W-woah!]"

#   m "¿Qué estás haciendo?"
    m "[TRADUCIR: ¿Qué estás haciendo?]"

#   v "Umm... ¿quitándome la ropa? ¿Cómo más la vas a secar?"
    v "[TRADUCIR: Umm... ¿quitándome la ropa? ¿Cómo más la vas a secar?]"

#   m "({i}Eso... es un buen punto.{/i})"
    m "[TRADUCIR: ({i}Eso... es un buen punto.{/i})]"

#   m "P-pero, ¿no puedes esperar a que salga de la habitación, al menos?"
    m "[TRADUCIR: P-pero, ¿no puedes esperar a que salga de la habitación, al menos?]"

#   v "Nah, eso parece mucho caminar de más."
    v "[TRADUCIR: Nah, eso parece mucho caminar de más.]"

#   v "Puedes quitártela mientras estás aquí."
    v "[TRADUCIR: Puedes quitártela mientras estás aquí.]"

#   m "({i}¡Santo cielo!{/i})"
    m "[TRADUCIR: ({i}¡Santo cielo!{/i})]"

#   m "({i}Está medio desnuda... en mi casa.{/i})"
    m "[TRADUCIR: ({i}Está medio desnuda... en mi casa.{/i})]"

#   m "({i}Aunque no puedo quejarme mucho. Esos pechos son simplemente...{/i})"
    m "[TRADUCIR: ({i}Aunque no puedo quejarme mucho. Esos pechos son simplemente...{/i})]"

#   m "({i}E-espera, ¿qué está-{/i})"
    m "[TRADUCIR: ({i}E-espera, ¿qué está-{/i})]"

#   m "¡E-espera!"
    m "[TRADUCIR: ¡E-espera!]"

#   v "Tranquilo. Tengo puesto pantis..."
    v "[TRADUCIR: Tranquilo. Tengo puesto pantis...]"

#   m "Eso... no es realmente el problema aquí."
    m "[TRADUCIR: Eso... no es realmente el problema aquí.]"

#   m "({i}Mentiría si dijera que no es hermosa.{/i})"
    m "[TRADUCIR: ({i}Mentiría si dijera que no es hermosa.{/i})]"

#   m "({i}¿Pero qué onda con ella? ¿Por qué parece tan cómoda con un extraño?{/i})"
    m "[TRADUCIR: ({i}¿Pero qué onda con ella? ¿Por qué parece tan cómoda con un extraño?{/i})]"

#   m "({i}Necesito saber por qué se está comportando así.{/i})"
    m "[TRADUCIR: ({i}Necesito saber por qué se está comportando así.{/i})]"

#   m "Oye, ¿crees que podamos hablar un poco? Estoy confundido sobre algunas cosas."
    m "[TRADUCIR: Oye, ¿crees que podamos hablar un poco? Estoy confundido sobre algunas cosas.]"

#   v "¡Claro!"
    v "[TRADUCIR: ¡Claro!]"

#   m "({i}Y por primera vez... tengo miedo de sentarme en mi propia cama.{/i})"
    m "[TRADUCIR: ({i}Y por primera vez... tengo miedo de sentarme en mi propia cama.{/i})]"

#   m "({i}Es tan linda. Esto es peligroso.{/i})"
    m "[TRADUCIR: ({i}Es tan linda. Esto es peligroso.{/i})]"

#   v "Hola."
    v "[TRADUCIR: Hola.]"

#   m "Umm... hola."
    m "[TRADUCIR: Umm... hola.]"

#   m "Te preguntaré directo. ¿Por qué pareces tan cómoda conmigo?"
    m "[TRADUCIR: Te preguntaré directo. ¿Por qué pareces tan cómoda conmigo?]"

#   v "¿Hmm?"
    v "[TRADUCIR: ¿Hmm?]"

#   m "Bueno, solo nos conocimos hace unos días, y realmente no sabes nada de mí."
    m "[TRADUCIR: Bueno, solo nos conocimos hace unos días, y realmente no sabes nada de mí.]"

#   v "¡Es fácil! ¡Te amo!"
    v "[TRADUCIR: ¡Es fácil! ¡Te amo!]"

#   m "¿A-amor?!"
    m "[TRADUCIR: ¿A-amor?!]"

#   m "({i}¡Se está acercando mucho!)"
    m "[TRADUCIR: ({i}¡Se está acercando mucho!)]"

#   v "Cuando me salvaste el otro día, mi vida pasó frente a mis ojos."
    v "[TRADUCIR: Cuando me salvaste el otro día, mi vida pasó frente a mis ojos.]"

#   v "...y tú estuviste ahí en cada segundo."
    v "[TRADUCIR: ...y tú estuviste ahí en cada segundo.]"

#   m "({i}Oh, Dios. ¿Está hablando en serio?{/i})"
    m "[TRADUCIR: ({i}Oh, Dios. ¿Está hablando en serio?{/i})]"

#   m "Me alegra haberte salvado, pero ¿no deberías tener más cuidado?"
    m "[TRADUCIR: Me alegra haberte salvado, pero ¿no deberías tener más cuidado?]"

#   m "No sabes qué tipo de persona podría haber sido."
    m "[TRADUCIR: No sabes qué tipo de persona podría haber sido.]"

#   m "¿Y si hubiera decidido aprovechar la situación?"
    m "[TRADUCIR: ¿Y si hubiera decidido aprovechar la situación?]"

#   v "No me molestaría... si fueras tú."
    v "[TRADUCIR: No me molestaría... si fueras tú.]"

#   m "({i}¡Ese cuerpo! ¡Estoy luchando por mi vida aquí!{/i})"
    m "[TRADUCIR: ({i}¡Ese cuerpo! ¡Estoy luchando por mi vida aquí!{/i})]"

#   v "¿Te gusta la vista?"
    v "[TRADUCIR: ¿Te gusta la vista?]"

#   m "({i}No puedo negar lo sexy que se ve, pero ¿está bien que haga esto?{/i})"
    m "[TRADUCIR: ({i}No puedo negar lo sexy que se ve, pero ¿está bien que haga esto?{/i})]"

#   m "S-sí. Pero-"
    m "[TRADUCIR: S-sí. Pero-]"

#   v "Shh..."
    v "[TRADUCIR: Shh...]"

#   v "Quiero agradecerte por salvarme. No lo rechaces, ¿ok?"
    v "[TRADUCIR: Quiero agradecerte por salvarme. No lo rechaces, ¿ok?]"

#   m "({i}Joder, no creo que pueda ni aunque quisiera a estas alturas.{/i})"
    m "[TRADUCIR: ({i}Joder, no creo que pueda ni aunque quisiera a estas alturas.{/i})]"

#   m "E-eres muy hermosa, ¿sabes?"
    m "[TRADUCIR: E-eres muy hermosa, ¿sabes?]"

#   m "¿Q-qué?"
    m "[TRADUCIR: ¿Q-qué?]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}¡Santo cielo! ¡Son tan suaves!{/i})"
    m "[TRADUCIR: ({i}¡Santo cielo! ¡Son tan suaves!{/i})]"

#   m "({i}No puedo creer que esté haciendo esto...{/i})"
    m "[TRADUCIR: ({i}No puedo creer que esté haciendo esto...{/i})]"

#   m "({i}... pero no creo que pueda contenerme más.{/i})"
    m "[TRADUCIR: ({i}... pero no creo que pueda contenerme más.{/i})]"

#   v "E-espera, [name]."
    v "[TRADUCIR: E-espera, [name].]"

#   m "({i}Mierda, ¿la regué?)"
    m "[TRADUCIR: ({i}Mierda, ¿la regué?)]"

#   m "L-lo siento."
    m "[TRADUCIR: L-lo siento.]"

#   v "No lo estés. Me gusta, pero se supone que te estoy agradeciendo {i}a ti{/i}, ¿recuerdas?"
    v "[TRADUCIR: No lo estés. Me gusta, pero se supone que te estoy agradeciendo {i}a ti{/i}, ¿recuerdas?]"

#   m "S-sí, pero realmente no tienes que..."
    m "[TRADUCIR: S-sí, pero realmente no tienes que...]"

#   v "Solo relájate, ¿vale? Solo siéntate y déjame..."
    v "[TRADUCIR: Solo relájate, ¿vale? Solo siéntate y déjame...]"

#   v "..."
    v "[TRADUCIR: ...]"

#   v "Dios mío."
    v "[TRADUCIR: Dios mío.]"

#   m "¿E-estás bien?"
    m "[TRADUCIR: ¿E-estás bien?]"

#   v "V-visa preguntarme otra vez cuando termine."
    v "[TRADUCIR: V-visa preguntarme otra vez cuando termine.]"

#   m "({i}Mierda, solo el calor de su aliento se siente tan bien.{/i})"
    m "[TRADUCIR: ({i}Mierda, solo el calor de su aliento se siente tan bien.{/i})]"

#   m "({i}No quiero que se esfuerce demasiado-{/i})"
    m "[TRADUCIR: ({i}No quiero que se esfuerce demasiado-{/i})]"

#   v "Mmgh."
    v "[TRADUCIR: Mmgh.]"

#   m "({i}¡Maldita sea!{/i})"
    m "[TRADUCIR: ({i}¡Maldita sea!{/i})]"

#   m "Eso... se siente bien."
    m "[TRADUCIR: Eso... se siente bien.]"

#   v "*lame*"
    v "[TRADUCIR: *lame*]"

#   m "({i}Joder, se siente tan bien...{/i})"
    m "[TRADUCIR: ({i}Joder, se siente tan bien...{/i})]"

#   m "({i}¡Ella es una maldita experta en esto!{/i})"
    m "[TRADUCIR: ({i}¡Ella es una maldita experta en esto!{/i})]"

#   m "Te ves tan jodidamente sexy con la boca llena."
    m "[TRADUCIR: Te ves tan jodidamente sexy con la boca llena.]"

#   m "No sé cuánto más pueda aguantar."
    m "[TRADUCIR: No sé cuánto más pueda aguantar.]"

#   v "*respiración agitada*"
    v "[TRADUCIR: *respiración agitada*]"

#   v "No... termines todavía."
    v "[TRADUCIR: No... termines todavía.]"

#   v "Tengo que terminar de agradecerte. Te debo la vida, ¿recuerdas?"
    v "[TRADUCIR: Tengo que terminar de agradecerte. Te debo la vida, ¿recuerdas?]"

#   v "Mi vida... mi cuerpo... es todo tuyo, [name]."
    v "[TRADUCIR: Mi vida... mi cuerpo... es todo tuyo, [name].]"

#   m "({i}Mierda.{/i})"
    m "[TRADUCIR: ({i}Mierda.{/i})]"

#   m "Está bien. Lo aceptaré con gusto."
    m "[TRADUCIR: Está bien. Lo aceptaré con gusto.]"

#   v "Mmm..."
    v "[TRADUCIR: Mmm...]"

#   v "Voy a hacerte sentir muy feliz."
    v "[TRADUCIR: Voy a hacerte sentir muy feliz.]"

#   v "S-sólo relájate, ¿vale?"
    v "[TRADUCIR: S-sólo relájate, ¿vale?]"

#   m "({i}Suena nerviosa, pero no muestra duda alguna.{/i})"
    m "[TRADUCIR: ({i}Suena nerviosa, pero no muestra duda alguna.{/i})]"

#   v "*jadeo*"
    v "[TRADUCIR: *jadeo*]"

#   v "*respiración temblorosa*"
    v "[TRADUCIR: *respiración temblorosa*]"

#   m "¿Estás bien?"
    m "[TRADUCIR: ¿Estás bien?]"

#   v "S-sí. ¿Se siente bien?"
    v "[TRADUCIR: S-sí. ¿Se siente bien?]"

#   m "Muy bien. Me quieres coger con tantas ganas, ¿eh?"
    m "[TRADUCIR: Muy bien. Me quieres coger con tantas ganas, ¿eh?]"

#   v "Sí. P-por favor, déjame coger tu gran polla..."
    v "[TRADUCIR: Sí. P-por favor, déjame coger tu gran polla...]"

#   m "Está bien, hermosa. Muéstrame cuánto quieres agradecerme."
    m "[TRADUCIR: Está bien, hermosa. Muéstrame cuánto quieres agradecerme.]"

#   v "O-ohhhh..."
    v "[TRADUCIR: O-ohhhh...]"

#   v "¡Siii!"
    v "[TRADUCIR: ¡Siii!]"

#   m "N-no pares."
    m "[TRADUCIR: N-no pares.]"

#   v "T-tu polla me está... volviendo loca."
    v "[TRADUCIR: T-tu polla me está... volviendo loca.]"

#   m "Estoy... cerca."
    m "[TRADUCIR: Estoy... cerca.]"

#   v "[name]... por favor entra."
    v "[TRADUCIR: [name]... por favor entra.]"

#   v "Por favor... [name[0]]-[name]."
    v "[TRADUCIR: Por favor... [name[0]]-[name].]"

#   "Terminar."
    "[TRADUCIR: Terminar.]"

#   v "*chillido*"
    v "[TRADUCIR: *chillido*]"

#   m "¡Joder!"
    m "[TRADUCIR: ¡Joder!]"

#   m "Eres... increíble."
    m "[TRADUCIR: Eres... increíble.]"

#   v "Eso... se sintió tan bien."
    v "[TRADUCIR: Eso... se sintió tan bien.]"

#   m "({i}¡Esta chica fue una maldita maravilla!{/i})"
    m "[TRADUCIR: ({i}¡Esta chica fue una maldita maravilla!{/i})]"

#   m "({i}Me pregunto si estaría dispuesta a volver pronto.{/i})"
    m "[TRADUCIR: ({i}Me pregunto si estaría dispuesta a volver pronto.{/i})]"

#   v "[name]?"
    v "[TRADUCIR: [name]?]"

#   m "S-sí? ¿Estás bien?"
    m "[TRADUCIR: S-sí? ¿Estás bien?]"

#   v "Me gustaría agradecerte otra vez pronto, ¿vale?"
    v "[TRADUCIR: Me gustaría agradecerte otra vez pronto, ¿vale?]"

#   m "*se ríe* Claro. Aceptaré con gusto cualquier agradecimiento que me des."
    m "[TRADUCIR: *se ríe* Claro. Aceptaré con gusto cualquier agradecimiento que me des.]"

#   "¡Gracias por jugar! ¡Esperamos que hayas disfrutado!"
    "[TRADUCIR: ¡Gracias por jugar! ¡Esperamos que hayas disfrutado!]"

#   "Si te gustó el juego, por favor considera apoyarnos y revisar nuestros próximos cortos NSFW que vienen pronto."
    "[TRADUCIR: Si te gustó el juego, por favor considera apoyarnos y revisar nuestros próximos cortos NSFW que vienen pronto.]"

#   "¡Hasta la próxima! ¡Adiós!"
    "[TRADUCIR: ¡Hasta la próxima! ¡Adiós!]"

# ARQUIVO: .\Herramientas\script_final_corregido.rpy DIALOGOS: 272

#   define m = Character( "[name]"
    define m = Character( "[TRADUCIR: [name]]"

#   define mg = Character( "Sr. Galmeir"
    define mg = Character( "[TRADUCIR: Sr. Galmeir]"

#   define g = Character( "Chica"
    define g = Character( "[TRADUCIR: Chica]"

#   define v = Character( "Victoria"
    define v = Character( "[TRADUCIR: Victoria]"

#   show text "{color=#ffffff}ADVERTENCIA: El juego contiene contenido sexual. Todos los personajes son mayores de 18 años. Se recomienda discreción.{/color}"
    show text "[TRADUCIR: {color=#ffffff}ADVERTENCIA: El juego contiene contenido sexual. Todos los personajes son mayores de 18 años. Se recomienda discreción.{/color}]"

#   image introvid = Movie(channel= "xss"
    image introvid = Movie(channel= "[TRADUCIR: xss]"

#   image introvid2 = Movie(channel= "xrus"
    image introvid2 = Movie(channel= "[TRADUCIR: xrus]"

#   name = renpy.input( "¿Cómo te llamas? (Deja en blanco para 'Matt')."
    name = renpy.input( "[TRADUCIR: ¿Cómo te llamas? (Deja en blanco para 'Matt').]"

#   name = name.strip() or "Matt"
    name = name.strip() or "[TRADUCIR: Matt]"

#   m "¿Hmm?"
    m "[TRADUCIR: ¿Hmm?]"

#   m "({i}*suspiro* Parece que se coló de nuevo.{/i})"
    m "[TRADUCIR: ({i}*suspiro* Parece que se coló de nuevo.{/i})]"

#   m "({i}Este último mes ha sido una locura total.{/i})"
    m "[TRADUCIR: ({i}Este último mes ha sido una locura total.{/i})]"

#   m "({i}A veces me pregunto cómo habrían sido las cosas si todo hubiera salido diferente.{/i})"
    m "[TRADUCIR: ({i}A veces me pregunto cómo habrían sido las cosas si todo hubiera salido diferente.{/i})]"

#   m "({i}Es extraño cómo una pequeña decisión puede cambiarlo todo.{/i})"
    m "[TRADUCIR: ({i}Es extraño cómo una pequeña decisión puede cambiarlo todo.{/i})]"

#   m "({i}...una acción simple puede poner tu vida patas arriba.{/i})"
    m "[TRADUCIR: ({i}...una acción simple puede poner tu vida patas arriba.{/i})]"

#   m "({i}...y una simple mirada... puede cambiar el destino.{/i})"
    m "[TRADUCIR: ({i}...y una simple mirada... puede cambiar el destino.{/i})]"

#   m "¿Entonces? ¿Qué opinas?"
    m "[TRADUCIR: ¿Entonces? ¿Qué opinas?]"

#   mg "¿Quieres la respuesta honesta?"
    mg "[TRADUCIR: ¿Quieres la respuesta honesta?]"

#   m "Eh... ¿sí? Por eso lo entregué."
    m "[TRADUCIR: Eh... ¿sí? Por eso lo entregué.]"

#   mg "Sinceramente, creo que estás asumiendo demasiado."
    mg "[TRADUCIR: Sinceramente, creo que estás asumiendo demasiado.]"

#   mg "Tu trabajo es definitivamente superior al promedio, pero con las clases por venir, no creo que puedas con toda la carga."
    mg "[TRADUCIR: Tu trabajo es definitivamente superior al promedio, pero con las clases por venir, no creo que puedas con toda la carga.]"

#   m "Con todo respeto, señor, creo que puedo manejar ambas cosas."
    m "[TRADUCIR: Con todo respeto, señor, creo que puedo manejar ambas cosas.]"

#   mg "'Puedes hacer dos cosas a la vez, pero no puedes concentrarte efectivamente en dos cosas a la vez.'"
    mg "[TRADUCIR: 'Puedes hacer dos cosas a la vez, pero no puedes concentrarte efectivamente en dos cosas a la vez.']"

#   m "...Gary Keller."
    m "[TRADUCIR: ...Gary Keller.]"

#   mg "¡Exactamente!"
    mg "[TRADUCIR: ¡Exactamente!]"

#   mg "Eres un trabajador incansable, [name]. La mejor ética de trabajo que he visto en mucho tiempo."
    mg "[TRADUCIR: Eres un trabajador incansable, [name]. La mejor ética de trabajo que he visto en mucho tiempo.]"

#   mg "Pero no quiero verte fracasar. Tendrás nuestras puertas abiertas cuando termine el semestre."
    mg "[TRADUCIR: Pero no quiero verte fracasar. Tendrás nuestras puertas abiertas cuando termine el semestre.]"

#   m "G-gracias, señor."
    m "[TRADUCIR: G-gracias, señor.]"

#   m "({i}Y así... me quedé sin trabajo durante el último mes del verano.{/i})"
    m "[TRADUCIR: ({i}Y así... me quedé sin trabajo durante el último mes del verano.{/i})]"

#   m "({i}No estaba en apuros económicos, pero quería hacer algo más que meter la cara en los libros cuando comenzara el nuevo curso.{/i})"
    m "[TRADUCIR: ({i}No estaba en apuros económicos, pero quería hacer algo más que meter la cara en los libros cuando comenzara el nuevo curso.{/i})]"

#   m "({i}Mi padre y yo dejamos esta ciudad cuando estaba en primaria, cuando lo trasladaron por trabajo.{/i})"
    m "[TRADUCIR: ({i}Mi padre y yo dejamos esta ciudad cuando estaba en primaria, cuando lo trasladaron por trabajo.{/i})]"

#   m "({i}Después de que tuvo que mudarse al extranjero por un ascenso, ya no tenía motivos para quedarme en nuestra nueva ciudad, así que decidí regresar a mi ciudad natal.{/i})"
    m "[TRADUCIR: ({i}Después de que tuvo que mudarse al extranjero por un ascenso, ya no tenía motivos para quedarme en nuestra nueva ciudad, así que decidí regresar a mi ciudad natal.{/i})]"

#   m "({i}A pesar de haber crecido aquí, era bastante solitario, y no interactuaba con mucha gente de mi edad.{/i})"
    m "[TRADUCIR: ({i}A pesar de haber crecido aquí, era bastante solitario, y no interactuaba con mucha gente de mi edad.{/i})]"

#   m "({i}Cuando me mudé, no había muchas personas que me diera pena dejar atrás, y nadie a quien tuviera ganas de volver a ver.{/i})"
    m "[TRADUCIR: ({i}Cuando me mudé, no había muchas personas que me diera pena dejar atrás, y nadie a quien tuviera ganas de volver a ver.{/i})]"

#   m "({i}A pesar de que mi padre es muy rico, no soportaba la idea de vivir a costa de otros, y estaba decidido a generar mis propios ingresos.{/i})"
    m "[TRADUCIR: ({i}A pesar de que mi padre es muy rico, no soportaba la idea de vivir a costa de otros, y estaba decidido a generar mis propios ingresos.{/i})]"

#   m "({i}Eventualmente ahorré lo suficiente para tener mi propio lugar, pero me costaba encontrar algo con qué ocupar mi tiempo.{/i})"
    m "[TRADUCIR: ({i}Eventualmente ahorré lo suficiente para tener mi propio lugar, pero me costaba encontrar algo con qué ocupar mi tiempo.{/i})]"

#   m "({i}No conocer a nadie en la ciudad no ayudaba mucho.{/i})"
    m "[TRADUCIR: ({i}No conocer a nadie en la ciudad no ayudaba mucho.{/i})]"

#   m "({i}Pero una sola interacción aquel día lluvioso volviendo de la oficina...{/i})"
    m "[TRADUCIR: ({i}Pero una sola interacción aquel día lluvioso volviendo de la oficina...{/i})]"

#   m "({i}...cambiaría por completo el último mes de mi verano.{/i})"
    m "[TRADUCIR: ({i}...cambiaría por completo el último mes de mi verano.{/i})]"

#   m "({i}Nunca fui bueno con las mujeres.{/i})"
    m "[TRADUCIR: ({i}Nunca fui bueno con las mujeres.{/i})]"

#   m "({i}No era porque fuera feo ni nada, simplemente nunca sabía qué decir.{/i})"
    m "[TRADUCIR: ({i}No era porque fuera feo ni nada, simplemente nunca sabía qué decir.{/i})]"

#   m "({i}Siempre decía algo estúpido o estaba en el lugar equivocado en el momento equivocado.{/i})"
    m "[TRADUCIR: ({i}Siempre decía algo estúpido o estaba en el lugar equivocado en el momento equivocado.{/i})]"

#   m "({i}Tampoco era alguien que creyera en el destino o el azar.{/i})"
    m "[TRADUCIR: ({i}Tampoco era alguien que creyera en el destino o el azar.{/i})]"

#   m "({i}Así que, sea lo que sea que me hizo ser el héroe ese día...{/i})"
    m "[TRADUCIR: ({i}Así que, sea lo que sea que me hizo ser el héroe ese día...{/i})]"

#   m "({i}Me metió en una situación más grande de lo que cualquier héroe podría manejar.{/i})"
    m "[TRADUCIR: ({i}Me metió en una situación más grande de lo que cualquier héroe podría manejar.{/i})]"

#   m "({i}...mucho más grande.{/i})"
    m "[TRADUCIR: ({i}...mucho más grande.{/i})]"

#   m "S-sí señor. Entiendo."
    m "[TRADUCIR: S-sí señor. Entiendo.]"

#   m "Gracias. Adiós."
    m "[TRADUCIR: Gracias. Adiós.]"

#   m "({i}Otra entrevista fallida.{/i})"
    m "[TRADUCIR: ({i}Otra entrevista fallida.{/i})]"

#   m "({i}Con las clases a solo unas semanas, no tenía idea de cómo iba a pasar el resto del verano.{/i})"
    m "[TRADUCIR: ({i}Con las clases a solo unas semanas, no tenía idea de cómo iba a pasar el resto del verano.{/i})]"

#   m "({i}Tal vez alguna solicitud de trabajo llegó por correo.{/i})"
    m "[TRADUCIR: ({i}Tal vez alguna solicitud de trabajo llegó por correo.{/i})]"

#   m "({i}...nope. Solo correo basura.{/i})"
    m "[TRADUCIR: ({i}...nope. Solo correo basura.{/i})]"

#   m "({i}A este paso, solo estudiaré y dormiré todo el semestre.{/i})"
    m "[TRADUCIR: ({i}A este paso, solo estudiaré y dormiré todo el semestre.{/i})]"

#   m "¿Hmm?"
    m "[TRADUCIR: ¿Hmm?]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}Espera un segundo.{/i})"
    m "[TRADUCIR: ({i}Espera un segundo.{/i})]"

#   m "¿Hola?"
    m "[TRADUCIR: ¿Hola?]"

#   g "*jadeo*"
    g "[TRADUCIR: *jadeo*]"

#   m "¿Hay alguien ahí?"
    m "[TRADUCIR: ¿Hay alguien ahí?]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "Eh, no voy a morder."
    m "[TRADUCIR: Eh, no voy a morder.]"

#   m "({i}Una chica...{/i})"
    m "[TRADUCIR: ({i}Una chica...{/i})]"

#   m "Eh, ¿hay una razón por la que te escondes?"
    m "[TRADUCIR: Eh, ¿hay una razón por la que te escondes?]"

#   m "Si quieres hablar, no tienes que ser tímida."
    m "[TRADUCIR: Si quieres hablar, no tienes que ser tímida.]"

#   g "..."
    g "[TRADUCIR: ...]"

#   m "({i}¿Hmm?{/i})"
    m "[TRADUCIR: ({i}¿Hmm?{/i})]"

#   m "({i}Espera... ¿es la chica del otro día?{/i})"
    m "[TRADUCIR: ({i}Espera... ¿es la chica del otro día?{/i})]"

#   m "({i}Nunca supe su nombre.{/i})"
    m "[TRADUCIR: ({i}Nunca supe su nombre.{/i})]"

#   m "({i}Después del incidente simplemente... se fue corriendo.{/i})"
    m "[TRADUCIR: ({i}Después del incidente simplemente... se fue corriendo.{/i})]"

#   m "({i}Ahora que puedo verla bien... es bastante linda.{/i})"
    m "[TRADUCIR: ({i}Ahora que puedo verla bien... es bastante linda.{/i})]"

#   m "Eh, hola. Me llamo [name]."
    m "[TRADUCIR: Eh, hola. Me llamo [name].]"

#   m "Eres la chica del otro día, ¿cierto?"
    m "[TRADUCIR: Eres la chica del otro día, ¿cierto?]"

#   v "Sí. Soy Victoria."
    v "[TRADUCIR: Sí. Soy Victoria.]"

#   m "¿Victoria, eh? Es un bonito nombre."
    m "[TRADUCIR: ¿Victoria, eh? Es un bonito nombre.]"

#   m "Nunca tuve la oportunidad de hablar contigo después de... ya sabes."
    m "[TRADUCIR: Nunca tuve la oportunidad de hablar contigo después de... ya sabes.]"

#   m "¿Estás bien?"
    m "[TRADUCIR: ¿Estás bien?]"

#   v "..."
    v "[TRADUCIR: ...]"

#   m "({i}¿Hmm? ¿Es tímida?{/i})"
    m "[TRADUCIR: ({i}¿Hmm? ¿Es tímida?{/i})]"

#   m "¿Hola? ¿Victoria?"
    m "[TRADUCIR: ¿Hola? ¿Victoria?]"

#   v "Muchas gracias, y... estoy bien."
    v "[TRADUCIR: Muchas gracias, y... estoy bien.]"

#   m "Me alegra escuchar eso. Me preocupé cuando saliste corriendo."
    m "[TRADUCIR: Me alegra escuchar eso. Me preocupé cuando saliste corriendo.]"

#   m "Entonces, eh... ¿qué te trae por aquí?"
    m "[TRADUCIR: Entonces, eh... ¿qué te trae por aquí?]"

#   m "({i}¿Cómo sabe dónde vivo?{/i})"
    m "[TRADUCIR: ({i}¿Cómo sabe dónde vivo?{/i})]"

#   v "Solo quería... agradecerte como es debido."
    v "[TRADUCIR: Solo quería... agradecerte como es debido.]"

#   v "No tuve oportunidad de hacerlo el otro día."
    v "[TRADUCIR: No tuve oportunidad de hacerlo el otro día.]"

#   m "Oh, no tienes que hacer eso."
    m "[TRADUCIR: Oh, no tienes que hacer eso.]"

#   m "Solo hice lo que cualquiera haría."
    m "[TRADUCIR: Solo hice lo que cualquiera haría.]"

#   v "No, lo digo en serio."
    v "[TRADUCIR: No, lo digo en serio.]"

#   v "Te debo la vida."
    v "[TRADUCIR: Te debo la vida.]"

#   m "({i}Wow, se lo toma muy en serio.{/i})"
    m "[TRADUCIR: ({i}Wow, se lo toma muy en serio.{/i})]"

#   m "Bueno, o sea... no hice mucho."
    m "[TRADUCIR: Bueno, o sea... no hice mucho.]"

#   m "Pero si realmente quieres, no me voy a oponer."
    m "[TRADUCIR: Pero si realmente quieres, no me voy a oponer.]"

#   m "Entonces, ¿qué tenías en mente?"
    m "[TRADUCIR: Entonces, ¿qué tenías en mente?]"

#   v "Umm... cierra los ojos."
    v "[TRADUCIR: Umm... cierra los ojos.]"

#   m "¿Q-qué? ¿Por qué debería-?"
    m "[TRADUCIR: ¿Q-qué? ¿Por qué debería-?]"

#   v "Solo hazlo."
    v "[TRADUCIR: Solo hazlo.]"

#   m "O-okey."
    m "[TRADUCIR: O-okey.]"

#   m "({i}No sé por qué, pero sentí la necesidad de hacer lo que decía.{/i})"
    m "[TRADUCIR: ({i}No sé por qué, pero sentí la necesidad de hacer lo que decía.{/i})]"

#   m "({i}¿Por qué me pediría que-?{/i})"
    m "[TRADUCIR: ({i}¿Por qué me pediría que-?{/i})]"

#   m "¡¡¡!!!"
    m "[TRADUCIR: ¡¡¡!!!]"

#   m "({i}¡¿Q-qué?!{/i})"
    m "[TRADUCIR: ({i}¡¿Q-qué?!{/i})]"

#   m "({i}¡¿Un beso?!{/i})"
    m "[TRADUCIR: ({i}¡¿Un beso?!{/i})]"

#   m "({i}¡¿Y no un beso cualquiera, sino un beso francés?!{/i})"
    m "[TRADUCIR: ({i}¡¿Y no un beso cualquiera, sino un beso francés?!{/i})]"

#   m "({i}¡Jamás esperé que hiciera eso!{/i})"
    m "[TRADUCIR: ({i}¡Jamás esperé que hiciera eso!{/i})]"

#   v "Eres buen besador."
    v "[TRADUCIR: Eres buen besador.]"

#   m "¿G-gracias?"
    m "[TRADUCIR: ¿G-gracias?]"

#   m "({i}No sé cómo sentirme con esto.{/i})"
    m "[TRADUCIR: ({i}No sé cómo sentirme con esto.{/i})]"

#   m "({i}Digo, le salvé la vida, pero...{/i})"
    m "[TRADUCIR: ({i}Digo, le salvé la vida, pero...{/i})]"

#   m "({i}No esperaba que fuera tan... directa.{/i})"
    m "[TRADUCIR: ({i}No esperaba que fuera tan... directa.{/i})]"

#   m "({i}Pero... no puedo decir que no me gustó.{/i})"
    m "[TRADUCIR: ({i}Pero... no puedo decir que no me gustó.{/i})]"

#   m "({i}Será mejor que vuelva adentro antes de que esto se salga de control.{/i})"
    m "[TRADUCIR: ({i}Será mejor que vuelva adentro antes de que esto se salga de control.{/i})]"

#   m "Me... alegra haberte salvado, pero... de verdad tengo que irme ahora."
    m "[TRADUCIR: Me... alegra haberte salvado, pero... de verdad tengo que irme ahora.]"

#   v "..."
    v "[TRADUCIR: ...]"

#   m "({i}Pasaron unos días y no había señales de Victoria.{/i})"
    m "[TRADUCIR: ({i}Pasaron unos días y no había señales de Victoria.{/i})]"

#   m "({i}Pero entonces, de la nada...{/i})"
    m "[TRADUCIR: ({i}Pero entonces, de la nada...{/i})]"

#   m "({i}...ella regresó.{/i})"
    m "[TRADUCIR: ({i}...ella regresó.{/i})]"

#   m "({i}Pensé que si la ignoraba se iría.{/i})"
    m "[TRADUCIR: ({i}Pensé que si la ignoraba se iría.{/i})]"

#   m "({i}Pero día tras día...{/i})"
    m "[TRADUCIR: ({i}Pero día tras día...{/i})]"

#   m "({i}...seguía volviendo.{/i})"
    m "[TRADUCIR: ({i}...seguía volviendo.{/i})]"

#   m "*suspiro*"
    m "[TRADUCIR: *suspiro*]"

#   m "({i}Esto se está volviendo ridículo.{/i})"
    m "[TRADUCIR: ({i}Esto se está volviendo ridículo.{/i})]"

#   m "({i}¿De verdad está parada ahí bajo la lluvia?{/i})"
    m "[TRADUCIR: ({i}¿De verdad está parada ahí bajo la lluvia?{/i})]"

#   m "({i}Si sigue así seguro se va a enfermar.{/i})"
    m "[TRADUCIR: ({i}Si sigue así seguro se va a enfermar.{/i})]"

#   m "({i}E-espera un segundo...{/i})"
    m "[TRADUCIR: ({i}E-espera un segundo...{/i})]"

#   m "({i}¿No está usando sostén?{/i})"
    m "[TRADUCIR: ({i}¿No está usando sostén?{/i})]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}Maldita sea. Por supuesto que me ve mirando.{/i})"
    m "[TRADUCIR: ({i}Maldita sea. Por supuesto que me ve mirando.{/i})]"

#   v "Hola."
    v "[TRADUCIR: Hola.]"

#   m 'Sí, no me vengas con un "Hola"
    m 'Sí, no me vengas con un "[TRADUCIR: Hola]"

#   m "¿Qué puede ser tan importante como para quedarte bajo la lluvia?"
    m "[TRADUCIR: ¿Qué puede ser tan importante como para quedarte bajo la lluvia?]"

#   m "Te vas a enfermar si sigues ahí."
    m "[TRADUCIR: Te vas a enfermar si sigues ahí.]"

#   v "...¿bueno? ¿No me vas a invitar a pasar?"
    v "[TRADUCIR: ...¿bueno? ¿No me vas a invitar a pasar?]"

#   m "({i}Esta chica es un problema.{/i})"
    m "[TRADUCIR: ({i}Esta chica es un problema.{/i})]"

#   m "({i}Pero dadas las circunstancias...{/i})"
    m "[TRADUCIR: ({i}Pero dadas las circunstancias...{/i})]"

#   m "*suspiro* Está bien, pero solo hasta que pase la lluvia."
    m "[TRADUCIR: *suspiro* Está bien, pero solo hasta que pase la lluvia.]"

#   v "Mhm."
    v "[TRADUCIR: Mhm.]"

#   m "({i}Sí... definitivamente un problema.{/i})"
    m "[TRADUCIR: ({i}Sí... definitivamente un problema.{/i})]"

#   m "Bueno, dijeron que la lluvia debería parar en unas horas, así que-"
    m "[TRADUCIR: Bueno, dijeron que la lluvia debería parar en unas horas, así que-]"

#   m "({i}...y me está ignorando.{/i})"
    m "[TRADUCIR: ({i}...y me está ignorando.{/i})]"

#   v "Bonito lugar."
    v "[TRADUCIR: Bonito lugar.]"

#   m "*suspiro* Gracias, supongo."
    m "[TRADUCIR: *suspiro* Gracias, supongo.]"

#   v "Entonces... ¿y ahora qué?"
    v "[TRADUCIR: Entonces... ¿y ahora qué?]"

#   m "({i}Problemas.{/i})"
    m "[TRADUCIR: ({i}Problemas.{/i})]"

#   m "B-bueno, iré a ver si tengo algo seco que puedas usar, para empezar."
    m "[TRADUCIR: B-bueno, iré a ver si tengo algo seco que puedas usar, para empezar.]"

#   m "¿Podrías intentar no romper nada mientras tanto?"
    m "[TRADUCIR: ¿Podrías intentar no romper nada mientras tanto?]"

#   v "Mhm."
    v "[TRADUCIR: Mhm.]"

#   m "*suspiro*"
    m "[TRADUCIR: *suspiro*]"

#   m "Bien, ya estoy de vuelta."
    m "[TRADUCIR: Bien, ya estoy de vuelta.]"

#   m "Lo mejor que pude encontrar fue-"
    m "[TRADUCIR: Lo mejor que pude encontrar fue-]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}¿Se fue?{/i})"
    m "[TRADUCIR: ({i}¿Se fue?{/i})]"

#   m "({i}No tengo idea de qué pasa por la cabeza de esta chica.{/i})"
    m "[TRADUCIR: ({i}No tengo idea de qué pasa por la cabeza de esta chica.{/i})]"

#   m "({i}Definitivamente parecía-{/i})"
    m "[TRADUCIR: ({i}Definitivamente parecía-{/i})]"

#   m "."
    m "[TRADUCIR: .]"

#   m ".."
    m "[TRADUCIR: ..]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}¡¿Qué demonios?!{/i})"
    m "[TRADUCIR: ({i}¡¿Qué demonios?!{/i})]"

#   v "Oh, ya regresaste."
    v "[TRADUCIR: Oh, ya regresaste.]"

#   m "Sí, entonces... ¿me puedes decir por qué decidiste que mi cama era el mejor lugar para esperar?"
    m "[TRADUCIR: Sí, entonces... ¿me puedes decir por qué decidiste que mi cama era el mejor lugar para esperar?]"

#   v "Bueno, porque es cómoda."
    v "[TRADUCIR: Bueno, porque es cómoda.]"

#   m "B-bueno, sí, pero-"
    m "[TRADUCIR: B-bueno, sí, pero-]"

#   "*aclara la garganta*"
    "[TRADUCIR: *aclara la garganta*]"

#   m "De todas formas, no tengo ropa de mujer, pero encontré una camisa extragrande que podrías usar."
    m "[TRADUCIR: De todas formas, no tengo ropa de mujer, pero encontré una camisa extragrande que podrías usar.]"

#   m "Pondré tu ropa mojada en la secadora, pero puedes usar esto mientras termina."
    m "[TRADUCIR: Pondré tu ropa mojada en la secadora, pero puedes usar esto mientras termina.]"

#   v "¡Está bien!"
    v "[TRADUCIR: ¡Está bien!]"

#   m "¡W-woah!"
    m "[TRADUCIR: ¡W-woah!]"

#   m "¿Qué estás haciendo?"
    m "[TRADUCIR: ¿Qué estás haciendo?]"

#   v "Umm... ¿quitándome la ropa? ¿Cómo más la vas a secar?"
    v "[TRADUCIR: Umm... ¿quitándome la ropa? ¿Cómo más la vas a secar?]"

#   m "({i}Eso... es un buen punto.{/i})"
    m "[TRADUCIR: ({i}Eso... es un buen punto.{/i})]"

#   m "P-pero, ¿no puedes esperar a que salga de la habitación, al menos?"
    m "[TRADUCIR: P-pero, ¿no puedes esperar a que salga de la habitación, al menos?]"

#   v "Nah, eso parece mucho caminar de más."
    v "[TRADUCIR: Nah, eso parece mucho caminar de más.]"

#   v "Puedes quitártela mientras estás aquí."
    v "[TRADUCIR: Puedes quitártela mientras estás aquí.]"

#   m "({i}¡Santo cielo!{/i})"
    m "[TRADUCIR: ({i}¡Santo cielo!{/i})]"

#   m "({i}Está medio desnuda... en mi casa.{/i})"
    m "[TRADUCIR: ({i}Está medio desnuda... en mi casa.{/i})]"

#   m "({i}Aunque no puedo quejarme mucho. Esos pechos son simplemente...{/i})"
    m "[TRADUCIR: ({i}Aunque no puedo quejarme mucho. Esos pechos son simplemente...{/i})]"

#   m "({i}E-espera, ¿qué está-{/i})"
    m "[TRADUCIR: ({i}E-espera, ¿qué está-{/i})]"

#   m "¡E-espera!"
    m "[TRADUCIR: ¡E-espera!]"

#   v "Tranquilo. Tengo puesto pantis..."
    v "[TRADUCIR: Tranquilo. Tengo puesto pantis...]"

#   m "Eso... no es realmente el problema aquí."
    m "[TRADUCIR: Eso... no es realmente el problema aquí.]"

#   m "({i}Mentiría si dijera que no es hermosa.{/i})"
    m "[TRADUCIR: ({i}Mentiría si dijera que no es hermosa.{/i})]"

#   m "({i}¿Pero qué onda con ella? ¿Por qué parece tan cómoda con un extraño?{/i})"
    m "[TRADUCIR: ({i}¿Pero qué onda con ella? ¿Por qué parece tan cómoda con un extraño?{/i})]"

#   m "({i}Necesito saber por qué se está comportando así.{/i})"
    m "[TRADUCIR: ({i}Necesito saber por qué se está comportando así.{/i})]"

#   m "Oye, ¿crees que podamos hablar un poco? Estoy confundido sobre algunas cosas."
    m "[TRADUCIR: Oye, ¿crees que podamos hablar un poco? Estoy confundido sobre algunas cosas.]"

#   v "¡Claro!"
    v "[TRADUCIR: ¡Claro!]"

#   m "({i}Y por primera vez... tengo miedo de sentarme en mi propia cama.{/i})"
    m "[TRADUCIR: ({i}Y por primera vez... tengo miedo de sentarme en mi propia cama.{/i})]"

#   m "({i}Es tan linda. Esto es peligroso.{/i})"
    m "[TRADUCIR: ({i}Es tan linda. Esto es peligroso.{/i})]"

#   v "Hola."
    v "[TRADUCIR: Hola.]"

#   m "Umm... hola."
    m "[TRADUCIR: Umm... hola.]"

#   m "Te preguntaré directo. ¿Por qué pareces tan cómoda conmigo?"
    m "[TRADUCIR: Te preguntaré directo. ¿Por qué pareces tan cómoda conmigo?]"

#   v "¿Hmm?"
    v "[TRADUCIR: ¿Hmm?]"

#   m "Bueno, solo nos conocimos hace unos días, y realmente no sabes nada de mí."
    m "[TRADUCIR: Bueno, solo nos conocimos hace unos días, y realmente no sabes nada de mí.]"

#   v "¡Es fácil! ¡Te amo!"
    v "[TRADUCIR: ¡Es fácil! ¡Te amo!]"

#   m "¿A-amor?!"
    m "[TRADUCIR: ¿A-amor?!]"

#   m "({i}¡Se está acercando mucho!)"
    m "[TRADUCIR: ({i}¡Se está acercando mucho!)]"

#   v "Cuando me salvaste el otro día, mi vida pasó frente a mis ojos."
    v "[TRADUCIR: Cuando me salvaste el otro día, mi vida pasó frente a mis ojos.]"

#   v "...y tú estuviste ahí en cada segundo."
    v "[TRADUCIR: ...y tú estuviste ahí en cada segundo.]"

#   m "({i}Oh, Dios. ¿Está hablando en serio?{/i})"
    m "[TRADUCIR: ({i}Oh, Dios. ¿Está hablando en serio?{/i})]"

#   m "Me alegra haberte salvado, pero ¿no deberías tener más cuidado?"
    m "[TRADUCIR: Me alegra haberte salvado, pero ¿no deberías tener más cuidado?]"

#   m "No sabes qué tipo de persona podría haber sido."
    m "[TRADUCIR: No sabes qué tipo de persona podría haber sido.]"

#   m "¿Y si hubiera decidido aprovechar la situación?"
    m "[TRADUCIR: ¿Y si hubiera decidido aprovechar la situación?]"

#   v "No me molestaría... si fueras tú."
    v "[TRADUCIR: No me molestaría... si fueras tú.]"

#   m "({i}¡Ese cuerpo! ¡Estoy luchando por mi vida aquí!{/i})"
    m "[TRADUCIR: ({i}¡Ese cuerpo! ¡Estoy luchando por mi vida aquí!{/i})]"

#   v "¿Te gusta la vista?"
    v "[TRADUCIR: ¿Te gusta la vista?]"

#   m "({i}No puedo negar lo sexy que se ve, pero ¿está bien que haga esto?{/i})"
    m "[TRADUCIR: ({i}No puedo negar lo sexy que se ve, pero ¿está bien que haga esto?{/i})]"

#   m "S-sí. Pero-"
    m "[TRADUCIR: S-sí. Pero-]"

#   v "Shh..."
    v "[TRADUCIR: Shh...]"

#   v "Quiero agradecerte por salvarme. No lo rechaces, ¿ok?"
    v "[TRADUCIR: Quiero agradecerte por salvarme. No lo rechaces, ¿ok?]"

#   m "({i}Joder, no creo que pueda ni aunque quisiera a estas alturas.{/i})"
    m "[TRADUCIR: ({i}Joder, no creo que pueda ni aunque quisiera a estas alturas.{/i})]"

#   m "E-eres muy hermosa, ¿sabes?"
    m "[TRADUCIR: E-eres muy hermosa, ¿sabes?]"

#   m "¿Q-qué?"
    m "[TRADUCIR: ¿Q-qué?]"

#   m "..."
    m "[TRADUCIR: ...]"

#   m "({i}¡Santo cielo! ¡Son tan suaves!{/i})"
    m "[TRADUCIR: ({i}¡Santo cielo! ¡Son tan suaves!{/i})]"

#   m "({i}No puedo creer que esté haciendo esto...{/i})"
    m "[TRADUCIR: ({i}No puedo creer que esté haciendo esto...{/i})]"

#   m "({i}... pero no creo que pueda contenerme más.{/i})"
    m "[TRADUCIR: ({i}... pero no creo que pueda contenerme más.{/i})]"

#   v "E-espera, [name]."
    v "[TRADUCIR: E-espera, [name].]"

#   m "({i}Mierda, ¿la regué?)"
    m "[TRADUCIR: ({i}Mierda, ¿la regué?)]"

#   m "L-lo siento."
    m "[TRADUCIR: L-lo siento.]"

#   v "No lo estés. Me gusta, pero se supone que te estoy agradeciendo {i}a ti{/i}, ¿recuerdas?"
    v "[TRADUCIR: No lo estés. Me gusta, pero se supone que te estoy agradeciendo {i}a ti{/i}, ¿recuerdas?]"

#   m "S-sí, pero realmente no tienes que..."
    m "[TRADUCIR: S-sí, pero realmente no tienes que...]"

#   v "Solo relájate, ¿vale? Solo siéntate y déjame..."
    v "[TRADUCIR: Solo relájate, ¿vale? Solo siéntate y déjame...]"

#   v "..."
    v "[TRADUCIR: ...]"

#   v "Dios mío."
    v "[TRADUCIR: Dios mío.]"

#   m "¿E-estás bien?"
    m "[TRADUCIR: ¿E-estás bien?]"

#   v "V-visa preguntarme otra vez cuando termine."
    v "[TRADUCIR: V-visa preguntarme otra vez cuando termine.]"

#   m "({i}Mierda, solo el calor de su aliento se siente tan bien.{/i})"
    m "[TRADUCIR: ({i}Mierda, solo el calor de su aliento se siente tan bien.{/i})]"

#   m "({i}No quiero que se esfuerce demasiado-{/i})"
    m "[TRADUCIR: ({i}No quiero que se esfuerce demasiado-{/i})]"

#   v "Mmgh."
    v "[TRADUCIR: Mmgh.]"

#   m "({i}¡Maldita sea!{/i})"
    m "[TRADUCIR: ({i}¡Maldita sea!{/i})]"

#   m "Eso... se siente bien."
    m "[TRADUCIR: Eso... se siente bien.]"

#   v "*lame*"
    v "[TRADUCIR: *lame*]"

#   m "({i}Joder, se siente tan bien...{/i})"
    m "[TRADUCIR: ({i}Joder, se siente tan bien...{/i})]"

#   m "({i}¡Ella es una maldita experta en esto!{/i})"
    m "[TRADUCIR: ({i}¡Ella es una maldita experta en esto!{/i})]"

#   m "Te ves tan jodidamente sexy con la boca llena."
    m "[TRADUCIR: Te ves tan jodidamente sexy con la boca llena.]"

#   m "No sé cuánto más pueda aguantar."
    m "[TRADUCIR: No sé cuánto más pueda aguantar.]"

#   v "*respiración agitada*"
    v "[TRADUCIR: *respiración agitada*]"

#   v "No... termines todavía."
    v "[TRADUCIR: No... termines todavía.]"

#   v "Tengo que terminar de agradecerte. Te debo la vida, ¿recuerdas?"
    v "[TRADUCIR: Tengo que terminar de agradecerte. Te debo la vida, ¿recuerdas?]"

#   v "Mi vida... mi cuerpo... es todo tuyo, [name]."
    v "[TRADUCIR: Mi vida... mi cuerpo... es todo tuyo, [name].]"

#   m "({i}Mierda.{/i})"
    m "[TRADUCIR: ({i}Mierda.{/i})]"

#   m "Está bien. Lo aceptaré con gusto."
    m "[TRADUCIR: Está bien. Lo aceptaré con gusto.]"

#   v "Mmm..."
    v "[TRADUCIR: Mmm...]"

#   v "Voy a hacerte sentir muy feliz."
    v "[TRADUCIR: Voy a hacerte sentir muy feliz.]"

#   v "S-sólo relájate, ¿vale?"
    v "[TRADUCIR: S-sólo relájate, ¿vale?]"

#   m "({i}Suena nerviosa, pero no muestra duda alguna.{/i})"
    m "[TRADUCIR: ({i}Suena nerviosa, pero no muestra duda alguna.{/i})]"

#   v "*jadeo*"
    v "[TRADUCIR: *jadeo*]"

#   v "*respiración temblorosa*"
    v "[TRADUCIR: *respiración temblorosa*]"

#   m "¿Estás bien?"
    m "[TRADUCIR: ¿Estás bien?]"

#   v "S-sí. ¿Se siente bien?"
    v "[TRADUCIR: S-sí. ¿Se siente bien?]"

#   m "Muy bien. Me quieres coger con tantas ganas, ¿eh?"
    m "[TRADUCIR: Muy bien. Me quieres coger con tantas ganas, ¿eh?]"

#   v "Sí. P-por favor, déjame coger tu gran polla..."
    v "[TRADUCIR: Sí. P-por favor, déjame coger tu gran polla...]"

#   m "Está bien, hermosa. Muéstrame cuánto quieres agradecerme."
    m "[TRADUCIR: Está bien, hermosa. Muéstrame cuánto quieres agradecerme.]"

#   v "O-ohhhh..."
    v "[TRADUCIR: O-ohhhh...]"

#   v "¡Siii!"
    v "[TRADUCIR: ¡Siii!]"

#   m "N-no pares."
    m "[TRADUCIR: N-no pares.]"

#   v "T-tu polla me está... volviendo loca."
    v "[TRADUCIR: T-tu polla me está... volviendo loca.]"

#   m "Estoy... cerca."
    m "[TRADUCIR: Estoy... cerca.]"

#   v "[name]... por favor entra."
    v "[TRADUCIR: [name]... por favor entra.]"

#   v "Por favor... [name[0]]-[name]."
    v "[TRADUCIR: Por favor... [name[0]]-[name].]"

#   "Terminar."
    "[TRADUCIR: Terminar.]"

#   v "*chillido*"
    v "[TRADUCIR: *chillido*]"

#   m "¡Joder!"
    m "[TRADUCIR: ¡Joder!]"

#   m "Eres... increíble."
    m "[TRADUCIR: Eres... increíble.]"

#   v "Eso... se sintió tan bien."
    v "[TRADUCIR: Eso... se sintió tan bien.]"

#   m "({i}¡Esta chica fue una maldita maravilla!{/i})"
    m "[TRADUCIR: ({i}¡Esta chica fue una maldita maravilla!{/i})]"

#   m "({i}Me pregunto si estaría dispuesta a volver pronto.{/i})"
    m "[TRADUCIR: ({i}Me pregunto si estaría dispuesta a volver pronto.{/i})]"

#   v "[name]?"
    v "[TRADUCIR: [name]?]"

#   m "S-sí? ¿Estás bien?"
    m "[TRADUCIR: S-sí? ¿Estás bien?]"

#   v "Me gustaría agradecerte otra vez pronto, ¿vale?"
    v "[TRADUCIR: Me gustaría agradecerte otra vez pronto, ¿vale?]"

#   m "*se ríe* Claro. Aceptaré con gusto cualquier agradecimiento que me des."
    m "[TRADUCIR: *se ríe* Claro. Aceptaré con gusto cualquier agradecimiento que me des.]"

#   "¡Gracias por jugar! ¡Esperamos que hayas disfrutado!"
    "[TRADUCIR: ¡Gracias por jugar! ¡Esperamos que hayas disfrutado!]"

#   "Si te gustó el juego, por favor considera apoyarnos y revisar nuestros próximos cortos NSFW que vienen pronto."
    "[TRADUCIR: Si te gustó el juego, por favor considera apoyarnos y revisar nuestros próximos cortos NSFW que vienen pronto.]"

#   "¡Hasta la próxima! ¡Adiós!"
    "[TRADUCIR: ¡Hasta la próxima! ¡Adiós!]"

# ARQUIVO: .\unrpyc-master\testcases\expected\the_question-8.2\gui.rpy DIALOGOS: 10

#   define gui.text_font = "DejaVuSans.ttf"
    define gui.text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.name_text_font = "DejaVuSans.ttf"
    define gui.name_text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.interface_text_font = "DejaVuSans.ttf"
    define gui.interface_text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.main_menu_background = "gui/main_menu.png"
    define gui.main_menu_background = "[TRADUCIR: gui/main_menu.png]"

#   define gui.game_menu_background = "gui/game_menu.png"
    define gui.game_menu_background = "[TRADUCIR: gui/game_menu.png]"

#   define gui.main_menu_text_color = "#ffaa22"
    define gui.main_menu_text_color = "[TRADUCIR: #ffaa22]"

#   define gui.choice_button_text_idle_color = "#cccccc"
    define gui.choice_button_text_idle_color = "[TRADUCIR: #cccccc]"

#   define gui.choice_button_text_hover_color = "#ffffff"
    define gui.choice_button_text_hover_color = "[TRADUCIR: #ffffff]"

#   define gui.unscrollable = "hide"
    define gui.unscrollable = "[TRADUCIR: hide]"

#   define gui.language = "unicode"
    define gui.language = "[TRADUCIR: unicode]"

# ARQUIVO: .\unrpyc-master\testcases\expected\the_question-8.2\options.rpy DIALOGOS: 10

#   define config.name = _( "The Question"
    define config.name = _( "[TRADUCIR: The Question]"

#   define config.version = "7.0"
    define config.version = "[TRADUCIR: 7.0]"

#   define build.name = "the_question"
    define build.name = "[TRADUCIR: the_question]"

#   define build.version = "7.0"
    define build.version = "[TRADUCIR: 7.0]"

#   define config.window = "auto"
    define config.window = "[TRADUCIR: auto]"

#   define config.save_directory = "the_question-7"
    define config.save_directory = "[TRADUCIR: the_question-7]"

#   define config.window_icon = "gui/window_icon.png"
    define config.window_icon = "[TRADUCIR: gui/window_icon.png]"

#   config.searchpath.append(config.renpy_base + "/sdk-fonts"
    config.searchpath.append(config.renpy_base + "[TRADUCIR: /sdk-fonts]"

#   build.classify_renpy( "sdk-fonts/**"
    build.classify_renpy( "[TRADUCIR: sdk-fonts/**]"

#   define build.itch_project = "renpytom/the-question"
    define build.itch_project = "[TRADUCIR: renpytom/the-question]"

# ARQUIVO: .\unrpyc-master\testcases\expected\the_question-8.2\screens.rpy DIALOGOS: 292

#   properties gui.text_properties( "input"
    properties gui.text_properties( "[TRADUCIR: input]"

#   properties gui.text_properties( "hyperlink"
    properties gui.text_properties( "[TRADUCIR: hyperlink]"

#   properties gui.text_properties( "interface"
    properties gui.text_properties( "[TRADUCIR: interface]"

#   properties gui.button_properties( "button"
    properties gui.button_properties( "[TRADUCIR: button]"

#   properties gui.text_properties( "button"
    properties gui.text_properties( "[TRADUCIR: button]"

#   properties gui.text_properties( "label"
    properties gui.text_properties( "[TRADUCIR: label]"

#   properties gui.text_properties( "prompt"
    properties gui.text_properties( "[TRADUCIR: prompt]"

#   left_bar Frame( "gui/bar/left.png"
    left_bar Frame( "[TRADUCIR: gui/bar/left.png]"

#   right_bar Frame( "gui/bar/right.png"
    right_bar Frame( "[TRADUCIR: gui/bar/right.png]"

#   top_bar Frame( "gui/bar/top.png"
    top_bar Frame( "[TRADUCIR: gui/bar/top.png]"

#   bottom_bar Frame( "gui/bar/bottom.png"
    bottom_bar Frame( "[TRADUCIR: gui/bar/bottom.png]"

#   base_bar Frame( "gui/scrollbar/horizontal_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/scrollbar/horizontal_[prefix_]bar.png]"

#   thumb Frame( "gui/scrollbar/horizontal_[prefix_]thumb.png"
    thumb Frame( "[TRADUCIR: gui/scrollbar/horizontal_[prefix_]thumb.png]"

#   base_bar Frame( "gui/scrollbar/vertical_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/scrollbar/vertical_[prefix_]bar.png]"

#   thumb Frame( "gui/scrollbar/vertical_[prefix_]thumb.png"
    thumb Frame( "[TRADUCIR: gui/scrollbar/vertical_[prefix_]thumb.png]"

#   base_bar Frame( "gui/slider/horizontal_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/slider/horizontal_[prefix_]bar.png]"

#   thumb "gui/slider/horizontal_[prefix_]thumb.png"
    thumb "[TRADUCIR: gui/slider/horizontal_[prefix_]thumb.png]"

#   base_bar Frame( "gui/slider/vertical_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/slider/vertical_[prefix_]bar.png]"

#   thumb "gui/slider/vertical_[prefix_]thumb.png"
    thumb "[TRADUCIR: gui/slider/vertical_[prefix_]thumb.png]"

#   background Frame( "gui/frame.png"
    background Frame( "[TRADUCIR: gui/frame.png]"

#   style_prefix "say"
    style_prefix "[TRADUCIR: say]"

#   id "window"
    id "[TRADUCIR: window]"

#   style "namebox"
    style "[TRADUCIR: namebox]"

#   text who id "who"
    text who id "[TRADUCIR: who]"

#   text what id "what"
    text what id "[TRADUCIR: what]"

#   if not renpy.variant( "small"
    if not renpy.variant( "[TRADUCIR: small]"

#   background Image( "gui/textbox.png"
    background Image( "[TRADUCIR: gui/textbox.png]"

#   background Frame( "gui/namebox.png"
    background Frame( "[TRADUCIR: gui/namebox.png]"

#   properties gui.text_properties( "name"
    properties gui.text_properties( "[TRADUCIR: name]"

#   properties gui.text_properties( "dialogue"
    properties gui.text_properties( "[TRADUCIR: dialogue]"

#   style_prefix "input"
    style_prefix "[TRADUCIR: input]"

#   text prompt style "input_prompt"
    text prompt style "[TRADUCIR: input_prompt]"

#   input id "input"
    input id "[TRADUCIR: input]"

#   properties gui.text_properties( "input_prompt"
    properties gui.text_properties( "[TRADUCIR: input_prompt]"

#   style_prefix "choice"
    style_prefix "[TRADUCIR: choice]"

#   properties gui.button_properties( "choice_button"
    properties gui.button_properties( "[TRADUCIR: choice_button]"

#   properties gui.text_properties( "choice_button"
    properties gui.text_properties( "[TRADUCIR: choice_button]"

#   style_prefix "quick"
    style_prefix "[TRADUCIR: quick]"

#   textbutton _( "Back"
    textbutton _( "[TRADUCIR: Back]"

#   textbutton _( "History"
    textbutton _( "[TRADUCIR: History]"

#   textbutton _( "Skip"
    textbutton _( "[TRADUCIR: Skip]"

#   textbutton _( "Auto"
    textbutton _( "[TRADUCIR: Auto]"

#   textbutton _( "Save"
    textbutton _( "[TRADUCIR: Save]"

#   textbutton _( "Q.Save"
    textbutton _( "[TRADUCIR: Q.Save]"

#   textbutton _( "Q.Load"
    textbutton _( "[TRADUCIR: Q.Load]"

#   textbutton _( "Prefs"
    textbutton _( "[TRADUCIR: Prefs]"

#   config.overlay_screens.append( "quick_menu"
    config.overlay_screens.append( "[TRADUCIR: quick_menu]"

#   properties gui.button_properties( "quick_button"
    properties gui.button_properties( "[TRADUCIR: quick_button]"

#   properties gui.text_properties( "quick_button"
    properties gui.text_properties( "[TRADUCIR: quick_button]"

#   style_prefix "navigation"
    style_prefix "[TRADUCIR: navigation]"

#   textbutton _( "Start"
    textbutton _( "[TRADUCIR: Start]"

#   textbutton _( "History"
    textbutton _( "[TRADUCIR: History]"

#   textbutton _( "Save"
    textbutton _( "[TRADUCIR: Save]"

#   textbutton _( "Load"
    textbutton _( "[TRADUCIR: Load]"

#   textbutton _( "Preferences"
    textbutton _( "[TRADUCIR: Preferences]"

#   textbutton _( "End Replay"
    textbutton _( "[TRADUCIR: End Replay]"

#   textbutton _( "Main Menu"
    textbutton _( "[TRADUCIR: Main Menu]"

#   textbutton _( "About"
    textbutton _( "[TRADUCIR: About]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   textbutton _( "Help"
    textbutton _( "[TRADUCIR: Help]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   textbutton _( "Quit"
    textbutton _( "[TRADUCIR: Quit]"

#   size_group "navigation"
    size_group "[TRADUCIR: navigation]"

#   properties gui.button_properties( "navigation_button"
    properties gui.button_properties( "[TRADUCIR: navigation_button]"

#   properties gui.text_properties( "navigation_button"
    properties gui.text_properties( "[TRADUCIR: navigation_button]"

#   style_prefix "main_menu"
    style_prefix "[TRADUCIR: main_menu]"

#   text "[config.name!t]"
    text "[TRADUCIR: [config.name!t]]"

#   style "main_menu_title"
    style "[TRADUCIR: main_menu_title]"

#   text _( "Ren'Py 7+ Edition"
    text _( "[TRADUCIR: Ren'Py 7+ Edition]"

#   style "main_menu_version"
    style "[TRADUCIR: main_menu_version]"

#   background "gui/overlay/main_menu.png"
    background "[TRADUCIR: gui/overlay/main_menu.png]"

#   properties gui.text_properties( "main_menu"
    properties gui.text_properties( "[TRADUCIR: main_menu]"

#   properties gui.text_properties( "title"
    properties gui.text_properties( "[TRADUCIR: title]"

#   properties gui.text_properties( "version"
    properties gui.text_properties( "[TRADUCIR: version]"

#   style_prefix "game_menu"
    style_prefix "[TRADUCIR: game_menu]"

#   style "game_menu_outer_frame"
    style "[TRADUCIR: game_menu_outer_frame]"

#   style "game_menu_navigation_frame"
    style "[TRADUCIR: game_menu_navigation_frame]"

#   style "game_menu_content_frame"
    style "[TRADUCIR: game_menu_content_frame]"

#   if scroll == "viewport"
    if scroll == "[TRADUCIR: viewport]"

#   scrollbars "vertical"
    scrollbars "[TRADUCIR: vertical]"

#   elif scroll == "vpgrid"
    elif scroll == "[TRADUCIR: vpgrid]"

#   scrollbars "vertical"
    scrollbars "[TRADUCIR: vertical]"

#   textbutton _( "Return"
    textbutton _( "[TRADUCIR: Return]"

#   style "return_button"
    style "[TRADUCIR: return_button]"

#   key "game_menu"
    key "[TRADUCIR: game_menu]"

#   background "gui/overlay/game_menu.png"
    background "[TRADUCIR: gui/overlay/game_menu.png]"

#   use game_menu(_( "About"
    use game_menu(_( "[TRADUCIR: About]"

#   style_prefix "about"
    style_prefix "[TRADUCIR: about]"

#   label "[config.name!t]"
    label "[TRADUCIR: [config.name!t]]"

#   text _( "[config.version!t]\n"
    text _( "[TRADUCIR: [config.version!t]\n]"

#   text _( "Updated Character Art"
    text _( "[TRADUCIR: Updated Character Art]"

#   text _( "Deji"
    text _( "[TRADUCIR: Deji]"

#   text _( "Original Character Art"
    text _( "[TRADUCIR: Original Character Art]"

#   text _( "Derik"
    text _( "[TRADUCIR: Derik]"

#   text _( "Updated Background Art"
    text _( "[TRADUCIR: Updated Background Art]"

#   text _( "Mugenjohncel"
    text _( "[TRADUCIR: Mugenjohncel]"

#   text _( "Original Background Art"
    text _( "[TRADUCIR: Original Background Art]"

#   text _( "DaFool"
    text _( "[TRADUCIR: DaFool]"

#   text _( "Music By"
    text _( "[TRADUCIR: Music By]"

#   text _( "Alessio"
    text _( "[TRADUCIR: Alessio]"

#   text _( "Update Written By"
    text _( "[TRADUCIR: Update Written By]"

#   text _( "Lore"
    text _( "[TRADUCIR: Lore]"

#   text _( "Originally Written By"
    text _( "[TRADUCIR: Originally Written By]"

#   text _( "mikey (ATP Projects)"
    text _( "[TRADUCIR: mikey (ATP Projects)]"

#   text _( "\nMade with {a=https://www.renpy.org/}Ren'Py{/a} [renpy.version_only]"
    text _( "[TRADUCIR: \nMade with {a=https://www.renpy.org/}Ren'Py{/a} [renpy.version_only]]"

#   text _( "[renpy.license!t]"
    text _( "[TRADUCIR: [renpy.license!t]]"

#   use file_slots(_( "Save"
    use file_slots(_( "[TRADUCIR: Save]"

#   use file_slots(_( "Load"
    use file_slots(_( "[TRADUCIR: Load]"

#   default page_name_value = FilePageNameInputValue(pattern=_( "Page {}"
    default page_name_value = FilePageNameInputValue(pattern=_( "[TRADUCIR: Page {}]"

#   style "page_label"
    style "[TRADUCIR: page_label]"

#   style "page_label_text"
    style "[TRADUCIR: page_label_text]"

#   style_prefix "slot"
    style_prefix "[TRADUCIR: slot]"

#   text FileTime(slot, format=_( "{#file_time}%A, %B %d %Y, %H:%M"
    text FileTime(slot, format=_( "[TRADUCIR: {#file_time}%A, %B %d %Y, %H:%M]"

#   style "slot_time_text"
    style "[TRADUCIR: slot_time_text]"

#   style "slot_name_text"
    style "[TRADUCIR: slot_name_text]"

#   key "save_delete"
    key "[TRADUCIR: save_delete]"

#   style_prefix "page"
    style_prefix "[TRADUCIR: page]"

#   textbutton _( "<"
    textbutton _( "[TRADUCIR: <]"

#   textbutton _( "{#auto_page}A"
    textbutton _( "[TRADUCIR: {#auto_page}A]"

#   textbutton _( "{#quick_page}Q"
    textbutton _( "[TRADUCIR: {#quick_page}Q]"

#   textbutton "[page]"
    textbutton "[TRADUCIR: [page]]"

#   textbutton _( ">"
    textbutton _( "[TRADUCIR: >]"

#   layout "subtitle"
    layout "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "page_button"
    properties gui.button_properties( "[TRADUCIR: page_button]"

#   properties gui.text_properties( "page_button"
    properties gui.text_properties( "[TRADUCIR: page_button]"

#   properties gui.button_properties( "slot_button"
    properties gui.button_properties( "[TRADUCIR: slot_button]"

#   properties gui.text_properties( "slot_button"
    properties gui.text_properties( "[TRADUCIR: slot_button]"

#   use game_menu(_( "Preferences"
    use game_menu(_( "[TRADUCIR: Preferences]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   label _( "Display"
    label _( "[TRADUCIR: Display]"

#   textbutton _( "Window"
    textbutton _( "[TRADUCIR: Window]"

#   textbutton _( "Fullscreen"
    textbutton _( "[TRADUCIR: Fullscreen]"

#   style_prefix "check"
    style_prefix "[TRADUCIR: check]"

#   label _( "Skip"
    label _( "[TRADUCIR: Skip]"

#   textbutton _( "Unseen Text"
    textbutton _( "[TRADUCIR: Unseen Text]"

#   textbutton _( "After Choices"
    textbutton _( "[TRADUCIR: After Choices]"

#   textbutton _( "Transitions"
    textbutton _( "[TRADUCIR: Transitions]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   label _( "Language"
    label _( "[TRADUCIR: Language]"

#   textbutton "English"
    textbutton "[TRADUCIR: English]"

#   textbutton "Česky"
    textbutton "[TRADUCIR: Česky]"

#   textbutton "Dansk"
    textbutton "[TRADUCIR: Dansk]"

#   textbutton "Français"
    textbutton "[TRADUCIR: Français]"

#   textbutton "Bahasa Melayu"
    textbutton "[TRADUCIR: Bahasa Melayu]"

#   textbutton "Русский"
    textbutton "[TRADUCIR: Русский]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   textbutton "Español"
    textbutton "[TRADUCIR: Español]"

#   textbutton "Українська"
    textbutton "[TRADUCIR: Українська]"

#   textbutton "日本語"
    textbutton "[TRADUCIR: 日本語]"

#   textbutton "한국어"
    textbutton "[TRADUCIR: 한국어]"

#   textbutton "简体中文"
    textbutton "[TRADUCIR: 简体中文]"

#   textbutton "繁體中文"
    textbutton "[TRADUCIR: 繁體中文]"

#   style_prefix "slider"
    style_prefix "[TRADUCIR: slider]"

#   label _( "Text Speed"
    label _( "[TRADUCIR: Text Speed]"

#   bar value Preference( "text speed"
    bar value Preference( "[TRADUCIR: text speed]"

#   label _( "Auto-Forward Time"
    label _( "[TRADUCIR: Auto-Forward Time]"

#   bar value Preference( "auto-forward time"
    bar value Preference( "[TRADUCIR: auto-forward time]"

#   label _( "Music Volume"
    label _( "[TRADUCIR: Music Volume]"

#   bar value Preference( "music volume"
    bar value Preference( "[TRADUCIR: music volume]"

#   label _( "Sound Volume"
    label _( "[TRADUCIR: Sound Volume]"

#   bar value Preference( "sound volume"
    bar value Preference( "[TRADUCIR: sound volume]"

#   textbutton _( "Test"
    textbutton _( "[TRADUCIR: Test]"

#   label _( "Voice Volume"
    label _( "[TRADUCIR: Voice Volume]"

#   bar value Preference( "voice volume"
    bar value Preference( "[TRADUCIR: voice volume]"

#   textbutton _( "Test"
    textbutton _( "[TRADUCIR: Test]"

#   textbutton _( "Mute All"
    textbutton _( "[TRADUCIR: Mute All]"

#   action Preference( "all mute"
    action Preference( "[TRADUCIR: all mute]"

#   style "mute_all_button"
    style "[TRADUCIR: mute_all_button]"

#   properties gui.button_properties( "radio_button"
    properties gui.button_properties( "[TRADUCIR: radio_button]"

#   foreground "gui/button/radio_[prefix_]foreground.png"
    foreground "[TRADUCIR: gui/button/radio_[prefix_]foreground.png]"

#   properties gui.text_properties( "radio_button"
    properties gui.text_properties( "[TRADUCIR: radio_button]"

#   properties gui.button_properties( "check_button"
    properties gui.button_properties( "[TRADUCIR: check_button]"

#   foreground "gui/button/check_[prefix_]foreground.png"
    foreground "[TRADUCIR: gui/button/check_[prefix_]foreground.png]"

#   properties gui.text_properties( "check_button"
    properties gui.text_properties( "[TRADUCIR: check_button]"

#   properties gui.button_properties( "slider_button"
    properties gui.button_properties( "[TRADUCIR: slider_button]"

#   properties gui.text_properties( "slider_button"
    properties gui.text_properties( "[TRADUCIR: slider_button]"

#   use game_menu(_( "History"
    use game_menu(_( "[TRADUCIR: History]"

#   style_prefix "history"
    style_prefix "[TRADUCIR: history]"

#   style "history_name"
    style "[TRADUCIR: history_name]"

#   if "color"
    if "[TRADUCIR: color]"

#   text_color h.who_args[ "color"
    text_color h.who_args[ "[TRADUCIR: color]"

#   label _( "The dialogue history is empty."
    label _( "[TRADUCIR: The dialogue history is empty.]"

#   define gui.history_allow_tags = { "alt"
    define gui.history_allow_tags = { "[TRADUCIR: alt]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   default device = "keyboard"
    default device = "[TRADUCIR: keyboard]"

#   use game_menu(_( "Help"
    use game_menu(_( "[TRADUCIR: Help]"

#   style_prefix "help"
    style_prefix "[TRADUCIR: help]"

#   textbutton _( "Keyboard"
    textbutton _( "[TRADUCIR: Keyboard]"

#   textbutton _( "Mouse"
    textbutton _( "[TRADUCIR: Mouse]"

#   textbutton _( "Gamepad"
    textbutton _( "[TRADUCIR: Gamepad]"

#   if device == "keyboard"
    if device == "[TRADUCIR: keyboard]"

#   elif device == "mouse"
    elif device == "[TRADUCIR: mouse]"

#   elif device == "gamepad"
    elif device == "[TRADUCIR: gamepad]"

#   label _( "Enter"
    label _( "[TRADUCIR: Enter]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Space"
    label _( "[TRADUCIR: Space]"

#   text _( "Advances dialogue without selecting choices."
    text _( "[TRADUCIR: Advances dialogue without selecting choices.]"

#   label _( "Arrow Keys"
    label _( "[TRADUCIR: Arrow Keys]"

#   text _( "Navigate the interface."
    text _( "[TRADUCIR: Navigate the interface.]"

#   label _( "Escape"
    label _( "[TRADUCIR: Escape]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Ctrl"
    label _( "[TRADUCIR: Ctrl]"

#   text _( "Skips dialogue while held down."
    text _( "[TRADUCIR: Skips dialogue while held down.]"

#   label _( "Tab"
    label _( "[TRADUCIR: Tab]"

#   text _( "Toggles dialogue skipping."
    text _( "[TRADUCIR: Toggles dialogue skipping.]"

#   label _( "Page Up"
    label _( "[TRADUCIR: Page Up]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Page Down"
    label _( "[TRADUCIR: Page Down]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label "H"
    label "[TRADUCIR: H]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   label "S"
    label "[TRADUCIR: S]"

#   text _( "Takes a screenshot."
    text _( "[TRADUCIR: Takes a screenshot.]"

#   label "V"
    label "[TRADUCIR: V]"

#   text _( "Toggles assistive {a=https://www.renpy.org/l/voicing}self-voicing{/a}."
    text _( "[TRADUCIR: Toggles assistive {a=https://www.renpy.org/l/voicing}self-voicing{/a}.]"

#   label "Shift+A"
    label "[TRADUCIR: Shift+A]"

#   text _( "Opens the accessibility menu."
    text _( "[TRADUCIR: Opens the accessibility menu.]"

#   label _( "Left Click"
    label _( "[TRADUCIR: Left Click]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Middle Click"
    label _( "[TRADUCIR: Middle Click]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   label _( "Right Click"
    label _( "[TRADUCIR: Right Click]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Mouse Wheel Up"
    label _( "[TRADUCIR: Mouse Wheel Up]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Mouse Wheel Down"
    label _( "[TRADUCIR: Mouse Wheel Down]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label _( "Right Trigger\nA/Bottom Button"
    label _( "[TRADUCIR: Right Trigger\nA/Bottom Button]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Left Trigger\nLeft Shoulder"
    label _( "[TRADUCIR: Left Trigger\nLeft Shoulder]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Right Shoulder"
    label _( "[TRADUCIR: Right Shoulder]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label _( "D-Pad, Sticks"
    label _( "[TRADUCIR: D-Pad, Sticks]"

#   text _( "Navigate the interface."
    text _( "[TRADUCIR: Navigate the interface.]"

#   label _( "Start, Guide"
    label _( "[TRADUCIR: Start, Guide]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Y/Top Button"
    label _( "[TRADUCIR: Y/Top Button]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   textbutton _( "Calibrate"
    textbutton _( "[TRADUCIR: Calibrate]"

#   properties gui.button_properties( "help_button"
    properties gui.button_properties( "[TRADUCIR: help_button]"

#   properties gui.text_properties( "help_button"
    properties gui.text_properties( "[TRADUCIR: help_button]"

#   style_prefix "confirm"
    style_prefix "[TRADUCIR: confirm]"

#   add "gui/overlay/confirm.png"
    add "[TRADUCIR: gui/overlay/confirm.png]"

#   style "confirm_prompt"
    style "[TRADUCIR: confirm_prompt]"

#   textbutton _( "Yes"
    textbutton _( "[TRADUCIR: Yes]"

#   textbutton _( "No"
    textbutton _( "[TRADUCIR: No]"

#   key "game_menu"
    key "[TRADUCIR: game_menu]"

#   background Frame([ "gui/confirm_frame.png"
    background Frame([ "[TRADUCIR: gui/confirm_frame.png]"

#   layout "subtitle"
    layout "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "confirm_button"
    properties gui.button_properties( "[TRADUCIR: confirm_button]"

#   properties gui.text_properties( "confirm_button"
    properties gui.text_properties( "[TRADUCIR: confirm_button]"

#   style_prefix "skip"
    style_prefix "[TRADUCIR: skip]"

#   text _( "Skipping"
    text _( "[TRADUCIR: Skipping]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   background Frame( "gui/skip.png"
    background Frame( "[TRADUCIR: gui/skip.png]"

#   font "DejaVuSans.ttf"
    font "[TRADUCIR: DejaVuSans.ttf]"

#   style_prefix "notify"
    style_prefix "[TRADUCIR: notify]"

#   text "[message!tq]"
    text "[TRADUCIR: [message!tq]]"

#   background Frame( "gui/notify.png"
    background Frame( "[TRADUCIR: gui/notify.png]"

#   properties gui.text_properties( "notify"
    properties gui.text_properties( "[TRADUCIR: notify]"

#   style "nvl_window"
    style "[TRADUCIR: nvl_window]"

#   style "nvl_button"
    style "[TRADUCIR: nvl_button]"

#   background "gui/nvl.png"
    background "[TRADUCIR: gui/nvl.png]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "nvl_button"
    properties gui.button_properties( "[TRADUCIR: nvl_button]"

#   properties gui.text_properties( "nvl_button"
    properties gui.text_properties( "[TRADUCIR: nvl_button]"

#   variant "medium"
    variant "[TRADUCIR: medium]"

#   variant "touch"
    variant "[TRADUCIR: touch]"

#   style_prefix "quick"
    style_prefix "[TRADUCIR: quick]"

#   textbutton _( "Back"
    textbutton _( "[TRADUCIR: Back]"

#   textbutton _( "Skip"
    textbutton _( "[TRADUCIR: Skip]"

#   textbutton _( "Auto"
    textbutton _( "[TRADUCIR: Auto]"

#   textbutton _( "Menu"
    textbutton _( "[TRADUCIR: Menu]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/textbox.png"
    background "[TRADUCIR: gui/phone/textbox.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/nvl.png"
    background "[TRADUCIR: gui/phone/nvl.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/overlay/main_menu.png"
    background "[TRADUCIR: gui/phone/overlay/main_menu.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/overlay/game_menu.png"
    background "[TRADUCIR: gui/phone/overlay/game_menu.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

# ARQUIVO: .\unrpyc-master\testcases\expected\the_question-8.2\script.rpy DIALOGOS: 78

#   define s = Character(_( "Sylvie"
    define s = Character(_( "[TRADUCIR: Sylvie]"

#   define m = Character(_( "Me"
    define m = Character(_( "[TRADUCIR: Me]"

#   play music "illurock.opus"
    play music "[TRADUCIR: illurock.opus]"

#   "It's only when I hear the sounds of shuffling feet and supplies being put away that I realize that the lecture's over."
    "[TRADUCIR: It's only when I hear the sounds of shuffling feet and supplies being put away that I realize that the lecture's over.]"

#   "Professor Eileen's lectures are usually interesting, but today I just couldn't concentrate on it."
    "[TRADUCIR: Professor Eileen's lectures are usually interesting, but today I just couldn't concentrate on it.]"

#   "I've had a lot of other thoughts on my mind...thoughts that culminate in a question."
    "[TRADUCIR: I've had a lot of other thoughts on my mind...thoughts that culminate in a question.]"

#   "It's a question that I've been meaning to ask a certain someone."
    "[TRADUCIR: It's a question that I've been meaning to ask a certain someone.]"

#   "When we come out of the university, I spot her right away."
    "[TRADUCIR: When we come out of the university, I spot her right away.]"

#   "I've known Sylvie since we were kids. She's got a big heart and she's always been a good friend to me."
    "[TRADUCIR: I've known Sylvie since we were kids. She's got a big heart and she's always been a good friend to me.]"

#   "But recently... I've felt that I want something more."
    "[TRADUCIR: But recently... I've felt that I want something more.]"

#   "More than just talking, more than just walking home together when our classes end."
    "[TRADUCIR: More than just talking, more than just walking home together when our classes end.]"

#   "As soon as she catches my eye, I decide..."
    "[TRADUCIR: As soon as she catches my eye, I decide...]"

#   "To ask her right away."
    "[TRADUCIR: To ask her right away.]"

#   "To ask her later."
    "[TRADUCIR: To ask her later.]"

#   s "Hi there! How was class?"
    s "[TRADUCIR: Hi there! How was class?]"

#   m "Good..."
    m "[TRADUCIR: Good...]"

#   "I can't bring myself to admit that it all went in one ear and out the other."
    "[TRADUCIR: I can't bring myself to admit that it all went in one ear and out the other.]"

#   m "Are you going home now? Wanna walk back with me?"
    m "[TRADUCIR: Are you going home now? Wanna walk back with me?]"

#   s "Sure!"
    s "[TRADUCIR: Sure!]"

#   "After a short while, we reach the meadows just outside the neighborhood where we both live."
    "[TRADUCIR: After a short while, we reach the meadows just outside the neighborhood where we both live.]"

#   "It's a scenic view I've grown used to. Autumn is especially beautiful here."
    "[TRADUCIR: It's a scenic view I've grown used to. Autumn is especially beautiful here.]"

#   "When we were children, we played in these meadows a lot, so they're full of memories."
    "[TRADUCIR: When we were children, we played in these meadows a lot, so they're full of memories.]"

#   m "Hey... Umm..."
    m "[TRADUCIR: Hey... Umm...]"

#   "She turns to me and smiles. She looks so welcoming that I feel my nervousness melt away."
    "[TRADUCIR: She turns to me and smiles. She looks so welcoming that I feel my nervousness melt away.]"

#   "I'll ask her...!"
    "[TRADUCIR: I'll ask her...!]"

#   m "Ummm... Will you..."
    m "[TRADUCIR: Ummm... Will you...]"

#   m "Will you be my artist for a visual novel?"
    m "[TRADUCIR: Will you be my artist for a visual novel?]"

#   "Silence."
    "[TRADUCIR: Silence.]"

#   "She looks so shocked that I begin to fear the worst. But then..."
    "[TRADUCIR: She looks so shocked that I begin to fear the worst. But then...]"

#   s "Sure, but what's a \"
    s "[TRADUCIR: Sure, but what's a \]"

#   "It's a videogame."
    "[TRADUCIR: It's a videogame.]"

#   "It's an interactive book."
    "[TRADUCIR: It's an interactive book.]"

#   m "It's a kind of videogame you can play on your computer or a console."
    m "[TRADUCIR: It's a kind of videogame you can play on your computer or a console.]"

#   m "Visual novels tell a story with pictures and music."
    m "[TRADUCIR: Visual novels tell a story with pictures and music.]"

#   m "Sometimes, you also get to make choices that affect the outcome of the story."
    m "[TRADUCIR: Sometimes, you also get to make choices that affect the outcome of the story.]"

#   s "So it's like those choose-your-adventure books?"
    s "[TRADUCIR: So it's like those choose-your-adventure books?]"

#   m "Exactly! I've got lots of different ideas that I think would work."
    m "[TRADUCIR: Exactly! I've got lots of different ideas that I think would work.]"

#   m "And I thought maybe you could help me...since I know how you like to draw."
    m "[TRADUCIR: And I thought maybe you could help me...since I know how you like to draw.]"

#   m "It'd be hard for me to make a visual novel alone."
    m "[TRADUCIR: It'd be hard for me to make a visual novel alone.]"

#   s "Well, sure! I can try. I just hope I don't disappoint you."
    s "[TRADUCIR: Well, sure! I can try. I just hope I don't disappoint you.]"

#   m "You know you could never disappoint me, Sylvie."
    m "[TRADUCIR: You know you could never disappoint me, Sylvie.]"

#   m "It's like an interactive book that you can read on a computer or a console."
    m "[TRADUCIR: It's like an interactive book that you can read on a computer or a console.]"

#   s "Interactive?"
    s "[TRADUCIR: Interactive?]"

#   m "You can make choices that lead to different events and endings in the story."
    m "[TRADUCIR: You can make choices that lead to different events and endings in the story.]"

#   s "So where does the \"
    s "[TRADUCIR: So where does the \]"

#   m "Visual novels have pictures and even music, sound effects, and sometimes voice acting to go along with the text."
    m "[TRADUCIR: Visual novels have pictures and even music, sound effects, and sometimes voice acting to go along with the text.]"

#   s "I see! That certainly sounds like fun. I actually used to make webcomics way back when, so I've got lots of story ideas."
    s "[TRADUCIR: I see! That certainly sounds like fun. I actually used to make webcomics way back when, so I've got lots of story ideas.]"

#   m "That's great! So...would you be interested in working with me as an artist?"
    m "[TRADUCIR: That's great! So...would you be interested in working with me as an artist?]"

#   s "I'd love to!"
    s "[TRADUCIR: I'd love to!]"

#   "And so, we become a visual novel creating duo."
    "[TRADUCIR: And so, we become a visual novel creating duo.]"

#   "Over the years, we make lots of games and have a lot of fun making them."
    "[TRADUCIR: Over the years, we make lots of games and have a lot of fun making them.]"

#   "Our first game is based on one of Sylvie's ideas, but afterwards I get to come up with stories of my own, too."
    "[TRADUCIR: Our first game is based on one of Sylvie's ideas, but afterwards I get to come up with stories of my own, too.]"

#   "We take turns coming up with stories and characters and support each other to make some great games!"
    "[TRADUCIR: We take turns coming up with stories and characters and support each other to make some great games!]"

#   "And one day..."
    "[TRADUCIR: And one day...]"

#   s "Hey..."
    s "[TRADUCIR: Hey...]"

#   m "Yes?"
    m "[TRADUCIR: Yes?]"

#   s "Will you marry me?"
    s "[TRADUCIR: Will you marry me?]"

#   m "What? Where did this come from?"
    m "[TRADUCIR: What? Where did this come from?]"

#   s "Come on, how long have we been dating?"
    s "[TRADUCIR: Come on, how long have we been dating?]"

#   m "A while..."
    m "[TRADUCIR: A while...]"

#   s "These last few years we've been making visual novels together, spending time together, helping each other..."
    s "[TRADUCIR: These last few years we've been making visual novels together, spending time together, helping each other...]"

#   s "I've gotten to know you and care about you better than anyone else. And I think the same goes for you, right?"
    s "[TRADUCIR: I've gotten to know you and care about you better than anyone else. And I think the same goes for you, right?]"

#   m "Sylvie..."
    m "[TRADUCIR: Sylvie...]"

#   s "But I know you're the indecisive type. If I held back, who knows when you'd propose?"
    s "[TRADUCIR: But I know you're the indecisive type. If I held back, who knows when you'd propose?]"

#   s "So will you marry me?"
    s "[TRADUCIR: So will you marry me?]"

#   m "Of course I will! I've actually been meaning to propose, honest!"
    m "[TRADUCIR: Of course I will! I've actually been meaning to propose, honest!]"

#   s "I know, I know."
    s "[TRADUCIR: I know, I know.]"

#   m "I guess... I was too worried about timing. I wanted to ask the right question at the right time."
    m "[TRADUCIR: I guess... I was too worried about timing. I wanted to ask the right question at the right time.]"

#   s "You worry too much. If only this were a visual novel and I could pick an option to give you more courage!"
    s "[TRADUCIR: You worry too much. If only this were a visual novel and I could pick an option to give you more courage!]"

#   "We get married shortly after that."
    "[TRADUCIR: We get married shortly after that.]"

#   "Our visual novel duo lives on even after we're married...and I try my best to be more decisive."
    "[TRADUCIR: Our visual novel duo lives on even after we're married...and I try my best to be more decisive.]"

#   "Together, we live happily ever after even now."
    "[TRADUCIR: Together, we live happily ever after even now.]"

#   "{b}Good Ending{/b}."
    "[TRADUCIR: {b}Good Ending{/b}.]"

#   "I can't get up the nerve to ask right now. With a gulp, I decide to ask her later."
    "[TRADUCIR: I can't get up the nerve to ask right now. With a gulp, I decide to ask her later.]"

#   "But I'm an indecisive person."
    "[TRADUCIR: But I'm an indecisive person.]"

#   "I couldn't ask her that day and I end up never being able to ask her."
    "[TRADUCIR: I couldn't ask her that day and I end up never being able to ask her.]"

#   "I guess I'll never know the answer to my question now..."
    "[TRADUCIR: I guess I'll never know the answer to my question now...]"

#   "{b}Bad Ending{/b}."
    "[TRADUCIR: {b}Bad Ending{/b}.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\01director_support.rpy DIALOGOS: 3

#   fn1 = os.path.join(renpy.config.gamedir, "tutorial_director.rpym"
    fn1 = os.path.join(renpy.config.gamedir, "[TRADUCIR: tutorial_director.rpym]"

#   fn2 = os.path.join(renpy.config.gamedir, "tutorial_director.rpy"
    fn2 = os.path.join(renpy.config.gamedir, "[TRADUCIR: tutorial_director.rpy]"

#   if not renpy.session.get( "director"
    if not renpy.session.get( "[TRADUCIR: director]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\01example.rpy DIALOGOS: 102

#   example_size = "small"
    example_size = "[TRADUCIR: small]"

#   example_location = "top"
    example_location = "[TRADUCIR: top]"

#   example_size = "small"
    example_size = "[TRADUCIR: small]"

#   example_location = "top"
    example_location = "[TRADUCIR: top]"

#   OUTDENT_KEYWORDS = { "define"
    OUTDENT_KEYWORDS = { "[TRADUCIR: define]"

#   fn = fn.replace( "game/"
    fn = fn.replace( "[TRADUCIR: game/]"

#   data = f.read().decode( "utf-8"
    data = f.read().decode( "[TRADUCIR: utf-8]"

#   rawlines = [ i.rstrip() for i in data.split( "\n"
    rawlines = [ i.rstrip() for i in data.split( "[TRADUCIR: \n]"

#   raise Exception( "Example open at end of {}."
    raise Exception( "[TRADUCIR: Example open at end of {}.]"

#   if outdent == "auto"
    if outdent == "[TRADUCIR: auto]"

#   outdent = "auto"
    outdent = "[TRADUCIR: auto]"

#   elif l.keyword( "noshow"
    elif l.keyword( "[TRADUCIR: noshow]"

#   elif l.keyword( "nohide"
    elif l.keyword( "[TRADUCIR: nohide]"

#   elif l.keyword( "showtrans"
    elif l.keyword( "[TRADUCIR: showtrans]"

#   name = "example_{}_{}"
    name = "[TRADUCIR: example_{}_{}]"

#   "name"
    "[TRADUCIR: name]"

#   "names"
    "[TRADUCIR: names]"

#   "hide"
    "[TRADUCIR: hide]"

#   "bottom"
    "[TRADUCIR: bottom]"

#   "small"
    "[TRADUCIR: small]"

#   "filename"
    "[TRADUCIR: filename]"

#   "number"
    "[TRADUCIR: number]"

#   "top"
    "[TRADUCIR: top]"

#   "large"
    "[TRADUCIR: large]"

#   "outdent"
    "[TRADUCIR: outdent]"

#   "screen_name"
    "[TRADUCIR: screen_name]"

#   "show_screen"
    "[TRADUCIR: show_screen]"

#   "hide_screen"
    "[TRADUCIR: hide_screen]"

#   "showtrans"
    "[TRADUCIR: showtrans]"

#   names = data.get( "names"
    names = data.get( "[TRADUCIR: names]"

#   hide = data.get( "hide"
    hide = data.get( "[TRADUCIR: hide]"

#   bottom = data.get( "bottom"
    bottom = data.get( "[TRADUCIR: bottom]"

#   small = data.get( "small"
    small = data.get( "[TRADUCIR: small]"

#   top = data.get( "top"
    top = data.get( "[TRADUCIR: top]"

#   large = data.get( "large"
    large = data.get( "[TRADUCIR: large]"

#   showtrans = data.get( "showtrans"
    showtrans = data.get( "[TRADUCIR: showtrans]"

#   example_location = "bottom"
    example_location = "[TRADUCIR: bottom]"

#   example_location = "top"
    example_location = "[TRADUCIR: top]"

#   example_size = "small"
    example_size = "[TRADUCIR: small]"

#   example_size = "large"
    example_size = "[TRADUCIR: large]"

#   renpy.show_screen( "example"
    renpy.show_screen( "[TRADUCIR: example]"

#   screen_name = data.get( "screen_name"
    screen_name = data.get( "[TRADUCIR: screen_name]"

#   if data.get( "hide_screen"
    if data.get( "[TRADUCIR: hide_screen]"

#   if data.get( "show_screen"
    if data.get( "[TRADUCIR: show_screen]"

#   read_example(data[ "name"
    read_example(data[ "[TRADUCIR: name]"

#   "example"
    "[TRADUCIR: example]"

#   block= "script"
    block= "[TRADUCIR: script]"

#   "names"
    "[TRADUCIR: names]"

#   "hide"
    "[TRADUCIR: hide]"

#   "bottom"
    "[TRADUCIR: bottom]"

#   "small"
    "[TRADUCIR: small]"

#   "top"
    "[TRADUCIR: top]"

#   "large"
    "[TRADUCIR: large]"

#   "showtrans"
    "[TRADUCIR: showtrans]"

#   renpy.register_statement( "show example"
    renpy.register_statement( "[TRADUCIR: show example]"

#   "hide_screen"
    "[TRADUCIR: hide_screen]"

#   renpy.hide_screen( "example"
    renpy.hide_screen( "[TRADUCIR: example]"

#   if example_screen and data.get( "hide_screen"
    if example_screen and data.get( "[TRADUCIR: hide_screen]"

#   renpy.register_statement( "hide example"
    renpy.register_statement( "[TRADUCIR: hide example]"

#   regex = r "(?P<word>\b(\$|[_a-zA-Z0-9]+)\b)"
    regex = r "[TRADUCIR: (?P<word>\b(\$|[_a-zA-Z0-9]+)\b)]"

#   r "|(?P<string>\"
    r "[TRADUCIR: |(?P<string>\]"

#   r "|(?P<comment>#.*)"
    r "[TRADUCIR: |(?P<comment>#.*)]"

#   s = s.replace( "{"
    s = s.replace( "[TRADUCIR: {]"

#   s = s.replace( "["
    s = s.replace( "[TRADUCIR: []"

#   if m.group( "string"
    if m.group( "[TRADUCIR: string]"

#   s = s.replace( "\\"
    s = s.replace( "[TRADUCIR: \\]"

#   s = s.replace(quote, "\\"
    s = s.replace(quote, "[TRADUCIR: \\]"

#   s = s.replace( "\n"
    s = s.replace( "[TRADUCIR: \n]"

#   if m.group( "string"
    if m.group( "[TRADUCIR: string]"

#   return "{color=#060}"
    return "[TRADUCIR: {color=#060}]"

#   word = m.group( "word"
    word = m.group( "[TRADUCIR: word]"

#   return "{color=#840}"
    return "[TRADUCIR: {color=#840}]"

#   return "{color=#048}"
    return "[TRADUCIR: {color=#048}]"

#   if m.group( "comment"
    if m.group( "[TRADUCIR: comment]"

#   return "{color=#600}"
    return "[TRADUCIR: {color=#600}]"

#   i = re.sub(r'__?\(( ".*?"
    i = re.sub(r'__?\(( "[TRADUCIR: .*?]"

#   i = re.sub(r "__?\(('.*?')\)"
    i = re.sub(r "[TRADUCIR: __?\(('.*?')\)]"

#   i = i.replace( "!t]"
    i = i.replace( "[TRADUCIR: !t]]"

#   return "\n"
    return "[TRADUCIR: \n]"

#   pygame.scrap.put(pygame.SCRAP_TEXT, self.s.encode( "utf-8"
    pygame.scrap.put(pygame.SCRAP_TEXT, self.s.encode( "[TRADUCIR: utf-8]"

#   renpy.notify(_( "Copied the example to the clipboard."
    renpy.notify(_( "[TRADUCIR: Copied the example to the clipboard.]"

#   SHOW_EXAMPLES = ( "RENPY_LESS_EXAMPLES"
    SHOW_EXAMPLES = ( "[TRADUCIR: RENPY_LESS_EXAMPLES]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   background "#fffc"
    background "[TRADUCIR: #fffc]"

#   foreground Solid( "#aaac"
    foreground Solid( "[TRADUCIR: #aaac]"

#   scrollbars "vertical"
    scrollbars "[TRADUCIR: vertical]"

#   vscrollbar_base_bar "#aaac"
    vscrollbar_base_bar "[TRADUCIR: #aaac]"

#   vscrollbar_unscrollable "hide"
    vscrollbar_unscrollable "[TRADUCIR: hide]"

#   color "#000"
    color "[TRADUCIR: #000]"

#   textbutton _( "copy"
    textbutton _( "[TRADUCIR: copy]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   text_style "quick_button_text"
    text_style "[TRADUCIR: quick_button_text]"

#   if i.endswith( ".rpy"
    if i.endswith( "[TRADUCIR: .rpy]"

#   with open(os.path.join(renpy.config.gamedir, fn), "r"
    with open(os.path.join(renpy.config.gamedir, fn), "[TRADUCIR: r]"

#   l = l.lstrip( "\ufeff"
    l = l.lstrip( "[TRADUCIR: \ufeff]"

#   m = re.match( "\s*#begin (\w+)"
    m = re.match( "[TRADUCIR: \s*#begin (\w+)]"

#   raise Exception( "Example %r is defined in two places."
    raise Exception( "[TRADUCIR: Example %r is defined in two places.]"

#   m = re.match( "\s*#end (\w+)"
    m = re.match( "[TRADUCIR: \s*#end (\w+)]"

#   raise Exception( "Example %r is not open."
    raise Exception( "[TRADUCIR: Example %r is not open.]"

#   raise Exception( "Examples %r remain open at the end of %r"
    raise Exception( "[TRADUCIR: Examples %r remain open at the end of %r]"

#   print( "The game contains {} examples."
    print( "[TRADUCIR: The game contains {} examples.]"

#   "_finaleimage"
    "[TRADUCIR: _finaleimage]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\gui.rpy DIALOGOS: 9

#   define gui.text_font = "DejaVuSans.ttf"
    define gui.text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.name_text_font = "DejaVuSans.ttf"
    define gui.name_text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.interface_text_font = "DejaVuSans.ttf"
    define gui.interface_text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.main_menu_background = "gui/main_menu.jpg"
    define gui.main_menu_background = "[TRADUCIR: gui/main_menu.jpg]"

#   define gui.game_menu_background = "images/bg washington.jpg"
    define gui.game_menu_background = "[TRADUCIR: images/bg washington.jpg]"

#   define gui.choice_button_text_idle_color = "#cccccc"
    define gui.choice_button_text_idle_color = "[TRADUCIR: #cccccc]"

#   define gui.choice_button_text_hover_color = "#ffffff"
    define gui.choice_button_text_hover_color = "[TRADUCIR: #ffffff]"

#   define gui.unscrollable = "hide"
    define gui.unscrollable = "[TRADUCIR: hide]"

#   define gui.language = "unicode"
    define gui.language = "[TRADUCIR: unicode]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\indepth_character.rpy DIALOGOS: 49

#   config.searchpath.append( "../launcher/game/fonts"
    config.searchpath.append( "[TRADUCIR: ../launcher/game/fonts]"

#   e "We've already seen how to define a Character in Ren'Py. But I want to go into a bit more detail as to what a Character is."
    e "[TRADUCIR: We've already seen how to define a Character in Ren'Py. But I want to go into a bit more detail as to what a Character is.]"

#   define e_shout = Character( "Eileen"
    define e_shout = Character( "[TRADUCIR: Eileen]"

#   define e_whisper = Character( "Eileen"
    define e_whisper = Character( "[TRADUCIR: Eileen]"

#   e "Here are couple of additional characters."
    e "[TRADUCIR: Here are couple of additional characters.]"

#   e "Each statement creates a Character object, and gives it a single argument, a name. If the name is None, no name is displayed."
    e "[TRADUCIR: Each statement creates a Character object, and gives it a single argument, a name. If the name is None, no name is displayed.]"

#   e "This can be followed by named arguments that set properties of the character. A named argument is a property name, an equals sign, and a value."
    e "[TRADUCIR: This can be followed by named arguments that set properties of the character. A named argument is a property name, an equals sign, and a value.]"

#   e "Multiple arguments should be separated with commas, like they are here. Let's see those characters in action."
    e "[TRADUCIR: Multiple arguments should be separated with commas, like they are here. Let's see those characters in action.]"

#   e_shout "I can shout!"
    e_shout "[TRADUCIR: I can shout!]"

#   e_whisper "And I can speak in a whisper."
    e_whisper "[TRADUCIR: And I can speak in a whisper.]"

#   e "This example shows how the name Character is a bit of a misnomer. Here, we have multiple Characters in use, but you see it as me speaking."
    e "[TRADUCIR: This example shows how the name Character is a bit of a misnomer. Here, we have multiple Characters in use, but you see it as me speaking.]"

#   e "It's best to think of a Character as repesenting a name and style, rather than a single person."
    e "[TRADUCIR: It's best to think of a Character as repesenting a name and style, rather than a single person.]"

#   e "There are a lot of properties that can be given to Characters, most of them prefixed styles."
    e "[TRADUCIR: There are a lot of properties that can be given to Characters, most of them prefixed styles.]"

#   e "Properties beginning with window apply to the textbox, those with what apply to the the dialogue, and those with who to the name of Character speaking."
    e "[TRADUCIR: Properties beginning with window apply to the textbox, those with what apply to the the dialogue, and those with who to the name of Character speaking.]"

#   e "If you leave a prefix out, the style customizes the name of the speaker."
    e "[TRADUCIR: If you leave a prefix out, the style customizes the name of the speaker.]"

#   e "There are quite a few different properties that can be set this way. Here are some of the most useful."
    e "[TRADUCIR: There are quite a few different properties that can be set this way. Here are some of the most useful.]"

#   define e1 = Character( "Eileen"
    define e1 = Character( "[TRADUCIR: Eileen]"

#   e1 "The window_background property sets the image that's used for the background of the textbox, which should be the same size as the default in gui/textbox.png."
    e1 "[TRADUCIR: The window_background property sets the image that's used for the background of the textbox, which should be the same size as the default in gui/textbox.png.]"

#   define e1a = Character( "Eileen"
    define e1a = Character( "[TRADUCIR: Eileen]"

#   e1a "If it's set to None, the textbox has no background window."
    e1a "[TRADUCIR: If it's set to None, the textbox has no background window.]"

#   define e2 = Character( "Eileen"
    define e2 = Character( "[TRADUCIR: Eileen]"

#   e2 "The who_color and what_color properties set the color of the character's name and dialogue text, respectively."
    e2 "[TRADUCIR: The who_color and what_color properties set the color of the character's name and dialogue text, respectively.]"

#   e2 "The colors are strings containing rgb hex codes, the same sort of colors understood by a web browser."
    e2 "[TRADUCIR: The colors are strings containing rgb hex codes, the same sort of colors understood by a web browser.]"

#   define e3 = Character( "Eileen"
    define e3 = Character( "[TRADUCIR: Eileen]"

#   e3 "Similarly, the who_font and what_font properties set the font used by the different kinds of text."
    e3 "[TRADUCIR: Similarly, the who_font and what_font properties set the font used by the different kinds of text.]"

#   define e4 = Character( "Eileen"
    define e4 = Character( "[TRADUCIR: Eileen]"

#   e4 "Setting the who_bold, what_italic, and what_size properties makes the name bold, and the dialogue text italic at a size of 20 pixels."
    e4 "[TRADUCIR: Setting the who_bold, what_italic, and what_size properties makes the name bold, and the dialogue text italic at a size of 20 pixels.]"

#   e4 "Of course, the what_bold, who_italic and who_size properties also exist, even if they're not used here."
    e4 "[TRADUCIR: Of course, the what_bold, who_italic and who_size properties also exist, even if they're not used here.]"

#   define e5 = Character( "Eileen"
    define e5 = Character( "[TRADUCIR: Eileen]"

#   e5 "The what_outlines property puts an outline around the text."
    e5 "[TRADUCIR: The what_outlines property puts an outline around the text.]"

#   e5 "It's a little complicated since it takes a list with a tuple in it, with the tuple being four things in parenthesis, and the list the square brackets around them."
    e5 "[TRADUCIR: It's a little complicated since it takes a list with a tuple in it, with the tuple being four things in parenthesis, and the list the square brackets around them.]"

#   e5 "The first number is the size of the outline, in pixels. That's followed by a string giving the hex-code of the color of the outline, and the x and y offsets."
    e5 "[TRADUCIR: The first number is the size of the outline, in pixels. That's followed by a string giving the hex-code of the color of the outline, and the x and y offsets.]"

#   define e6 = Character( "Eileen"
    define e6 = Character( "[TRADUCIR: Eileen]"

#   e6 "When the outline size is 0 and the offsets are given, what_outlines can also act as a drop-shadow behind the text."
    e6 "[TRADUCIR: When the outline size is 0 and the offsets are given, what_outlines can also act as a drop-shadow behind the text.]"

#   define e7 = Character( "Eileen"
    define e7 = Character( "[TRADUCIR: Eileen]"

#   e7 "The what_xalign and what_textalign properties control the alignment of text, with 0.0 being left, 0.5 being center, and 1.0 being right."
    e7 "[TRADUCIR: The what_xalign and what_textalign properties control the alignment of text, with 0.0 being left, 0.5 being center, and 1.0 being right.]"

#   e7 "The what_xalign property controls where all the text itself is placed within the textbox, while what_textalign controls where rows of text are placed relative to each other."
    e7 "[TRADUCIR: The what_xalign property controls where all the text itself is placed within the textbox, while what_textalign controls where rows of text are placed relative to each other.]"

#   e7 "Generally you'll want to to set them both what_xalign and what_textalign to the same value."
    e7 "[TRADUCIR: Generally you'll want to to set them both what_xalign and what_textalign to the same value.]"

#   e7 "Setting what_layout to 'subtitle' puts Ren'Py in subtitle mode, which tries to even out the length of every line of text in a block."
    e7 "[TRADUCIR: Setting what_layout to 'subtitle' puts Ren'Py in subtitle mode, which tries to even out the length of every line of text in a block.]"

#   e8 "These properties can be combined to achieve many different effects."
    e8 "[TRADUCIR: These properties can be combined to achieve many different effects.]"

#   what_outlines=[( 1, "#008000"
    what_outlines=[( 1, "[TRADUCIR: #008000]"

#   e8 "This example hides the background and shows dialogue centered and outlined, as if the game is being subtitled."
    e8 "[TRADUCIR: This example hides the background and shows dialogue centered and outlined, as if the game is being subtitled.]"

#   define e9 = Character( "Eileen"
    define e9 = Character( "[TRADUCIR: Eileen]"

#   e9 "There are two interesting non-style properties, what_prefix and what_suffix. These can put text at the start and end of a line of dialogue."
    e9 "[TRADUCIR: There are two interesting non-style properties, what_prefix and what_suffix. These can put text at the start and end of a line of dialogue.]"

#   define l8 = Character(kind=e8, what_outlines=[( 1, "#c00000"
    define l8 = Character(kind=e8, what_outlines=[( 1, "[TRADUCIR: #c00000]"

#   e "By using kind, you can copy properties from one character to another, changing only what you need to."
    e "[TRADUCIR: By using kind, you can copy properties from one character to another, changing only what you need to.]"

#   l8 "Like this! Finally I get some more dialogue around here."
    l8 "[TRADUCIR: Like this! Finally I get some more dialogue around here.]"

#   e "The last thing you have to know is that there's a special character, narrator, that speaks narration. Got it?"
    e "[TRADUCIR: The last thing you have to know is that there's a special character, narrator, that speaks narration. Got it?]"

#   "I think I do."
    "[TRADUCIR: I think I do.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\indepth_displayables.rpy DIALOGOS: 34

#   "logo base"
    "[TRADUCIR: logo base]"

#   e "Ren'Py has the concept of a displayable, which is something like an image that can be shown and hidden."
    e "[TRADUCIR: Ren'Py has the concept of a displayable, which is something like an image that can be shown and hidden.]"

#   image logo base = "logo base.png"
    image logo base = "[TRADUCIR: logo base.png]"

#   e "The image statement is used to give an image name to a displayable. The easy way is to simply give an image filename."
    e "[TRADUCIR: The image statement is used to give an image name to a displayable. The easy way is to simply give an image filename.]"

#   image logo alias = "logo base"
    image logo alias = "[TRADUCIR: logo base]"

#   e "But that's not the only thing that an image can refer to. When the string doesn't have a dot in it, Ren'Py interprets that as a reference to a second image."
    e "[TRADUCIR: But that's not the only thing that an image can refer to. When the string doesn't have a dot in it, Ren'Py interprets that as a reference to a second image.]"

#   image bg red = "#c00"
    image bg red = "[TRADUCIR: #c00]"

#   image bg blue = "#0000cc"
    image bg blue = "[TRADUCIR: #0000cc]"

#   image overlay red = "#c008"
    image overlay red = "[TRADUCIR: #c008]"

#   image overlay blue = "#0000cc88"
    image overlay blue = "[TRADUCIR: #0000cc88]"

#   e "The string can also contain a color code, consisting of hexadecimal digits, just like the colors used by web browsers."
    e "[TRADUCIR: The string can also contain a color code, consisting of hexadecimal digits, just like the colors used by web browsers.]"

#   e "Three or six digit colors are opaque, containing red, green, and blue values. The four and eight digit versions append alpha, allowing translucent colors."
    e "[TRADUCIR: Three or six digit colors are opaque, containing red, green, and blue values. The four and eight digit versions append alpha, allowing translucent colors.]"

#   image logo rotated = Transform( "logo base"
    image logo rotated = Transform( "[TRADUCIR: logo base]"

#   e "The Transform displayable takes a displayable and can apply transform properties to it."
    e "[TRADUCIR: The Transform displayable takes a displayable and can apply transform properties to it.]"

#   e "Notice how, since it takes a displayable, it can take another image. In fact, it can take any displayable defined here."
    e "[TRADUCIR: Notice how, since it takes a displayable, it can take another image. In fact, it can take any displayable defined here.]"

#   image logo solidexample = Solid( "#0000cc"
    image logo solidexample = Solid( "[TRADUCIR: #0000cc]"

#   e "There's a more complete form of Solid, that can take style properties. This lets us change the size of the Solid, where normally it fills the screen."
    e "[TRADUCIR: There's a more complete form of Solid, that can take style properties. This lets us change the size of the Solid, where normally it fills the screen.]"

#   image logo text = Text(_( "This is a text displayable."
    image logo text = Text(_( "[TRADUCIR: This is a text displayable.]"

#   e "The Text displayable lets Ren'Py treat text as if it was an image."
    e "[TRADUCIR: The Text displayable lets Ren'Py treat text as if it was an image.]"

#   image logo text rotate = Transform(Text(_( "This is a text displayable."
    image logo text rotate = Transform(Text(_( "[TRADUCIR: This is a text displayable.]"

#   e "This means that we can apply other displayables, like Transform, to Text in the same way we do to images."
    e "[TRADUCIR: This means that we can apply other displayables, like Transform, to Text in the same way we do to images.]"

#   (0, 0), "logo blink"
    (0, 0), "[TRADUCIR: logo blink]"

#   (0, 50), "logo base.png"
    (0, 50), "[TRADUCIR: logo base.png]"

#   (0, 100), "logo base.png"
    (0, 100), "[TRADUCIR: logo base.png]"

#   e "The Composite displayable lets us group multiple displayables together into a single one, from bottom to top."
    e "[TRADUCIR: The Composite displayable lets us group multiple displayables together into a single one, from bottom to top.]"

#   image ninepatch frame = Frame( "ninepatch"
    image ninepatch frame = Frame( "[TRADUCIR: ninepatch]"

#   e "Some displayables are often used to customize the Ren'Py interface, with the Frame displayable being one of them. The frame displayable takes another displayable, and the size of the left, top, right, and bottom borders."
    e "[TRADUCIR: Some displayables are often used to customize the Ren'Py interface, with the Frame displayable being one of them. The frame displayable takes another displayable, and the size of the left, top, right, and bottom borders.]"

#   e "The Frame displayable expands or shrinks to fit the area available to it. It does this by scaling the center in two dimensions and the sides in one, while keeping the corners the same size."
    e "[TRADUCIR: The Frame displayable expands or shrinks to fit the area available to it. It does this by scaling the center in two dimensions and the sides in one, while keeping the corners the same size.]"

#   image ninepatch frame tiled = Frame( "ninepatch"
    image ninepatch frame tiled = Frame( "[TRADUCIR: ninepatch]"

#   e "A Frame can also tile sections of the displayable supplied to it, rather than scaling."
    e "[TRADUCIR: A Frame can also tile sections of the displayable supplied to it, rather than scaling.]"

#   image ninepatch paper tiled = Frame( "ninepatch paper"
    image ninepatch paper tiled = Frame( "[TRADUCIR: ninepatch paper]"

#   e "Frames might look a little weird in the abstract, but when used with a texture, you can see how we create scalable interface components."
    e "[TRADUCIR: Frames might look a little weird in the abstract, but when used with a texture, you can see how we create scalable interface components.]"

#   e "These are just the simplest displayables, the ones you'll use directly the most often."
    e "[TRADUCIR: These are just the simplest displayables, the ones you'll use directly the most often.]"

#   e "You can even write custom displayables for minigames, if you're proficient at Python. But for many visual novels, these will be all you'll need."
    e "[TRADUCIR: You can even write custom displayables for minigames, if you're proficient at Python. But for many visual novels, these will be all you'll need.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\indepth_minigame.rpy DIALOGOS: 28

#   self.paddle = Solid( "#ffffff"
    self.paddle = Solid( "[TRADUCIR: #ffffff]"

#   self.ball = Solid( "#ffffff"
    self.ball = Solid( "[TRADUCIR: #ffffff]"

#   renpy.sound.play( "pong_beep.opus"
    renpy.sound.play( "[TRADUCIR: pong_beep.opus]"

#   renpy.sound.play( "pong_beep.opus"
    renpy.sound.play( "[TRADUCIR: pong_beep.opus]"

#   renpy.sound.play( "pong_boop.opus"
    renpy.sound.play( "[TRADUCIR: pong_boop.opus]"

#   self.winner = "eileen"
    self.winner = "[TRADUCIR: eileen]"

#   self.winner = "player"
    self.winner = "[TRADUCIR: player]"

#   add "bg pong field"
    add "[TRADUCIR: bg pong field]"

#   text _( "Player"
    text _( "[TRADUCIR: Player]"

#   text _( "Eileen"
    text _( "[TRADUCIR: Eileen]"

#   text _( "Click to Begin"
    text _( "[TRADUCIR: Click to Begin]"

#   e "You may want to mix Ren'Py with other forms of gameplay. There are a couple of ways to do this."
    e "[TRADUCIR: You may want to mix Ren'Py with other forms of gameplay. There are a couple of ways to do this.]"

#   e "The first is with the screen system, which can be used to display data and create button and menu based interfaces."
    e "[TRADUCIR: The first is with the screen system, which can be used to display data and create button and menu based interfaces.]"

#   e "Screens will work for many simulation-style games and RPGs."
    e "[TRADUCIR: Screens will work for many simulation-style games and RPGs.]"

#   e "When screens are not enough, you can write a creator-defined displayable to extend Ren'Py itself. A creator-defined displayable can process raw events and draw to the screen."
    e "[TRADUCIR: When screens are not enough, you can write a creator-defined displayable to extend Ren'Py itself. A creator-defined displayable can process raw events and draw to the screen.]"

#   e "That makes it possible to create all kinds of minigames. Would you like to play some pong?"
    e "[TRADUCIR: That makes it possible to create all kinds of minigames. Would you like to play some pong?]"

#   if _return == "eileen"
    if _return == "[TRADUCIR: eileen]"

#   e "I win!"
    e "[TRADUCIR: I win!]"

#   e "You won! Congratulations."
    e "[TRADUCIR: You won! Congratulations.]"

#   e "Would you like to play again?"
    e "[TRADUCIR: Would you like to play again?]"

#   "Sure."
    "[TRADUCIR: Sure.]"

#   "No thanks."
    "[TRADUCIR: No thanks.]"

#   e "Here's the source code for the minigame. It's very complex, and assumes you understand Python well."
    e "[TRADUCIR: Here's the source code for the minigame. It's very complex, and assumes you understand Python well.]"

#   e "I won't go over it in detail here. You can read more about it in the {a=https://www.renpy.org/doc/html/udd.html}Creator-Defined Displayable documentation{/a}."
    e "[TRADUCIR: I won't go over it in detail here. You can read more about it in the {a=https://www.renpy.org/doc/html/udd.html}Creator-Defined Displayable documentation{/a}.]"

#   e "Minigames can spice up your visual novel, but be careful – not every visual novel player wants to be good at arcade games."
    e "[TRADUCIR: Minigames can spice up your visual novel, but be careful – not every visual novel player wants to be good at arcade games.]"

#   e "Part of the reason Ren'Py works well is that it's meant for certain types of games, like visual novels and life simulations."
    e "[TRADUCIR: Part of the reason Ren'Py works well is that it's meant for certain types of games, like visual novels and life simulations.]"

#   e "The further afield you get from those games, the more you'll find yourself fighting Ren'Py. At some point, it makes sense to consider other engines."
    e "[TRADUCIR: The further afield you get from those games, the more you'll find yourself fighting Ren'Py. At some point, it makes sense to consider other engines.]"

#   e "And that's fine with us. We'll always be here for you when you're making visual novels."
    e "[TRADUCIR: And that's fine with us. We'll always be here for you when you're making visual novels.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\indepth_style.rpy DIALOGOS: 273

#   textbutton _( "Button 1"
    textbutton _( "[TRADUCIR: Button 1]"

#   textbutton _( "Button 2"
    textbutton _( "[TRADUCIR: Button 2]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   text_style "empty"
    text_style "[TRADUCIR: empty]"

#   background RoundRect( "#003c78"
    background RoundRect( "[TRADUCIR: #003c78]"

#   hover_background RoundRect( "#0050a0"
    hover_background RoundRect( "[TRADUCIR: #0050a0]"

#   text_color "#c8ffff"
    text_color "[TRADUCIR: #c8ffff]"

#   e "When you create a new project, Ren'Py will automatically create a GUI - a Graphical User Interface - for it."
    e "[TRADUCIR: When you create a new project, Ren'Py will automatically create a GUI - a Graphical User Interface - for it.]"

#   e "It defines the look of both in-game interface, like this text box, and out-of-game interface like the main and game menus."
    e "[TRADUCIR: It defines the look of both in-game interface, like this text box, and out-of-game interface like the main and game menus.]"

#   e "The default GUI is meant to be nice enough for a simple project. With a few small changes, it's what you're seeing in this game."
    e "[TRADUCIR: The default GUI is meant to be nice enough for a simple project. With a few small changes, it's what you're seeing in this game.]"

#   e "The GUI is also meant to be easy for an intermediate creator to customize. Customizing the GUI consists of changing the image files in the gui directory, and changing variables in gui.rpy."
    e "[TRADUCIR: The GUI is also meant to be easy for an intermediate creator to customize. Customizing the GUI consists of changing the image files in the gui directory, and changing variables in gui.rpy.]"

#   e "At the same time, even when customized, the default GUI might be too recognizable for an extremely polished game. That's why we've made it easy to totally replace."
    e "[TRADUCIR: At the same time, even when customized, the default GUI might be too recognizable for an extremely polished game. That's why we've made it easy to totally replace.]"

#   e "We've put an extensive guide to customizing the GUI on the Ren'Py website. So if you want to learn more, visit the {a=https://www.renpy.org/doc/html/gui.html}GUI customization guide{/a}."
    e "[TRADUCIR: We've put an extensive guide to customizing the GUI on the Ren'Py website. So if you want to learn more, visit the {a=https://www.renpy.org/doc/html/gui.html}GUI customization guide{/a}.]"

#   e "Ren'Py has a powerful style system that controls what displayables look like."
    e "[TRADUCIR: Ren'Py has a powerful style system that controls what displayables look like.]"

#   e "While the default GUI uses variables to provide styles with sensible defaults, if you're replacing the GUI or creating your own screens, you'll need to learn about styles yourself."
    e "[TRADUCIR: While the default GUI uses variables to provide styles with sensible defaults, if you're replacing the GUI or creating your own screens, you'll need to learn about styles yourself.]"

#   e "What would you like to know about styles?"
    e "[TRADUCIR: What would you like to know about styles?]"

#   "Style basics."
    "[TRADUCIR: Style basics.]"

#   "General style properties."
    "[TRADUCIR: General style properties.]"

#   "Text style properties."
    "[TRADUCIR: Text style properties.]"

#   "Window and Button style properties."
    "[TRADUCIR: Window and Button style properties.]"

#   "Bar style properties."
    "[TRADUCIR: Bar style properties.]"

#   "Box, Grid, and Fixed style properties."
    "[TRADUCIR: Box, Grid, and Fixed style properties.]"

#   "The Displayable Inspector."
    "[TRADUCIR: The Displayable Inspector.]"

#   "That's all I want to know."
    "[TRADUCIR: That's all I want to know.]"

#   e "Styles let a displayable look different from game to game, or even inside the same game."
    e "[TRADUCIR: Styles let a displayable look different from game to game, or even inside the same game.]"

#   e "Both of these buttons use the same displayables. But since different styles have been applied, the buttons look different from each other."
    e "[TRADUCIR: Both of these buttons use the same displayables. But since different styles have been applied, the buttons look different from each other.]"

#   e "Styles are a combination of information from four different places."
    e "[TRADUCIR: Styles are a combination of information from four different places.]"

#   text _( "This text is colored green."
    text _( "[TRADUCIR: This text is colored green.]"

#   style "my_text"
    style "[TRADUCIR: my_text]"

#   color "#c0ffc0"
    color "[TRADUCIR: #c0ffc0]"

#   e "The first place Ren'Py can get style information from is part of a screen. Each displayable created by a screen can take a style name and style properties."
    e "[TRADUCIR: The first place Ren'Py can get style information from is part of a screen. Each displayable created by a screen can take a style name and style properties.]"

#   textbutton _( "Danger"
    textbutton _( "[TRADUCIR: Danger]"

#   text_color "#c04040"
    text_color "[TRADUCIR: #c04040]"

#   text_hover_color "#ff0000"
    text_hover_color "[TRADUCIR: #ff0000]"

#   e "When a screen displayable contains text, style properties prefixed with text_ apply to that text."
    e "[TRADUCIR: When a screen displayable contains text, style properties prefixed with text_ apply to that text.]"

#   image style2 = Text(_( "This text is colored red."
    image style2 = Text(_( "[TRADUCIR: This text is colored red.]"

#   e "The next is as part of a displayable created in an image statement. Style properties are just arguments to the displayable."
    e "[TRADUCIR: The next is as part of a displayable created in an image statement. Style properties are just arguments to the displayable.]"

#   define egreen = Character( "Eileen"
    define egreen = Character( "[TRADUCIR: Eileen]"

#   egreen "Style properties can also be given as arguments when defining a character."
    egreen "[TRADUCIR: Style properties can also be given as arguments when defining a character.]"

#   egreen "Arguments beginning with who_ are style properties applied to the character's name, while those beginning with what_ are applied to the character's dialogue."
    egreen "[TRADUCIR: Arguments beginning with who_ are style properties applied to the character's name, while those beginning with what_ are applied to the character's dialogue.]"

#   egreen "Style properties that don't have a prefix are also applied to the character's name."
    egreen "[TRADUCIR: Style properties that don't have a prefix are also applied to the character's name.]"

#   color "#c0c0ff"
    color "[TRADUCIR: #c0c0ff]"

#   image style3 = Text(_( "This text is colored blue."
    image style3 = Text(_( "[TRADUCIR: This text is colored blue.]"

#   e "Finally, there is the the style statement, which creates or changes a named style. By giving Text the style argument, we tell it to use the blue_text style."
    e "[TRADUCIR: Finally, there is the the style statement, which creates or changes a named style. By giving Text the style argument, we tell it to use the blue_text style.]"

#   e "A style property can inherit from a parent. If a style property is not given in a style, it comes from the parent of that style."
    e "[TRADUCIR: A style property can inherit from a parent. If a style property is not given in a style, it comes from the parent of that style.]"

#   e "By default the parent of the style has the same name, with the prefix up to the the first underscore removed. If the style does not have an underscore in its name, 'default' is used."
    e "[TRADUCIR: By default the parent of the style has the same name, with the prefix up to the the first underscore removed. If the style does not have an underscore in its name, 'default' is used.]"

#   e "For example, blue_text inherits from text, which in turn inherits from default. The default style defines all properties, so it doesn't inherit from anything."
    e "[TRADUCIR: For example, blue_text inherits from text, which in turn inherits from default. The default style defines all properties, so it doesn't inherit from anything.]"

#   color "#c0c0ff"
    color "[TRADUCIR: #c0c0ff]"

#   e "The parent can be explicitly changed by giving the style statement an 'is' clause. In this case, we're explictly setting the style to the parent of text."
    e "[TRADUCIR: The parent can be explicitly changed by giving the style statement an 'is' clause. In this case, we're explictly setting the style to the parent of text.]"

#   e "Each displayable has a default style name. By default, it's usually the lower-case displayable name, like 'text' for Text, or 'button' for buttons."
    e "[TRADUCIR: Each displayable has a default style name. By default, it's usually the lower-case displayable name, like 'text' for Text, or 'button' for buttons.]"

#   e "In a screen, a displayable can be given the style_prefix property to give a prefix for that displayable and its children."
    e "[TRADUCIR: In a screen, a displayable can be given the style_prefix property to give a prefix for that displayable and its children.]"

#   e "For example, a text displayable with a style_prefix of 'help' will be given the style 'help_text'."
    e "[TRADUCIR: For example, a text displayable with a style_prefix of 'help' will be given the style 'help_text'.]"

#   e "Lastly, when a displayable is a button, or inside a button, it can take style prefixes."
    e "[TRADUCIR: Lastly, when a displayable is a button, or inside a button, it can take style prefixes.]"

#   e "The prefixes idle_, hover_, and insensitive_ are used when the button is unfocused, focused, and unfocusable."
    e "[TRADUCIR: The prefixes idle_, hover_, and insensitive_ are used when the button is unfocused, focused, and unfocusable.]"

#   e "These can be preceded by selected_ to change how the button looks when it represents a selected value or screen."
    e "[TRADUCIR: These can be preceded by selected_ to change how the button looks when it represents a selected value or screen.]"

#   idle_color "#c0c0c0"
    idle_color "[TRADUCIR: #c0c0c0]"

#   hover_color "#ffffff"
    hover_color "[TRADUCIR: #ffffff]"

#   insensitive_color "#303030"
    insensitive_color "[TRADUCIR: #303030]"

#   selected_idle_color "#e0e080"
    selected_idle_color "[TRADUCIR: #e0e080]"

#   selected_hover_color "#ffffc0"
    selected_hover_color "[TRADUCIR: #ffffc0]"

#   style_prefix "styled"
    style_prefix "[TRADUCIR: styled]"

#   textbutton "Button 1"
    textbutton "[TRADUCIR: Button 1]"

#   textbutton "Button 2"
    textbutton "[TRADUCIR: Button 2]"

#   textbutton "Button 3"
    textbutton "[TRADUCIR: Button 3]"

#   e "This screen shows the style prefixes in action. You can click on a button to select it, or click outside to advance."
    e "[TRADUCIR: This screen shows the style prefixes in action. You can click on a button to select it, or click outside to advance.]"

#   e "Those are the basics of styles. If GUI customization isn't enough for you, styles let you customize just about everything in Ren'Py."
    e "[TRADUCIR: Those are the basics of styles. If GUI customization isn't enough for you, styles let you customize just about everything in Ren'Py.]"

#   text _( "Orbiting Earth in the spaceship, I saw how beautiful our planet is.\n–Yuri Gagarin"
    text _( "[TRADUCIR: Orbiting Earth in the spaceship, I saw how beautiful our planet is.\n–Yuri Gagarin]"

#   e "The first group of style properties that we'll go over are the general style properties. These work with every displayable, or at least many different ones."
    e "[TRADUCIR: The first group of style properties that we'll go over are the general style properties. These work with every displayable, or at least many different ones.]"

#   show screen general( "general"
    show screen general( "[TRADUCIR: general]"

#   e "Every displayable takes the position properties, which control where it can be placed on screen. Since I've already mentioned them, I won't repeat them here."
    e "[TRADUCIR: Every displayable takes the position properties, which control where it can be placed on screen. Since I've already mentioned them, I won't repeat them here.]"

#   show screen general( "minmax_general"
    show screen general( "[TRADUCIR: minmax_general]"

#   e "The xmaximum and ymaximum properties set the maximum width and height of the displayable, respectively. This will cause Ren'Py to shrink things, if possible."
    e "[TRADUCIR: The xmaximum and ymaximum properties set the maximum width and height of the displayable, respectively. This will cause Ren'Py to shrink things, if possible.]"

#   e "Sometimes, the shrunken size will be smaller than the size given by xmaximum and ymaximum."
    e "[TRADUCIR: Sometimes, the shrunken size will be smaller than the size given by xmaximum and ymaximum.]"

#   e "Similarly, the xminimum and yminimum properties set the minimum width and height. If the displayable is smaller, Ren'Py will try to make it bigger."
    e "[TRADUCIR: Similarly, the xminimum and yminimum properties set the minimum width and height. If the displayable is smaller, Ren'Py will try to make it bigger.]"

#   show screen general( "xysize_general"
    show screen general( "[TRADUCIR: xysize_general]"

#   e "The xsize and ysize properties set the minimum and maximum size to the same value, fixing the size."
    e "[TRADUCIR: The xsize and ysize properties set the minimum and maximum size to the same value, fixing the size.]"

#   e "These only works for displayables than can be resized. Some displayables, like images, can't be made bigger or smaller."
    e "[TRADUCIR: These only works for displayables than can be resized. Some displayables, like images, can't be made bigger or smaller.]"

#   show screen general( "area_general"
    show screen general( "[TRADUCIR: area_general]"

#   e "The area property takes a tuple - a parenthesis bounded list of four items. The first two give the position, and the second two the size."
    e "[TRADUCIR: The area property takes a tuple - a parenthesis bounded list of four items. The first two give the position, and the second two the size.]"

#   alt _( "\"
    alt _( "[TRADUCIR: \]"

#   show screen general( "alt_general"
    show screen general( "[TRADUCIR: alt_general]"

#   e "Finally, the alt property changes the text used by self-voicing for the hearing impaired."
    e "[TRADUCIR: Finally, the alt property changes the text used by self-voicing for the hearing impaired.]"

#   text _( "Vertical"
    text _( "[TRADUCIR: Vertical]"

#   text _( "Far better it is to dare mighty things, to win glorious triumphs, even though checkered by failure, than to rank with those poor spirits who neither enjoy nor suffer much, because they live in the gray twilight that knows not victory nor defeat.\n\n–Theodore Roosevelt"
    text _( "[TRADUCIR: Far better it is to dare mighty things, to win glorious triumphs, even though checkered by failure, than to rank with those poor spirits who neither enjoy nor suffer much, because they live in the gray twilight that knows not victory nor defeat.\n\n–Theodore Roosevelt]"

#   e "The text style properties apply to text and input displayables."
    e "[TRADUCIR: The text style properties apply to text and input displayables.]"

#   e "Text displayables can be created implicitly or explicitly. For example, a textbutton creates a text displayable with a style ending in button_text."
    e "[TRADUCIR: Text displayables can be created implicitly or explicitly. For example, a textbutton creates a text displayable with a style ending in button_text.]"

#   e "These can also be set in gui.rpy by changing or defining variables with names like gui.button_text_size."
    e "[TRADUCIR: These can also be set in gui.rpy by changing or defining variables with names like gui.button_text_size.]"

#   show screen text( "bold_text"
    show screen text( "[TRADUCIR: bold_text]"

#   e "The bold style property makes the text bold. This can be done using an algorithm, rather than a different version of the font."
    e "[TRADUCIR: The bold style property makes the text bold. This can be done using an algorithm, rather than a different version of the font.]"

#   color "#c0ffc0"
    color "[TRADUCIR: #c0ffc0]"

#   show screen text( "color_text"
    show screen text( "[TRADUCIR: color_text]"

#   e "The color property changes the color of the text. It takes hex color codes, just like everything else in Ren'Py."
    e "[TRADUCIR: The color property changes the color of the text. It takes hex color codes, just like everything else in Ren'Py.]"

#   show screen text( "first_indent_text"
    show screen text( "[TRADUCIR: first_indent_text]"

#   e "The first_indent style property determines how far the first line is indented."
    e "[TRADUCIR: The first_indent style property determines how far the first line is indented.]"

#   font "DejaVuSans-Bold.ttf"
    font "[TRADUCIR: DejaVuSans-Bold.ttf]"

#   show screen text( "font_text"
    show screen text( "[TRADUCIR: font_text]"

#   e "The font style property changes the font the text uses. Ren'Py takes TrueType and OpenType fonts, and you'll have to include the font file as part of your visual novel."
    e "[TRADUCIR: The font style property changes the font the text uses. Ren'Py takes TrueType and OpenType fonts, and you'll have to include the font file as part of your visual novel.]"

#   show screen text( "size_text"
    show screen text( "[TRADUCIR: size_text]"

#   e "The size property changes the size of the text."
    e "[TRADUCIR: The size property changes the size of the text.]"

#   show screen text( "italic_text"
    show screen text( "[TRADUCIR: italic_text]"

#   e "The italic property makes the text italic. Again, this is better done with a font, but for short amounts of text Ren'Py can do it for you."
    e "[TRADUCIR: The italic property makes the text italic. Again, this is better done with a font, but for short amounts of text Ren'Py can do it for you.]"

#   show screen text( "justify_text"
    show screen text( "[TRADUCIR: justify_text]"

#   e "The justify property makes the text justified, lining all but the last line up on the left and the right side."
    e "[TRADUCIR: The justify property makes the text justified, lining all but the last line up on the left and the right side.]"

#   show screen text( "kerning_text"
    show screen text( "[TRADUCIR: kerning_text]"

#   e "The kerning property kerns the text. When it's negative, characters are closer together. When positive, characters are farther apart."
    e "[TRADUCIR: The kerning property kerns the text. When it's negative, characters are closer together. When positive, characters are farther apart.]"

#   show screen text( "leading_spacing_text"
    show screen text( "[TRADUCIR: leading_spacing_text]"

#   e "The line_leading and line_spacing properties put spacing before each line, and between lines, respectively."
    e "[TRADUCIR: The line_leading and line_spacing properties put spacing before each line, and between lines, respectively.]"

#   outlines [ (1, "#408040"
    outlines [ (1, "[TRADUCIR: #408040]"

#   show screen text( "outlines_text"
    show screen text( "[TRADUCIR: outlines_text]"

#   e "The outlines property puts outlines around text. This takes a list of tuples, which is a bit complicated."
    e "[TRADUCIR: The outlines property puts outlines around text. This takes a list of tuples, which is a bit complicated.]"

#   e "But if you ignore the brackets and parenthesis, you have the width of the outline, the color, and then horizontal and vertical offsets."
    e "[TRADUCIR: But if you ignore the brackets and parenthesis, you have the width of the outline, the color, and then horizontal and vertical offsets.]"

#   show screen text( "rest_indent_text"
    show screen text( "[TRADUCIR: rest_indent_text]"

#   e "The rest_indent property controls the indentation of lines after the first one."
    e "[TRADUCIR: The rest_indent property controls the indentation of lines after the first one.]"

#   show screen text( "center_text"
    show screen text( "[TRADUCIR: center_text]"

#   e "The textalign property controls the positioning of multiple lines of text inside the text displayable. For example, 0.5 means centered."
    e "[TRADUCIR: The textalign property controls the positioning of multiple lines of text inside the text displayable. For example, 0.5 means centered.]"

#   e "It doesn't change the position of the text displayable itself. For that, you'll often want to set the textalign and xalign to the same value."
    e "[TRADUCIR: It doesn't change the position of the text displayable itself. For that, you'll often want to set the textalign and xalign to the same value.]"

#   show screen text( "right_text"
    show screen text( "[TRADUCIR: right_text]"

#   e "When both textalign and xalign are set to 1.0, the text is properly right-justified."
    e "[TRADUCIR: When both textalign and xalign are set to 1.0, the text is properly right-justified.]"

#   show screen text( "underline_text"
    show screen text( "[TRADUCIR: underline_text]"

#   e "The underline property underlines the text."
    e "[TRADUCIR: The underline property underlines the text.]"

#   e "Those are the most common text style properties, but not the only ones. Here are a few more that you might need in special circumstances."
    e "[TRADUCIR: Those are the most common text style properties, but not the only ones. Here are a few more that you might need in special circumstances.]"

#   show screen text( "antialias_text"
    show screen text( "[TRADUCIR: antialias_text]"

#   e "By default, text in Ren'Py is antialiased, to smooth the edges. The antialias property can turn that off, and make the text a little more jagged."
    e "[TRADUCIR: By default, text in Ren'Py is antialiased, to smooth the edges. The antialias property can turn that off, and make the text a little more jagged.]"

#   show screen text( "adjust_true_text"
    show screen text( "[TRADUCIR: adjust_true_text]"

#   e "The adjust_spacing property is a very subtle one, that only matters when a player resizes the window. When True, characters will be shifted a bit so the Text has the same relative spacing."
    e "[TRADUCIR: The adjust_spacing property is a very subtle one, that only matters when a player resizes the window. When True, characters will be shifted a bit so the Text has the same relative spacing.]"

#   show screen text( "adjust_false_text"
    show screen text( "[TRADUCIR: adjust_false_text]"

#   e "When False, the text won't jump around as much. But it can be a little wider or narrower based on screen size."
    e "[TRADUCIR: When False, the text won't jump around as much. But it can be a little wider or narrower based on screen size.]"

#   layout "nobreak"
    layout "[TRADUCIR: nobreak]"

#   show screen text( "layout_nobreak_text"
    show screen text( "[TRADUCIR: layout_nobreak_text]"

#   e "The layout property has a few special values that control where lines are broken. The 'nobreak' value disables line breaks entirely, making the text wider."
    e "[TRADUCIR: The layout property has a few special values that control where lines are broken. The 'nobreak' value disables line breaks entirely, making the text wider.]"

#   layout "subtitle"
    layout "[TRADUCIR: subtitle]"

#   show screen text( "layout_subtitle_text"
    show screen text( "[TRADUCIR: layout_subtitle_text]"

#   e "When the layout property is set to 'subtitle', the line breaking algorithm is changed to try to make all lines even in length, as subtitles usually are."
    e "[TRADUCIR: When the layout property is set to 'subtitle', the line breaking algorithm is changed to try to make all lines even in length, as subtitles usually are.]"

#   show screen text( "strikethrough_text"
    show screen text( "[TRADUCIR: strikethrough_text]"

#   e "The strikethrough property draws a line through the text. It seems pretty unlikely you'd want to use this one."
    e "[TRADUCIR: The strikethrough property draws a line through the text. It seems pretty unlikely you'd want to use this one.]"

#   show screen text( "vertical_text"
    show screen text( "[TRADUCIR: vertical_text]"

#   e "The vertical style property places text in a vertical layout. It's meant for Asian languages with special fonts."
    e "[TRADUCIR: The vertical style property places text in a vertical layout. It's meant for Asian languages with special fonts.]"

#   e "And those are the text style properties. There might be a lot of them, but we want to give you a lot of control over how you present text to your players."
    e "[TRADUCIR: And those are the text style properties. There might be a lot of them, but we want to give you a lot of control over how you present text to your players.]"

#   default selected = "top"
    default selected = "[TRADUCIR: top]"

#   background "#0004"
    background "[TRADUCIR: #0004]"

#   textbutton _( "Top Choice"
    textbutton _( "[TRADUCIR: Top Choice]"

#   action SetScreenVariable( "selected"
    action SetScreenVariable( "[TRADUCIR: selected]"

#   text_style "example_button_text"
    text_style "[TRADUCIR: example_button_text]"

#   textbutton _( "Bottom Choice"
    textbutton _( "[TRADUCIR: Bottom Choice]"

#   action SetScreenVariable( "selected"
    action SetScreenVariable( "[TRADUCIR: selected]"

#   text_style "example_button_text"
    text_style "[TRADUCIR: example_button_text]"

#   color "#404040"
    color "[TRADUCIR: #404040]"

#   hover_color "#4040c0"
    hover_color "[TRADUCIR: #4040c0]"

#   e "Next up, we have the window and button style properties. These apply to windows like the text window at the bottom of this screen and frames like the ones we show examples in."
    e "[TRADUCIR: Next up, we have the window and button style properties. These apply to windows like the text window at the bottom of this screen and frames like the ones we show examples in.]"

#   e "These properties also apply to buttons, in-game and out-of-game. To Ren'Py, a button is a window you can click."
    e "[TRADUCIR: These properties also apply to buttons, in-game and out-of-game. To Ren'Py, a button is a window you can click.]"

#   idle_background Frame( "idle_background.png"
    idle_background Frame( "[TRADUCIR: idle_background.png]"

#   hover_background Frame( "hover_background.png"
    hover_background Frame( "[TRADUCIR: hover_background.png]"

#   e "I'll start off with this style, which everything will inherit from. To make our lives easier, it inherits from the default style, rather than the customized buttons in this game's GUI."
    e "[TRADUCIR: I'll start off with this style, which everything will inherit from. To make our lives easier, it inherits from the default style, rather than the customized buttons in this game's GUI.]"

#   e "The first style property is the background property. It adds a background to a button or window. Since this is a button, idle and hover variants choose different backgrounds when focused."
    e "[TRADUCIR: The first style property is the background property. It adds a background to a button or window. Since this is a button, idle and hover variants choose different backgrounds when focused.]"

#   e "We also center the two buttons, using the xalign position property."
    e "[TRADUCIR: We also center the two buttons, using the xalign position property.]"

#   e "We've also customized the style of the button's text, using this style. It centers the text and makes it change color when hovered."
    e "[TRADUCIR: We've also customized the style of the button's text, using this style. It centers the text and makes it change color when hovered.]"

#   e "Without any padding around the text, the button looks odd. Ren'Py has padding properties that add space inside the button's background."
    e "[TRADUCIR: Without any padding around the text, the button looks odd. Ren'Py has padding properties that add space inside the button's background.]"

#   e "More commonly used are the xpadding and ypadding style properties, which add the same padding to the left and right, or the top and bottom, respectively."
    e "[TRADUCIR: More commonly used are the xpadding and ypadding style properties, which add the same padding to the left and right, or the top and bottom, respectively.]"

#   e "The margin style properties work the same way, except they add space outside the background. The full set exists: left_margin, right_margin, top_margin, bottom_margin, xmargin, and ymargin."
    e "[TRADUCIR: The margin style properties work the same way, except they add space outside the background. The full set exists: left_margin, right_margin, top_margin, bottom_margin, xmargin, and ymargin.]"

#   size_group "example"
    size_group "[TRADUCIR: example]"

#   e "The size_group style property takes a string. Ren'Py will make sure that all the windows or buttons with the same size_group string are the same size."
    e "[TRADUCIR: The size_group style property takes a string. Ren'Py will make sure that all the windows or buttons with the same size_group string are the same size.]"

#   e "Alternatively, the xfill and yfill style properties make a button take up all available space in the horizontal or vertical directions."
    e "[TRADUCIR: Alternatively, the xfill and yfill style properties make a button take up all available space in the horizontal or vertical directions.]"

#   foreground "check_foreground.png"
    foreground "[TRADUCIR: check_foreground.png]"

#   selected_foreground "check_selected_foreground.png"
    selected_foreground "[TRADUCIR: check_selected_foreground.png]"

#   e "The foreground property gives a displayable that is placed on top of the contents and background of the window or button."
    e "[TRADUCIR: The foreground property gives a displayable that is placed on top of the contents and background of the window or button.]"

#   e "One way to use it is to provide extra decorations to a button that's serving as a checkbox. Another would be to use it with a Frame to provide a glossy shine that overlays the button's contents."
    e "[TRADUCIR: One way to use it is to provide extra decorations to a button that's serving as a checkbox. Another would be to use it with a Frame to provide a glossy shine that overlays the button's contents.]"

#   hover_sound "pong_beep.opus"
    hover_sound "[TRADUCIR: pong_beep.opus]"

#   activate_sound "pong_boop.opus"
    activate_sound "[TRADUCIR: pong_boop.opus]"

#   e "There are also a few style properties that only apply to buttons. The hover_sound and activate_sound properties play sound files when a button is focused and activated, respectively."
    e "[TRADUCIR: There are also a few style properties that only apply to buttons. The hover_sound and activate_sound properties play sound files when a button is focused and activated, respectively.]"

#   e "Finally, the focus_mask property applies to partially transparent buttons. When it's set to True, only areas of the button that aren't transparent cause a button to focus."
    e "[TRADUCIR: Finally, the focus_mask property applies to partially transparent buttons. When it's set to True, only areas of the button that aren't transparent cause a button to focus.]"

#   value ScreenVariableValue( "measure"
    value ScreenVariableValue( "[TRADUCIR: measure]"

#   text "[measure:.0f]/100"
    text "[TRADUCIR: [measure:.0f]/100]"

#   value ScreenVariableValue( "measure"
    value ScreenVariableValue( "[TRADUCIR: measure]"

#   text "[measure:.0f]/100"
    text "[TRADUCIR: [measure:.0f]/100]"

#   image bar empty idle vertical = Transform( "bar empty idle"
    image bar empty idle vertical = Transform( "[TRADUCIR: bar empty idle]"

#   image bar empty hover vertical = Transform( "bar empty hover"
    image bar empty hover vertical = Transform( "[TRADUCIR: bar empty hover]"

#   image bar full idle vertical = Transform( "bar full idle"
    image bar full idle vertical = Transform( "[TRADUCIR: bar full idle]"

#   image bar full hover vertical = Transform( "bar full hover"
    image bar full hover vertical = Transform( "[TRADUCIR: bar full hover]"

#   left_bar Frame( "bar empty idle.png"
    left_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_left_bar Frame( "bar empty hover.png"
    hover_left_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   right_bar Frame( "bar empty idle.png"
    right_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_right_bar Frame( "bar empty hover.png"
    hover_right_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   left_bar Frame( "bar full idle.png"
    left_bar Frame( "[TRADUCIR: bar full idle.png]"

#   hover_left_bar Frame( "bar full hover.png"
    hover_left_bar Frame( "[TRADUCIR: bar full hover.png]"

#   right_bar Frame( "bar full idle.png"
    right_bar Frame( "[TRADUCIR: bar full idle.png]"

#   hover_right_bar Frame( "bar full hover.png"
    hover_right_bar Frame( "[TRADUCIR: bar full hover.png]"

#   show screen bar( "empty_only"
    show screen bar( "[TRADUCIR: empty_only]"

#   e "To demonstrate styles, let me first show two of the images we'll be using. This is the image we're using for parts of the bar that are empty."
    e "[TRADUCIR: To demonstrate styles, let me first show two of the images we'll be using. This is the image we're using for parts of the bar that are empty.]"

#   show screen bar( "full_only"
    show screen bar( "[TRADUCIR: full_only]"

#   e "And here's what we use for parts of the bar that are full."
    e "[TRADUCIR: And here's what we use for parts of the bar that are full.]"

#   left_bar Frame( "bar full idle.png"
    left_bar Frame( "[TRADUCIR: bar full idle.png]"

#   hover_left_bar Frame( "bar full hover.png"
    hover_left_bar Frame( "[TRADUCIR: bar full hover.png]"

#   right_bar Frame( "bar empty idle.png"
    right_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_right_bar Frame( "bar empty hover.png"
    hover_right_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   e "The left_bar and right_bar style properties, and their hover variants, give displayables for the left and right side of the bar. By default, the value is shown on the left."
    e "[TRADUCIR: The left_bar and right_bar style properties, and their hover variants, give displayables for the left and right side of the bar. By default, the value is shown on the left.]"

#   e "Also by default, both the left and right displayables are rendered at the full width of the bar, and then cropped to the appropriate size."
    e "[TRADUCIR: Also by default, both the left and right displayables are rendered at the full width of the bar, and then cropped to the appropriate size.]"

#   e "We give the bar the ysize property to set how tall it is. We could also give it xsize to choose how wide, but here it's limited by the width of the frame it's in."
    e "[TRADUCIR: We give the bar the ysize property to set how tall it is. We could also give it xsize to choose how wide, but here it's limited by the width of the frame it's in.]"

#   left_bar Frame( "bar empty idle.png"
    left_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_left_bar Frame( "bar empty hover.png"
    hover_left_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   right_bar Frame( "bar full idle.png"
    right_bar Frame( "[TRADUCIR: bar full idle.png]"

#   hover_right_bar Frame( "bar full hover.png"
    hover_right_bar Frame( "[TRADUCIR: bar full hover.png]"

#   e "When the bar_invert style property is True, the bar value is displayed on the right side of the bar. The left_bar and right_bar displayables might also need to be swapped."
    e "[TRADUCIR: When the bar_invert style property is True, the bar value is displayed on the right side of the bar. The left_bar and right_bar displayables might also need to be swapped.]"

#   left_bar Frame( "bar full idle.png"
    left_bar Frame( "[TRADUCIR: bar full idle.png]"

#   hover_left_bar Frame( "bar full hover.png"
    hover_left_bar Frame( "[TRADUCIR: bar full hover.png]"

#   right_bar Frame( "bar empty idle.png"
    right_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_right_bar Frame( "bar empty hover.png"
    hover_right_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   e "The bar_resizing style property causes the bar images to be resized to represent the value, rather than being rendered at full size and cropped."
    e "[TRADUCIR: The bar_resizing style property causes the bar images to be resized to represent the value, rather than being rendered at full size and cropped.]"

#   thumb "bar thumb idle.png"
    thumb "[TRADUCIR: bar thumb idle.png]"

#   hover_thumb "bar thumb hover.png"
    hover_thumb "[TRADUCIR: bar thumb hover.png]"

#   base_bar Frame( "bar empty idle.png"
    base_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_base_bar Frame( "bar empty hover.png"
    hover_base_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   e "The thumb style property gives a thumb image, that's placed based on the bar's value. In the case of a scrollbar, it's resized if possible."
    e "[TRADUCIR: The thumb style property gives a thumb image, that's placed based on the bar's value. In the case of a scrollbar, it's resized if possible.]"

#   e "Here, we use it with the base_bar style property, which sets both bar images to the same displayable."
    e "[TRADUCIR: Here, we use it with the base_bar style property, which sets both bar images to the same displayable.]"

#   thumb "bar thumb idle.png"
    thumb "[TRADUCIR: bar thumb idle.png]"

#   hover_thumb "bar thumb hover.png"
    hover_thumb "[TRADUCIR: bar thumb hover.png]"

#   base_bar Frame( "bar empty idle.png"
    base_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_base_bar Frame( "bar empty hover.png"
    hover_base_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   e "The left_gutter and right_gutter properties set a gutter on the left or right size of the bar. The gutter is space the bar can't be dragged into, that can be used for borders."
    e "[TRADUCIR: The left_gutter and right_gutter properties set a gutter on the left or right size of the bar. The gutter is space the bar can't be dragged into, that can be used for borders.]"

#   top_bar Frame( "bar empty idle vertical"
    top_bar Frame( "[TRADUCIR: bar empty idle vertical]"

#   hover_top_bar Frame( "bar empty hover vertical"
    hover_top_bar Frame( "[TRADUCIR: bar empty hover vertical]"

#   bottom_bar Frame( "bar full idle vertical"
    bottom_bar Frame( "[TRADUCIR: bar full idle vertical]"

#   hover_bottom_bar Frame( "bar full hover vertical"
    hover_bottom_bar Frame( "[TRADUCIR: bar full hover vertical]"

#   e "The bar_vertical style property displays a vertically oriented bar. All of the other properties change names - left_bar becomes top_bar, while right_bar becomes bottom_bar."
    e "[TRADUCIR: The bar_vertical style property displays a vertically oriented bar. All of the other properties change names - left_bar becomes top_bar, while right_bar becomes bottom_bar.]"

#   e "Finally, there's one style we can't show here, and it's unscrollable. It controls what happens when a scrollbar can't be moved at all."
    e "[TRADUCIR: Finally, there's one style we can't show here, and it's unscrollable. It controls what happens when a scrollbar can't be moved at all.]"

#   e "By default, it's shown. But if unscrollable is 'insensitive', the bar becomes insensitive. If it's 'hide', the bar is hidden, but still takes up space."
    e "[TRADUCIR: By default, it's shown. But if unscrollable is 'insensitive', the bar becomes insensitive. If it's 'hide', the bar is hidden, but still takes up space.]"

#   e "That's it for the bar properties. By using them, a creator can customize bars, scrollbars, and sliders."
    e "[TRADUCIR: That's it for the bar properties. By using them, a creator can customize bars, scrollbars, and sliders.]"

#   screen hbox(style, wide, highlight= "#fff2"
    screen hbox(style, wide, highlight= "[TRADUCIR: #fff2]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   text _( "First Child"
    text _( "[TRADUCIR: First Child]"

#   text _( "Second Child"
    text _( "[TRADUCIR: Second Child]"

#   text _( "Third Child"
    text _( "[TRADUCIR: Third Child]"

#   text _( "Fourth Child"
    text _( "[TRADUCIR: Fourth Child]"

#   text _( "Fifth Child"
    text _( "[TRADUCIR: Fifth Child]"

#   text _( "Sixth Child"
    text _( "[TRADUCIR: Sixth Child]"

#   screen vbox(style, highlight= "#fff2"
    screen vbox(style, highlight= "[TRADUCIR: #fff2]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   text _( "First Child"
    text _( "[TRADUCIR: First Child]"

#   text _( "Second Child"
    text _( "[TRADUCIR: Second Child]"

#   text _( "Third Child"
    text _( "[TRADUCIR: Third Child]"

#   text _( "First Child"
    text _( "[TRADUCIR: First Child]"

#   text _( "Second Child"
    text _( "[TRADUCIR: Second Child]"

#   text _( "Third Child"
    text _( "[TRADUCIR: Third Child]"

#   text _( "Fourth Child"
    text _( "[TRADUCIR: Fourth Child]"

#   text _( "Fifth Child"
    text _( "[TRADUCIR: Fifth Child]"

#   text _( "Sixth Child"
    text _( "[TRADUCIR: Sixth Child]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   background "#fff2"
    background "[TRADUCIR: #fff2]"

#   add Transform( "logo base"
    add Transform( "[TRADUCIR: logo base]"

#   text "Ren'Py"
    text "[TRADUCIR: Ren'Py]"

#   font "DejaVuSans.ttf"
    font "[TRADUCIR: DejaVuSans.ttf]"

#   outlines [ (2, "#333"
    outlines [ (2, "[TRADUCIR: #333]"

#   e "The hbox displayable is used to lay its children out horizontally. By default, there's no spacing between children, so they run together."
    e "[TRADUCIR: The hbox displayable is used to lay its children out horizontally. By default, there's no spacing between children, so they run together.]"

#   e "Similarly, the vbox displayable is used to lay its children out vertically. Both support style properties that control placement."
    e "[TRADUCIR: Similarly, the vbox displayable is used to lay its children out vertically. Both support style properties that control placement.]"

#   e "To make the size of the box displayable obvious, I'll add a highlight to the box itself, and not the frame containing it."
    e "[TRADUCIR: To make the size of the box displayable obvious, I'll add a highlight to the box itself, and not the frame containing it.]"

#   e "Boxes support the xfill and yfill style properties. These properties make a box expand to fill the available space, rather than the space of the largest child."
    e "[TRADUCIR: Boxes support the xfill and yfill style properties. These properties make a box expand to fill the available space, rather than the space of the largest child.]"

#   e "The spacing style property takes a value in pixels, and adds that much spacing between each child of the box."
    e "[TRADUCIR: The spacing style property takes a value in pixels, and adds that much spacing between each child of the box.]"

#   e "The first_spacing style property is similar, but it only adds space between the first and second children. This is useful when the first child is a title that needs different spacing."
    e "[TRADUCIR: The first_spacing style property is similar, but it only adds space between the first and second children. This is useful when the first child is a title that needs different spacing.]"

#   e "The box_reverse style property reverses the order of entries in the box."
    e "[TRADUCIR: The box_reverse style property reverses the order of entries in the box.]"

#   show screen hbox( "spacing_hbox"
    show screen hbox( "[TRADUCIR: spacing_hbox]"

#   e "We'll switch back to a horizontal box for our next example."
    e "[TRADUCIR: We'll switch back to a horizontal box for our next example.]"

#   show screen hbox( "wrap_hbox"
    show screen hbox( "[TRADUCIR: wrap_hbox]"

#   e "The box_wrap style property fills the box with children until it's full, then starts again on the next line."
    e "[TRADUCIR: The box_wrap style property fills the box with children until it's full, then starts again on the next line.]"

#   e "Grids bring with them two more style properties. The xspacing and yspacing properties control spacing in the horizontal and vertical directions, respectively."
    e "[TRADUCIR: Grids bring with them two more style properties. The xspacing and yspacing properties control spacing in the horizontal and vertical directions, respectively.]"

#   e "Lastly, we have the fixed layout. The fixed layout usually expands to fill all space, and shows its children from back to front."
    e "[TRADUCIR: Lastly, we have the fixed layout. The fixed layout usually expands to fill all space, and shows its children from back to front.]"

#   e "But of course, we have some style properties that can change that."
    e "[TRADUCIR: But of course, we have some style properties that can change that.]"

#   e "When the xfit style property is True, the fixed lays out all its children as if it was full size, and then shrinks in width to fit them. The yfit style works the same way, but in height."
    e "[TRADUCIR: When the xfit style property is True, the fixed lays out all its children as if it was full size, and then shrinks in width to fit them. The yfit style works the same way, but in height.]"

#   e "The order_reverse style property changes the order in which the children are shown. Instead of back-to-front, they're displayed front-to-back."
    e "[TRADUCIR: The order_reverse style property changes the order in which the children are shown. Instead of back-to-front, they're displayed front-to-back.]"

#   e "Sometimes it's hard to figure out what style is being used for a particular displayable. The displayable inspector can help with that."
    e "[TRADUCIR: Sometimes it's hard to figure out what style is being used for a particular displayable. The displayable inspector can help with that.]"

#   e "To use it, place the mouse over a portion of the Ren'Py user interface, and hit shift+I. That's I for inspector."
    e "[TRADUCIR: To use it, place the mouse over a portion of the Ren'Py user interface, and hit shift+I. That's I for inspector.]"

#   e "Ren'Py will pop up a list of displayables the mouse is over. Next to each is the name of the style that displayable uses."
    e "[TRADUCIR: Ren'Py will pop up a list of displayables the mouse is over. Next to each is the name of the style that displayable uses.]"

#   e "You can click on the name of the style to see where it gets its properties from."
    e "[TRADUCIR: You can click on the name of the style to see where it gets its properties from.]"

#   e "By default, the inspector only shows interface elements like screens, and not images. Type shift+alt+I if you'd like to see images as well."
    e "[TRADUCIR: By default, the inspector only shows interface elements like screens, and not images. Type shift+alt+I if you'd like to see images as well.]"

#   e "You can try the inspector right now, by hovering this text and hitting shift+I."
    e "[TRADUCIR: You can try the inspector right now, by hovering this text and hitting shift+I.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\indepth_text.rpy DIALOGOS: 30

#   e "You just clicked to jump to a label."
    e "[TRADUCIR: You just clicked to jump to a label.]"

#   e "Sometimes, when showing text, we'll want to change the way some of the text is displayed."
    e "[TRADUCIR: Sometimes, when showing text, we'll want to change the way some of the text is displayed.]"

#   e "For example, we might want to have text that is {b}bold{/b}, {i}italic{/i}, {s}struckthrough{/s}, or {u}underlined{/u}."
    e "[TRADUCIR: For example, we might want to have text that is {b}bold{/b}, {i}italic{/i}, {s}struckthrough{/s}, or {u}underlined{/u}.]"

#   e "That's what text tags are for."
    e "[TRADUCIR: That's what text tags are for.]"

#   e "Text tags are contained in braces, like the {{b} tag above. When a text tag takes a closing tag, the closing tag begins with a slash, like {{/b} does."
    e "[TRADUCIR: Text tags are contained in braces, like the {{b} tag above. When a text tag takes a closing tag, the closing tag begins with a slash, like {{/b} does.]"

#   e "We've already seen the b, i, s, and u tags, but there are lot more than those. I'll show you the rest of them."
    e "[TRADUCIR: We've already seen the b, i, s, and u tags, but there are lot more than those. I'll show you the rest of them.]"

#   e "The a text tag can {a=https://www.renpy.org}link to a website{/a} or {a=jump:a_label}jump to a label{/a}."
    e "[TRADUCIR: The a text tag can {a=https://www.renpy.org}link to a website{/a} or {a=jump:a_label}jump to a label{/a}.]"

#   e "The alpha text tag makes text {alpha=.5}translucent{/alpha}."
    e "[TRADUCIR: The alpha text tag makes text {alpha=.5}translucent{/alpha}.]"

#   e "The color text tag changes the {color=#0080c0}color{/color} of the text."
    e "[TRADUCIR: The color text tag changes the {color=#0080c0}color{/color} of the text.]"

#   e "The cps text tag {cps=25}makes text type itself out slowly{/cps}, even if slow text is off."
    e "[TRADUCIR: The cps text tag {cps=25}makes text type itself out slowly{/cps}, even if slow text is off.]"

#   e "The cps tag can also be relative to the default speed, {cps=*2}doubling{/cps} or {cps=*0.5}halving{/cps} it."
    e "[TRADUCIR: The cps tag can also be relative to the default speed, {cps=*2}doubling{/cps} or {cps=*0.5}halving{/cps} it.]"

#   e "The font tag changes the font, for example to {font=DejaVuSans-Bold.ttf}DejaVuSans-Bold.ttf{/font}."
    e "[TRADUCIR: The font tag changes the font, for example to {font=DejaVuSans-Bold.ttf}DejaVuSans-Bold.ttf{/font}.]"

#   e "Sometimes, changing to a bold font looks better than using the {{b} tag."
    e "[TRADUCIR: Sometimes, changing to a bold font looks better than using the {{b} tag.]"

#   e "The k tag changes kerning. It can space the letters of a word {k=-.5}closer together{/k} or {k=.5}farther apart{/k}."
    e "[TRADUCIR: The k tag changes kerning. It can space the letters of a word {k=-.5}closer together{/k} or {k=.5}farther apart{/k}.]"

#   e "The size tag changes the size of text. It can make text {size=+10}bigger{/size} or {size=-10}smaller{/size}, or set it to a {size=30}fixed size{/size}."
    e "[TRADUCIR: The size tag changes the size of text. It can make text {size=+10}bigger{/size} or {size=-10}smaller{/size}, or set it to a {size=30}fixed size{/size}.]"

#   e "The space tag {space=30} adds horizontal space in text.{vspace=30}The vspace tag adds vertical space between lines."
    e "[TRADUCIR: The space tag {space=30} adds horizontal space in text.{vspace=30}The vspace tag adds vertical space between lines.]"

#   e "There are a few text tags that only makes sense in dialogue."
    e "[TRADUCIR: There are a few text tags that only makes sense in dialogue.]"

#   e "The p tag breaks a paragraph,{p}and waits for the player to click."
    e "[TRADUCIR: The p tag breaks a paragraph,{p}and waits for the player to click.]"

#   e "If it is given a number as an argument,{p=1.5}it waits that many seconds."
    e "[TRADUCIR: If it is given a number as an argument,{p=1.5}it waits that many seconds.]"

#   e "The w tag also waits for a click,{w} except it doesn't break lines,{w=.5} the way p does."
    e "[TRADUCIR: The w tag also waits for a click,{w} except it doesn't break lines,{w=.5} the way p does.]"

#   eslow "The nw tag causes Ren'Py to continue past slow text,{nw}"
    eslow "[TRADUCIR: The nw tag causes Ren'Py to continue past slow text,{nw}]"

#   extend "to the next statement."
    extend "[TRADUCIR: to the next statement.]"

#   e "To break a line without pausing,\none can write \\n. \\' and \\\"
    e "[TRADUCIR: To break a line without pausing,\none can write \\n. \\' and \\\]"

#   e "The interpolation feature takes a variable name in square brackets, and inserts it into text."
    e "[TRADUCIR: The interpolation feature takes a variable name in square brackets, and inserts it into text.]"

#   $ variable = _( "{i}variable value{/i}"
    $ variable = _( "[TRADUCIR: {i}variable value{/i}]"

#   e "For example, this displays the [variable!t]."
    e "[TRADUCIR: For example, this displays the [variable!t].]"

#   e "When the variable name is followed by !q, special characters are quoted. This displays the raw [variable!q!t], including the italics tags."
    e "[TRADUCIR: When the variable name is followed by !q, special characters are quoted. This displays the raw [variable!q!t], including the italics tags.]"

#   $ translatable = _( "translatable text"
    $ translatable = _( "[TRADUCIR: translatable text]"

#   e "When the variable name is followed by !t, it is translated to [variable!t]. It could be something else in a different language."
    e "[TRADUCIR: When the variable name is followed by !t, it is translated to [variable!t]. It could be something else in a different language.]"

#   e "Finally, certain characters are special. [[, {{, and \\ need to be doubled if included in text. The %% character should be doubled if used in dialogue."
    e "[TRADUCIR: Finally, certain characters are special. [[, {{, and \\ need to be doubled if included in text. The %% character should be doubled if used in dialogue.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\indepth_transitions.rpy DIALOGOS: 100

#   define circleirisout = ImageDissolve( "imagedissolve circleiris.png"
    define circleirisout = ImageDissolve( "[TRADUCIR: imagedissolve circleiris.png]"

#   define circleirisin = ImageDissolve( "imagedissolve circleiris.png"
    define circleirisin = ImageDissolve( "[TRADUCIR: imagedissolve circleiris.png]"

#   define circlewipe = ImageDissolve( "imagedissolve circlewipe.png"
    define circlewipe = ImageDissolve( "[TRADUCIR: imagedissolve circlewipe.png]"

#   define dream = ImageDissolve( "imagedissolve dream.png"
    define dream = ImageDissolve( "[TRADUCIR: imagedissolve dream.png]"

#   define teleport = ImageDissolve( "imagedissolve teleport.png"
    define teleport = ImageDissolve( "[TRADUCIR: imagedissolve teleport.png]"

#   image bg circleiris = "imagedissolve circleiris"
    image bg circleiris = "[TRADUCIR: imagedissolve circleiris]"

#   image bg teleport = "imagedissolve teleport"
    image bg teleport = "[TRADUCIR: imagedissolve teleport]"

#   "spotlight.png"
    "[TRADUCIR: spotlight.png]"

#   define alpha_example = AlphaDissolve( "alpha_control"
    define alpha_example = AlphaDissolve( "[TRADUCIR: alpha_control]"

#   e "Ren'Py ships with a large number of built-in transitions, and also includes classes that let you define your own."
    e "[TRADUCIR: Ren'Py ships with a large number of built-in transitions, and also includes classes that let you define your own.]"

#   e "What kind of transitions would you like demonstrated?"
    e "[TRADUCIR: What kind of transitions would you like demonstrated?]"

#   "Simple Transitions"
    "[TRADUCIR: Simple Transitions]"

#   "ImageDissolve Transitions"
    "[TRADUCIR: ImageDissolve Transitions]"

#   "MoveTransition Transitions"
    "[TRADUCIR: MoveTransition Transitions]"

#   "CropMove Transitions"
    "[TRADUCIR: CropMove Transitions]"

#   "PushMove Transitions"
    "[TRADUCIR: PushMove Transitions]"

#   "AlphaDissolve Transitions"
    "[TRADUCIR: AlphaDissolve Transitions]"

#   "How about something else?"
    "[TRADUCIR: How about something else?]"

#   e "Okay, I can tell you about simple transitions. We call them simple because they don't take much in the way of configuration."
    e "[TRADUCIR: Okay, I can tell you about simple transitions. We call them simple because they don't take much in the way of configuration.]"

#   e "But don't let that get you down, since they're the transitions you'll probably use the most in a game."
    e "[TRADUCIR: But don't let that get you down, since they're the transitions you'll probably use the most in a game.]"

#   e "The 'dissolve' transition is probably the most useful, blending one scene into another."
    e "[TRADUCIR: The 'dissolve' transition is probably the most useful, blending one scene into another.]"

#   e "The 'Dissolve' function lets you create your own dissolves, taking a different amount of time."
    e "[TRADUCIR: The 'Dissolve' function lets you create your own dissolves, taking a different amount of time.]"

#   e "The 'fade' transition fades to black, and then fades back in to the new scene."
    e "[TRADUCIR: The 'fade' transition fades to black, and then fades back in to the new scene.]"

#   e "If you're going to stay at a black screen, you'll probably want to use 'dissolve' rather than 'fade'."
    e "[TRADUCIR: If you're going to stay at a black screen, you'll probably want to use 'dissolve' rather than 'fade'.]"

#   e "You can use 'Fade' to define your own fades. By changing the timing and the color faded to, you can use this for special effects, like flashbulbs."
    e "[TRADUCIR: You can use 'Fade' to define your own fades. By changing the timing and the color faded to, you can use this for special effects, like flashbulbs.]"

#   e "The 'pixellate' transition pixellates out the old scene, switches to the new scene, and then unpixellates that."
    e "[TRADUCIR: The 'pixellate' transition pixellates out the old scene, switches to the new scene, and then unpixellates that.]"

#   e "It's probably not appropriate for most games, but we think it's kind of neat."
    e "[TRADUCIR: It's probably not appropriate for most games, but we think it's kind of neat.]"

#   e "You can use 'Pixellate' to change the details of the pixellation."
    e "[TRADUCIR: You can use 'Pixellate' to change the details of the pixellation.]"

#   e "Motions can also be used as transitions."
    e "[TRADUCIR: Motions can also be used as transitions.]"

#   "..."
    "[TRADUCIR: ...]"

#   "......"
    "[TRADUCIR: ......]"

#   play audio "punch.opus"
    play audio "[TRADUCIR: punch.opus]"

#   e "Hey! Pay attention."
    e "[TRADUCIR: Hey! Pay attention.]"

#   e "I was about to demonstrate 'vpunch'... well, I guess I just did."
    e "[TRADUCIR: I was about to demonstrate 'vpunch'... well, I guess I just did.]"

#   play audio "punch.opus"
    play audio "[TRADUCIR: punch.opus]"

#   e "We can also shake the screen horizontally, with 'hpunch'. These were defined using the 'Move' function."
    e "[TRADUCIR: We can also shake the screen horizontally, with 'hpunch'. These were defined using the 'Move' function.]"

#   e "There's also the 'move' transition, which is confusingly enough defined using the 'MoveTransition' function."
    e "[TRADUCIR: There's also the 'move' transition, which is confusingly enough defined using the 'MoveTransition' function.]"

#   e "The 'move' transition finds images that have changed placement, and slides them to their new place. It's an easy way to get motion in your game."
    e "[TRADUCIR: The 'move' transition finds images that have changed placement, and slides them to their new place. It's an easy way to get motion in your game.]"

#   e "That's it for the simple transitions."
    e "[TRADUCIR: That's it for the simple transitions.]"

#   e "Perhaps the most flexible kind of transition is the ImageDissolve, which lets you use an image to control a dissolve."
    e "[TRADUCIR: Perhaps the most flexible kind of transition is the ImageDissolve, which lets you use an image to control a dissolve.]"

#   e "This lets us specify very complex transitions, fairly simply. Let's try some, and then I'll show you how they work."
    e "[TRADUCIR: This lets us specify very complex transitions, fairly simply. Let's try some, and then I'll show you how they work.]"

#   e "There are two ImageDissolve transitions built into Ren'Py."
    e "[TRADUCIR: There are two ImageDissolve transitions built into Ren'Py.]"

#   e "The 'blinds' transition opens and closes what looks like vertical blinds."
    e "[TRADUCIR: The 'blinds' transition opens and closes what looks like vertical blinds.]"

#   e "The 'squares' transition uses these squares to show things."
    e "[TRADUCIR: The 'squares' transition uses these squares to show things.]"

#   e "I'm not sure why anyone would want to use it, but it was used in some translated games, so we added it."
    e "[TRADUCIR: I'm not sure why anyone would want to use it, but it was used in some translated games, so we added it.]"

#   e "The most interesting transitions aren't in the standard library."
    e "[TRADUCIR: The most interesting transitions aren't in the standard library.]"

#   e "These ones require an image the size of the screen, and so we couldn't include them as the size of the screen can change from game to game."
    e "[TRADUCIR: These ones require an image the size of the screen, and so we couldn't include them as the size of the screen can change from game to game.]"

#   e "We can hide things with a 'circleirisin'..."
    e "[TRADUCIR: We can hide things with a 'circleirisin'...]"

#   e "... and show them again with a 'circleirisout'."
    e "[TRADUCIR: ... and show them again with a 'circleirisout'.]"

#   e "The 'circlewipe' transitions changes screens using a circular wipe effect."
    e "[TRADUCIR: The 'circlewipe' transitions changes screens using a circular wipe effect.]"

#   e "The 'dream' transition does this weird wavy dissolve, and does it relatively slowly."
    e "[TRADUCIR: The 'dream' transition does this weird wavy dissolve, and does it relatively slowly.]"

#   e "The 'teleport' transition reveals the new scene one line at a time."
    e "[TRADUCIR: The 'teleport' transition reveals the new scene one line at a time.]"

#   e "This is the background picture used with the circleirisout transition."
    e "[TRADUCIR: This is the background picture used with the circleirisout transition.]"

#   e "When we use an ImageDissolve, the white will dissolve in first, followed by progressively darker colors. Let's try it."
    e "[TRADUCIR: When we use an ImageDissolve, the white will dissolve in first, followed by progressively darker colors. Let's try it.]"

#   e "If we give ImageDissolve the 'reverse' parameter, black areas will dissolve in first."
    e "[TRADUCIR: If we give ImageDissolve the 'reverse' parameter, black areas will dissolve in first.]"

#   e "This lets circleirisin and circleirisout use the same image."
    e "[TRADUCIR: This lets circleirisin and circleirisout use the same image.]"

#   e "The teleport transition uses a different image, one that dissolves things in one line at a time."
    e "[TRADUCIR: The teleport transition uses a different image, one that dissolves things in one line at a time.]"

#   e "A dissolve only seems to affect parts of the scene that have changed..."
    e "[TRADUCIR: A dissolve only seems to affect parts of the scene that have changed...]"

#   e "... which is how we apply the teleport effect to a single character."
    e "[TRADUCIR: ... which is how we apply the teleport effect to a single character.]"

#   e "The CropMove transition class provides a wide range of transition effects. It's not used very much in practice, though."
    e "[TRADUCIR: The CropMove transition class provides a wide range of transition effects. It's not used very much in practice, though.]"

#   e "I'll stand offscreen, so you can see some of its modes. I'll read out the mode name after each transition."
    e "[TRADUCIR: I'll stand offscreen, so you can see some of its modes. I'll read out the mode name after each transition.]"

#   e "We first have wiperight..."
    e "[TRADUCIR: We first have wiperight...]"

#   e "...followed by wipeleft..."
    e "[TRADUCIR: ...followed by wipeleft...]"

#   e "...wipeup..."
    e "[TRADUCIR: ...wipeup...]"

#   e "...and wipedown."
    e "[TRADUCIR: ...and wipedown.]"

#   e "Next, the slides."
    e "[TRADUCIR: Next, the slides.]"

#   e "Slideright..."
    e "[TRADUCIR: Slideright...]"

#   e "...slideleft..."
    e "[TRADUCIR: ...slideleft...]"

#   e "...slideup..."
    e "[TRADUCIR: ...slideup...]"

#   e "and slidedown."
    e "[TRADUCIR: and slidedown.]"

#   e "While the slide transitions slide in the new scene, the slideaways slide out the old scene."
    e "[TRADUCIR: While the slide transitions slide in the new scene, the slideaways slide out the old scene.]"

#   e "Slideawayright..."
    e "[TRADUCIR: Slideawayright...]"

#   e "...slideawayleft..."
    e "[TRADUCIR: ...slideawayleft...]"

#   e "...slideawayup..."
    e "[TRADUCIR: ...slideawayup...]"

#   e "and slideawaydown."
    e "[TRADUCIR: and slideawaydown.]"

#   e "We also have a couple of transitions that use a rectangular iris."
    e "[TRADUCIR: We also have a couple of transitions that use a rectangular iris.]"

#   e "There's irisout..."
    e "[TRADUCIR: There's irisout...]"

#   e "... and irisin."
    e "[TRADUCIR: ... and irisin.]"

#   e "It's enough to make you feel a bit dizzy."
    e "[TRADUCIR: It's enough to make you feel a bit dizzy.]"

#   e "The PushMove transitions use the new scene to push the old one out. Let's take a look."
    e "[TRADUCIR: The PushMove transitions use the new scene to push the old one out. Let's take a look.]"

#   "There's pushright..."
    "[TRADUCIR: There's pushright...]"

#   "...pushleft..."
    "[TRADUCIR: ...pushleft...]"

#   "...pushdown..."
    "[TRADUCIR: ...pushdown...]"

#   "... and pushup. And that's it the for the PushMove-based transitions."
    "[TRADUCIR: ... and pushup. And that's it the for the PushMove-based transitions.]"

#   e "The most common MoveTransition is move, which slides around images that have changed position on the screen."
    e "[TRADUCIR: The most common MoveTransition is move, which slides around images that have changed position on the screen.]"

#   e "Just like that."
    e "[TRADUCIR: Just like that.]"

#   e "There are also the moveout and movein transitions."
    e "[TRADUCIR: There are also the moveout and movein transitions.]"

#   e "The moveout transitions (moveoutleft, moveoutright, moveouttop, and moveoutbottom) slide hidden images off the appropriate side of the screen."
    e "[TRADUCIR: The moveout transitions (moveoutleft, moveoutright, moveouttop, and moveoutbottom) slide hidden images off the appropriate side of the screen.]"

#   e "The movein transitions (moveinleft, moveinright, moveintop, and moveinbottom) slide in new images."
    e "[TRADUCIR: The movein transitions (moveinleft, moveinright, moveintop, and moveinbottom) slide in new images.]"

#   e "Let's see them all in action."
    e "[TRADUCIR: Let's see them all in action.]"

#   e "That's it for the moveins and moveouts."
    e "[TRADUCIR: That's it for the moveins and moveouts.]"

#   e "Finally, there are the zoomin and zoomout transitions, which show and hide things using a zoom."
    e "[TRADUCIR: Finally, there are the zoomin and zoomout transitions, which show and hide things using a zoom.]"

#   e "And that's all there is."
    e "[TRADUCIR: And that's all there is.]"

#   e "The AlphaDissolve transition lets you use one displayable to combine two others. Click, and I'll show you an example."
    e "[TRADUCIR: The AlphaDissolve transition lets you use one displayable to combine two others. Click, and I'll show you an example.]"

#   e "The AlphaDissolve displayable takes a control displayable, usually an ATL transform."
    e "[TRADUCIR: The AlphaDissolve displayable takes a control displayable, usually an ATL transform.]"

#   e "To be useful, the control displayable should be partially transparent."
    e "[TRADUCIR: To be useful, the control displayable should be partially transparent.]"

#   e "During an AlphaDissolve, the old screen is used to fill the transparent areas of the image, while the new screen fills the opaque areas."
    e "[TRADUCIR: During an AlphaDissolve, the old screen is used to fill the transparent areas of the image, while the new screen fills the opaque areas.]"

#   e "For our spotlight example, the old screen is this all-black image."
    e "[TRADUCIR: For our spotlight example, the old screen is this all-black image.]"

#   e "The new screen is me just standing here."
    e "[TRADUCIR: The new screen is me just standing here.]"

#   e "By combining them using AlphaDissolve, we can build a complicated effect out of simpler parts."
    e "[TRADUCIR: By combining them using AlphaDissolve, we can build a complicated effect out of simpler parts.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\indepth_translations.rpy DIALOGOS: 22

#   gui.text_font = "SourceHanSansLite.ttf"
    gui.text_font = "[TRADUCIR: SourceHanSansLite.ttf]"

#   gui.name_text_font = "SourceHanSansLite.ttf"
    gui.name_text_font = "[TRADUCIR: SourceHanSansLite.ttf]"

#   gui.interface_text_font = "SourceHanSansLite.ttf"
    gui.interface_text_font = "[TRADUCIR: SourceHanSansLite.ttf]"

#   language "japanese-strict"
    language "[TRADUCIR: japanese-strict]"

#   e "Ren'Py includes support for translating your game into languages other than the one it was originally written in."
    e "[TRADUCIR: Ren'Py includes support for translating your game into languages other than the one it was originally written in.]"

#   e "This includes the translation of every string in the game, including dialogue, menu choice, and interface strings, and of images and other assets."
    e "[TRADUCIR: This includes the translation of every string in the game, including dialogue, menu choice, and interface strings, and of images and other assets.]"

#   e "While Ren'Py can find dialogue and menu choice strings for you, you'll have to indicate which other strings need translation."
    e "[TRADUCIR: While Ren'Py can find dialogue and menu choice strings for you, you'll have to indicate which other strings need translation.]"

#   e "For example, here is how we define a character and her name."
    e "[TRADUCIR: For example, here is how we define a character and her name.]"

#   e "To mark Lucy's name as translatable, we surround it by parentheses preceded by a single underscore."
    e "[TRADUCIR: To mark Lucy's name as translatable, we surround it by parentheses preceded by a single underscore.]"

#   e "Notice how we don't translate the reddish color that we use for her name. That stays the same for all languages."
    e "[TRADUCIR: Notice how we don't translate the reddish color that we use for her name. That stays the same for all languages.]"

#   e "Once that's done, you can generate the translation files. That's done by going to the launcher, and clicking translate."
    e "[TRADUCIR: Once that's done, you can generate the translation files. That's done by going to the launcher, and clicking translate.]"

#   e "After you type in the name of the language you'll be translating to, choosing Generate Translations will scan your game and create translation files."
    e "[TRADUCIR: After you type in the name of the language you'll be translating to, choosing Generate Translations will scan your game and create translation files.]"

#   e "The files will be generated in game/tl/language, where language is the name of the language you typed in."
    e "[TRADUCIR: The files will be generated in game/tl/language, where language is the name of the language you typed in.]"

#   e "You'll need to edit those files to include translations for everything in your game."
    e "[TRADUCIR: You'll need to edit those files to include translations for everything in your game.]"

#   e "If you want to localize image files, you can also place them in game/tl/language."
    e "[TRADUCIR: If you want to localize image files, you can also place them in game/tl/language.]"

#   e "If the default fonts used by the game do not support the language you are translating to, you will have to change them."
    e "[TRADUCIR: If the default fonts used by the game do not support the language you are translating to, you will have to change them.]"

#   e "The translate python statement can be used to set the values of gui variables to change the font."
    e "[TRADUCIR: The translate python statement can be used to set the values of gui variables to change the font.]"

#   e "The translate style statement sets style properties more directly."
    e "[TRADUCIR: The translate style statement sets style properties more directly.]"

#   e "If you need to add new files, such as font files, you can place them into the game/tl/language directory where Ren'Py will find them."
    e "[TRADUCIR: If you need to add new files, such as font files, you can place them into the game/tl/language directory where Ren'Py will find them.]"

#   e "Finally, you'll have to add support for picking the language of the game. That usually goes into the preferences screen, found in screens.rpy."
    e "[TRADUCIR: Finally, you'll have to add support for picking the language of the game. That usually goes into the preferences screen, found in screens.rpy.]"

#   e "Here's an excerpt of the preferences screen of this tutorial. The Language action tells Ren'Py to change the language. It takes a string giving a language name, or None."
    e "[TRADUCIR: Here's an excerpt of the preferences screen of this tutorial. The Language action tells Ren'Py to change the language. It takes a string giving a language name, or None.]"

#   e "The None language is special, as it's the default language that the visual novel was written in. Since this tutorial was written in English, Language(None) selects English."
    e "[TRADUCIR: The None language is special, as it's the default language that the visual novel was written in. Since this tutorial was written in English, Language(None) selects English.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\options.rpy DIALOGOS: 12

#   define config.name = _( "Ren'Py Tutorial Game"
    define config.name = _( "[TRADUCIR: Ren'Py Tutorial Game]"

#   define build.name = "tutorial_7"
    define build.name = "[TRADUCIR: tutorial_7]"

#   define config.window = "auto"
    define config.window = "[TRADUCIR: auto]"

#   define config.save_directory = "tutorial-7"
    define config.save_directory = "[TRADUCIR: tutorial-7]"

#   define config.window_icon = "gui/window_icon.png"
    define config.window_icon = "[TRADUCIR: gui/window_icon.png]"

#   config.searchpath.append(config.renpy_base + "/sdk-fonts"
    config.searchpath.append(config.renpy_base + "[TRADUCIR: /sdk-fonts]"

#   build.classify_renpy( "sdk-fonts/**"
    build.classify_renpy( "[TRADUCIR: sdk-fonts/**]"

#   ( "gui/mouse0.png"
    ( "[TRADUCIR: gui/mouse0.png]"

#   ( "gui/mouse1.png"
    ( "[TRADUCIR: gui/mouse1.png]"

#   ( "gui/mouse2.png"
    ( "[TRADUCIR: gui/mouse2.png]"

#   ( "gui/mouse1.png"
    ( "[TRADUCIR: gui/mouse1.png]"

#   ( "gui/mouse0.png"
    ( "[TRADUCIR: gui/mouse0.png]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\screens.rpy DIALOGOS: 278

#   properties gui.text_properties( "input"
    properties gui.text_properties( "[TRADUCIR: input]"

#   properties gui.text_properties( "hyperlink"
    properties gui.text_properties( "[TRADUCIR: hyperlink]"

#   properties gui.text_properties( "interface"
    properties gui.text_properties( "[TRADUCIR: interface]"

#   properties gui.button_properties( "button"
    properties gui.button_properties( "[TRADUCIR: button]"

#   properties gui.text_properties( "button"
    properties gui.text_properties( "[TRADUCIR: button]"

#   properties gui.text_properties( "label"
    properties gui.text_properties( "[TRADUCIR: label]"

#   properties gui.text_properties( "prompt"
    properties gui.text_properties( "[TRADUCIR: prompt]"

#   left_bar Frame( "gui/bar/left.png"
    left_bar Frame( "[TRADUCIR: gui/bar/left.png]"

#   right_bar Frame( "gui/bar/right.png"
    right_bar Frame( "[TRADUCIR: gui/bar/right.png]"

#   top_bar Frame( "gui/bar/top.png"
    top_bar Frame( "[TRADUCIR: gui/bar/top.png]"

#   bottom_bar Frame( "gui/bar/bottom.png"
    bottom_bar Frame( "[TRADUCIR: gui/bar/bottom.png]"

#   base_bar Frame( "gui/scrollbar/horizontal_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/scrollbar/horizontal_[prefix_]bar.png]"

#   thumb Frame( "gui/scrollbar/horizontal_[prefix_]thumb.png"
    thumb Frame( "[TRADUCIR: gui/scrollbar/horizontal_[prefix_]thumb.png]"

#   base_bar Frame( "gui/scrollbar/vertical_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/scrollbar/vertical_[prefix_]bar.png]"

#   thumb Frame( "gui/scrollbar/vertical_[prefix_]thumb.png"
    thumb Frame( "[TRADUCIR: gui/scrollbar/vertical_[prefix_]thumb.png]"

#   base_bar Frame( "gui/slider/horizontal_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/slider/horizontal_[prefix_]bar.png]"

#   thumb "gui/slider/horizontal_[prefix_]thumb.png"
    thumb "[TRADUCIR: gui/slider/horizontal_[prefix_]thumb.png]"

#   base_bar Frame( "gui/slider/vertical_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/slider/vertical_[prefix_]bar.png]"

#   thumb "gui/slider/vertical_[prefix_]thumb.png"
    thumb "[TRADUCIR: gui/slider/vertical_[prefix_]thumb.png]"

#   background Frame( "gui/frame.png"
    background Frame( "[TRADUCIR: gui/frame.png]"

#   id "window"
    id "[TRADUCIR: window]"

#   text who id "who"
    text who id "[TRADUCIR: who]"

#   text what id "what"
    text what id "[TRADUCIR: what]"

#   style_prefix "say"
    style_prefix "[TRADUCIR: say]"

#   id "window"
    id "[TRADUCIR: window]"

#   style "namebox"
    style "[TRADUCIR: namebox]"

#   text who id "who"
    text who id "[TRADUCIR: who]"

#   text what id "what"
    text what id "[TRADUCIR: what]"

#   if not renpy.variant( "small"
    if not renpy.variant( "[TRADUCIR: small]"

#   background Image( "gui/textbox.png"
    background Image( "[TRADUCIR: gui/textbox.png]"

#   background Frame( "gui/namebox.png"
    background Frame( "[TRADUCIR: gui/namebox.png]"

#   properties gui.text_properties( "name"
    properties gui.text_properties( "[TRADUCIR: name]"

#   properties gui.text_properties( "dialogue"
    properties gui.text_properties( "[TRADUCIR: dialogue]"

#   style_prefix "input"
    style_prefix "[TRADUCIR: input]"

#   text prompt style "input_prompt"
    text prompt style "[TRADUCIR: input_prompt]"

#   input id "input"
    input id "[TRADUCIR: input]"

#   properties gui.text_properties( "input_prompt"
    properties gui.text_properties( "[TRADUCIR: input_prompt]"

#   style_prefix "choice"
    style_prefix "[TRADUCIR: choice]"

#   properties gui.button_properties( "choice_button"
    properties gui.button_properties( "[TRADUCIR: choice_button]"

#   properties gui.text_properties( "choice_button"
    properties gui.text_properties( "[TRADUCIR: choice_button]"

#   style_prefix "quick"
    style_prefix "[TRADUCIR: quick]"

#   textbutton _( "Back"
    textbutton _( "[TRADUCIR: Back]"

#   textbutton _( "History"
    textbutton _( "[TRADUCIR: History]"

#   textbutton _( "Skip"
    textbutton _( "[TRADUCIR: Skip]"

#   textbutton _( "Auto"
    textbutton _( "[TRADUCIR: Auto]"

#   textbutton _( "Save"
    textbutton _( "[TRADUCIR: Save]"

#   textbutton _( "Q.Save"
    textbutton _( "[TRADUCIR: Q.Save]"

#   textbutton _( "Q.Load"
    textbutton _( "[TRADUCIR: Q.Load]"

#   textbutton _( "Prefs"
    textbutton _( "[TRADUCIR: Prefs]"

#   config.overlay_screens.append( "quick_menu"
    config.overlay_screens.append( "[TRADUCIR: quick_menu]"

#   properties gui.button_properties( "quick_button"
    properties gui.button_properties( "[TRADUCIR: quick_button]"

#   properties gui.text_properties( "quick_button"
    properties gui.text_properties( "[TRADUCIR: quick_button]"

#   style_prefix "navigation"
    style_prefix "[TRADUCIR: navigation]"

#   textbutton _( "Start"
    textbutton _( "[TRADUCIR: Start]"

#   textbutton _( "History"
    textbutton _( "[TRADUCIR: History]"

#   textbutton _( "Save"
    textbutton _( "[TRADUCIR: Save]"

#   textbutton _( "Load"
    textbutton _( "[TRADUCIR: Load]"

#   textbutton _( "Preferences"
    textbutton _( "[TRADUCIR: Preferences]"

#   textbutton _( "End Replay"
    textbutton _( "[TRADUCIR: End Replay]"

#   textbutton _( "Main Menu"
    textbutton _( "[TRADUCIR: Main Menu]"

#   textbutton _( "About"
    textbutton _( "[TRADUCIR: About]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   textbutton _( "Help"
    textbutton _( "[TRADUCIR: Help]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   textbutton _( "Quit"
    textbutton _( "[TRADUCIR: Quit]"

#   size_group "navigation"
    size_group "[TRADUCIR: navigation]"

#   properties gui.button_properties( "navigation_button"
    properties gui.button_properties( "[TRADUCIR: navigation_button]"

#   properties gui.text_properties( "navigation_button"
    properties gui.text_properties( "[TRADUCIR: navigation_button]"

#   style_prefix "main_menu"
    style_prefix "[TRADUCIR: main_menu]"

#   text "[renpy.version_string] \"
    text "[TRADUCIR: [renpy.version_string] \]"

#   background "gui/overlay/main_menu.png"
    background "[TRADUCIR: gui/overlay/main_menu.png]"

#   properties gui.text_properties( "main_menu"
    properties gui.text_properties( "[TRADUCIR: main_menu]"

#   properties gui.text_properties( "title"
    properties gui.text_properties( "[TRADUCIR: title]"

#   color "#fff"
    color "[TRADUCIR: #fff]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   style_prefix "game_menu"
    style_prefix "[TRADUCIR: game_menu]"

#   style "game_menu_outer_frame"
    style "[TRADUCIR: game_menu_outer_frame]"

#   style "game_menu_navigation_frame"
    style "[TRADUCIR: game_menu_navigation_frame]"

#   style "game_menu_content_frame"
    style "[TRADUCIR: game_menu_content_frame]"

#   if scroll == "viewport"
    if scroll == "[TRADUCIR: viewport]"

#   scrollbars "vertical"
    scrollbars "[TRADUCIR: vertical]"

#   elif scroll == "vpgrid"
    elif scroll == "[TRADUCIR: vpgrid]"

#   scrollbars "vertical"
    scrollbars "[TRADUCIR: vertical]"

#   textbutton _( "Return"
    textbutton _( "[TRADUCIR: Return]"

#   style "return_button"
    style "[TRADUCIR: return_button]"

#   key "game_menu"
    key "[TRADUCIR: game_menu]"

#   background "gui/overlay/game_menu.png"
    background "[TRADUCIR: gui/overlay/game_menu.png]"

#   use game_menu(_( "About"
    use game_menu(_( "[TRADUCIR: About]"

#   style_prefix "about"
    style_prefix "[TRADUCIR: about]"

#   label "[config.name!t]"
    label "[TRADUCIR: [config.name!t]]"

#   text _( "Version [config.version!t]\n"
    text _( "[TRADUCIR: Version [config.version!t]\n]"

#   text "[gui.about!t]\n"
    text "[TRADUCIR: [gui.about!t]\n]"

#   text _( "Made with {a=https://www.renpy.org/}Ren'Py{/a} [renpy.version_only].\n\n[renpy.license!t]"
    text _( "[TRADUCIR: Made with {a=https://www.renpy.org/}Ren'Py{/a} [renpy.version_only].\n\n[renpy.license!t]]"

#   use file_slots(_( "Save"
    use file_slots(_( "[TRADUCIR: Save]"

#   use file_slots(_( "Load"
    use file_slots(_( "[TRADUCIR: Load]"

#   default page_name_value = FilePageNameInputValue(pattern=_( "Page {}"
    default page_name_value = FilePageNameInputValue(pattern=_( "[TRADUCIR: Page {}]"

#   style "page_label"
    style "[TRADUCIR: page_label]"

#   style "page_label_text"
    style "[TRADUCIR: page_label_text]"

#   style_prefix "slot"
    style_prefix "[TRADUCIR: slot]"

#   text FileTime(slot, format=_( "{#file_time}%A, %B %d %Y, %H:%M"
    text FileTime(slot, format=_( "[TRADUCIR: {#file_time}%A, %B %d %Y, %H:%M]"

#   style "slot_time_text"
    style "[TRADUCIR: slot_time_text]"

#   style "slot_name_text"
    style "[TRADUCIR: slot_name_text]"

#   key "save_delete"
    key "[TRADUCIR: save_delete]"

#   style_prefix "page"
    style_prefix "[TRADUCIR: page]"

#   textbutton _( "<"
    textbutton _( "[TRADUCIR: <]"

#   textbutton _( "{#auto_page}A"
    textbutton _( "[TRADUCIR: {#auto_page}A]"

#   textbutton _( "{#quick_page}Q"
    textbutton _( "[TRADUCIR: {#quick_page}Q]"

#   textbutton "[page]"
    textbutton "[TRADUCIR: [page]]"

#   textbutton _( ">"
    textbutton _( "[TRADUCIR: >]"

#   layout "subtitle"
    layout "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "page_button"
    properties gui.button_properties( "[TRADUCIR: page_button]"

#   properties gui.text_properties( "page_button"
    properties gui.text_properties( "[TRADUCIR: page_button]"

#   properties gui.button_properties( "slot_button"
    properties gui.button_properties( "[TRADUCIR: slot_button]"

#   properties gui.text_properties( "slot_button"
    properties gui.text_properties( "[TRADUCIR: slot_button]"

#   use game_menu(_( "Preferences"
    use game_menu(_( "[TRADUCIR: Preferences]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   label _( "Display"
    label _( "[TRADUCIR: Display]"

#   textbutton _( "Window"
    textbutton _( "[TRADUCIR: Window]"

#   textbutton _( "Fullscreen"
    textbutton _( "[TRADUCIR: Fullscreen]"

#   style_prefix "check"
    style_prefix "[TRADUCIR: check]"

#   label _( "Examples"
    label _( "[TRADUCIR: Examples]"

#   textbutton _( "Translations"
    textbutton _( "[TRADUCIR: Translations]"

#   style_prefix "check"
    style_prefix "[TRADUCIR: check]"

#   label _( "Skip"
    label _( "[TRADUCIR: Skip]"

#   textbutton _( "Unseen Text"
    textbutton _( "[TRADUCIR: Unseen Text]"

#   textbutton _( "After Choices"
    textbutton _( "[TRADUCIR: After Choices]"

#   textbutton _( "Transitions"
    textbutton _( "[TRADUCIR: Transitions]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   label _( "Language"
    label _( "[TRADUCIR: Language]"

#   textbutton "English"
    textbutton "[TRADUCIR: English]"

#   textbutton "Français"
    textbutton "[TRADUCIR: Français]"

#   textbutton "Русский"
    textbutton "[TRADUCIR: Русский]"

#   textbutton "Español"
    textbutton "[TRADUCIR: Español]"

#   textbutton "Українська"
    textbutton "[TRADUCIR: Українська]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   textbutton "한국어"
    textbutton "[TRADUCIR: 한국어]"

#   textbutton "日本語"
    textbutton "[TRADUCIR: 日本語]"

#   textbutton "简体中文"
    textbutton "[TRADUCIR: 简体中文]"

#   textbutton "Pig Latin"
    textbutton "[TRADUCIR: Pig Latin]"

#   style_prefix "slider"
    style_prefix "[TRADUCIR: slider]"

#   label _( "Text Speed"
    label _( "[TRADUCIR: Text Speed]"

#   bar value Preference( "text speed"
    bar value Preference( "[TRADUCIR: text speed]"

#   label _( "Auto-Forward Time"
    label _( "[TRADUCIR: Auto-Forward Time]"

#   bar value Preference( "auto-forward time"
    bar value Preference( "[TRADUCIR: auto-forward time]"

#   label _( "Music Volume"
    label _( "[TRADUCIR: Music Volume]"

#   bar value Preference( "music volume"
    bar value Preference( "[TRADUCIR: music volume]"

#   label _( "Sound Volume"
    label _( "[TRADUCIR: Sound Volume]"

#   bar value Preference( "sound volume"
    bar value Preference( "[TRADUCIR: sound volume]"

#   textbutton _( "Test"
    textbutton _( "[TRADUCIR: Test]"

#   label _( "Voice Volume"
    label _( "[TRADUCIR: Voice Volume]"

#   bar value Preference( "voice volume"
    bar value Preference( "[TRADUCIR: voice volume]"

#   textbutton _( "Test"
    textbutton _( "[TRADUCIR: Test]"

#   textbutton _( "Mute All"
    textbutton _( "[TRADUCIR: Mute All]"

#   action Preference( "all mute"
    action Preference( "[TRADUCIR: all mute]"

#   style "mute_all_button"
    style "[TRADUCIR: mute_all_button]"

#   properties gui.button_properties( "radio_button"
    properties gui.button_properties( "[TRADUCIR: radio_button]"

#   foreground "gui/button/radio_[prefix_]foreground.png"
    foreground "[TRADUCIR: gui/button/radio_[prefix_]foreground.png]"

#   properties gui.text_properties( "radio_button"
    properties gui.text_properties( "[TRADUCIR: radio_button]"

#   properties gui.button_properties( "check_button"
    properties gui.button_properties( "[TRADUCIR: check_button]"

#   foreground "gui/button/check_[prefix_]foreground.png"
    foreground "[TRADUCIR: gui/button/check_[prefix_]foreground.png]"

#   properties gui.text_properties( "check_button"
    properties gui.text_properties( "[TRADUCIR: check_button]"

#   properties gui.button_properties( "slider_button"
    properties gui.button_properties( "[TRADUCIR: slider_button]"

#   properties gui.text_properties( "slider_button"
    properties gui.text_properties( "[TRADUCIR: slider_button]"

#   use game_menu(_( "History"
    use game_menu(_( "[TRADUCIR: History]"

#   style_prefix "history"
    style_prefix "[TRADUCIR: history]"

#   style "history_name"
    style "[TRADUCIR: history_name]"

#   if "color"
    if "[TRADUCIR: color]"

#   text_color h.who_args[ "color"
    text_color h.who_args[ "[TRADUCIR: color]"

#   label _( "The dialogue history is empty."
    label _( "[TRADUCIR: The dialogue history is empty.]"

#   define gui.history_allow_tags = { "alt"
    define gui.history_allow_tags = { "[TRADUCIR: alt]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   default device = "keyboard"
    default device = "[TRADUCIR: keyboard]"

#   use game_menu(_( "Help"
    use game_menu(_( "[TRADUCIR: Help]"

#   style_prefix "help"
    style_prefix "[TRADUCIR: help]"

#   textbutton _( "Keyboard"
    textbutton _( "[TRADUCIR: Keyboard]"

#   textbutton _( "Mouse"
    textbutton _( "[TRADUCIR: Mouse]"

#   textbutton _( "Gamepad"
    textbutton _( "[TRADUCIR: Gamepad]"

#   if device == "keyboard"
    if device == "[TRADUCIR: keyboard]"

#   elif device == "mouse"
    elif device == "[TRADUCIR: mouse]"

#   elif device == "gamepad"
    elif device == "[TRADUCIR: gamepad]"

#   label _( "Enter"
    label _( "[TRADUCIR: Enter]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Space"
    label _( "[TRADUCIR: Space]"

#   text _( "Advances dialogue without selecting choices."
    text _( "[TRADUCIR: Advances dialogue without selecting choices.]"

#   label _( "Arrow Keys"
    label _( "[TRADUCIR: Arrow Keys]"

#   text _( "Navigate the interface."
    text _( "[TRADUCIR: Navigate the interface.]"

#   label _( "Escape"
    label _( "[TRADUCIR: Escape]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Ctrl"
    label _( "[TRADUCIR: Ctrl]"

#   text _( "Skips dialogue while held down."
    text _( "[TRADUCIR: Skips dialogue while held down.]"

#   label _( "Tab"
    label _( "[TRADUCIR: Tab]"

#   text _( "Toggles dialogue skipping."
    text _( "[TRADUCIR: Toggles dialogue skipping.]"

#   label _( "Page Up"
    label _( "[TRADUCIR: Page Up]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Page Down"
    label _( "[TRADUCIR: Page Down]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label "H"
    label "[TRADUCIR: H]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   label "S"
    label "[TRADUCIR: S]"

#   text _( "Takes a screenshot."
    text _( "[TRADUCIR: Takes a screenshot.]"

#   label "V"
    label "[TRADUCIR: V]"

#   text _( "Toggles assistive {a=https://www.renpy.org/l/voicing}self-voicing{/a}."
    text _( "[TRADUCIR: Toggles assistive {a=https://www.renpy.org/l/voicing}self-voicing{/a}.]"

#   label "Shift+A"
    label "[TRADUCIR: Shift+A]"

#   text _( "Opens the accessibility menu."
    text _( "[TRADUCIR: Opens the accessibility menu.]"

#   label _( "Left Click"
    label _( "[TRADUCIR: Left Click]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Middle Click"
    label _( "[TRADUCIR: Middle Click]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   label _( "Right Click"
    label _( "[TRADUCIR: Right Click]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Mouse Wheel Up"
    label _( "[TRADUCIR: Mouse Wheel Up]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Mouse Wheel Down"
    label _( "[TRADUCIR: Mouse Wheel Down]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label _( "Right Trigger\nA/Bottom Button"
    label _( "[TRADUCIR: Right Trigger\nA/Bottom Button]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Left Trigger\nLeft Shoulder"
    label _( "[TRADUCIR: Left Trigger\nLeft Shoulder]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Right Shoulder"
    label _( "[TRADUCIR: Right Shoulder]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label _( "D-Pad, Sticks"
    label _( "[TRADUCIR: D-Pad, Sticks]"

#   text _( "Navigate the interface."
    text _( "[TRADUCIR: Navigate the interface.]"

#   label _( "Start, Guide"
    label _( "[TRADUCIR: Start, Guide]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Y/Top Button"
    label _( "[TRADUCIR: Y/Top Button]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   textbutton _( "Calibrate"
    textbutton _( "[TRADUCIR: Calibrate]"

#   properties gui.button_properties( "help_button"
    properties gui.button_properties( "[TRADUCIR: help_button]"

#   properties gui.text_properties( "help_button"
    properties gui.text_properties( "[TRADUCIR: help_button]"

#   style_prefix "confirm"
    style_prefix "[TRADUCIR: confirm]"

#   add "gui/overlay/confirm.png"
    add "[TRADUCIR: gui/overlay/confirm.png]"

#   style "confirm_prompt"
    style "[TRADUCIR: confirm_prompt]"

#   textbutton _( "Yes"
    textbutton _( "[TRADUCIR: Yes]"

#   textbutton _( "No"
    textbutton _( "[TRADUCIR: No]"

#   key "game_menu"
    key "[TRADUCIR: game_menu]"

#   background Frame([ "gui/confirm_frame.png"
    background Frame([ "[TRADUCIR: gui/confirm_frame.png]"

#   layout "subtitle"
    layout "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "confirm_button"
    properties gui.button_properties( "[TRADUCIR: confirm_button]"

#   properties gui.text_properties( "confirm_button"
    properties gui.text_properties( "[TRADUCIR: confirm_button]"

#   style_prefix "skip"
    style_prefix "[TRADUCIR: skip]"

#   text _( "Skipping"
    text _( "[TRADUCIR: Skipping]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   background Frame( "gui/skip.png"
    background Frame( "[TRADUCIR: gui/skip.png]"

#   font "DejaVuSans.ttf"
    font "[TRADUCIR: DejaVuSans.ttf]"

#   style_prefix "notify"
    style_prefix "[TRADUCIR: notify]"

#   text "[message!tq]"
    text "[TRADUCIR: [message!tq]]"

#   background Frame( "gui/notify.png"
    background Frame( "[TRADUCIR: gui/notify.png]"

#   properties gui.text_properties( "notify"
    properties gui.text_properties( "[TRADUCIR: notify]"

#   style "nvl_window"
    style "[TRADUCIR: nvl_window]"

#   style "nvl_button"
    style "[TRADUCIR: nvl_button]"

#   background "gui/nvl.png"
    background "[TRADUCIR: gui/nvl.png]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "nvl_button"
    properties gui.button_properties( "[TRADUCIR: nvl_button]"

#   properties gui.text_properties( "nvl_button"
    properties gui.text_properties( "[TRADUCIR: nvl_button]"

#   variant "medium"
    variant "[TRADUCIR: medium]"

#   variant "touch"
    variant "[TRADUCIR: touch]"

#   style_prefix "quick"
    style_prefix "[TRADUCIR: quick]"

#   textbutton _( "Back"
    textbutton _( "[TRADUCIR: Back]"

#   textbutton _( "Skip"
    textbutton _( "[TRADUCIR: Skip]"

#   textbutton _( "Auto"
    textbutton _( "[TRADUCIR: Auto]"

#   textbutton _( "Menu"
    textbutton _( "[TRADUCIR: Menu]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/textbox.png"
    background "[TRADUCIR: gui/phone/textbox.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/nvl.png"
    background "[TRADUCIR: gui/phone/nvl.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/overlay/main_menu.png"
    background "[TRADUCIR: gui/phone/overlay/main_menu.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/overlay/game_menu.png"
    background "[TRADUCIR: gui/phone/overlay/game_menu.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\script.rpy DIALOGOS: 48

#   define e = Character(_('Eileen'), color= "#c8ffc8"
    define e = Character(_('Eileen'), color= "[TRADUCIR: #c8ffc8]"

#   self.kind = "section"
    self.kind = "[TRADUCIR: section]"

#   self.kind = "tutorial"
    self.kind = "[TRADUCIR: tutorial]"

#   if move and (move != "after"
    if move and (move != "[TRADUCIR: after]"

#   if move and (move != "before"
    if move and (move != "[TRADUCIR: before]"

#   Section(_( "Quickstart"
    Section(_( "[TRADUCIR: Quickstart]"

#   Tutorial( "tutorial_playing"
    Tutorial( "[TRADUCIR: tutorial_playing]"

#   Tutorial( "tutorial_create"
    Tutorial( "[TRADUCIR: tutorial_create]"

#   Tutorial( "tutorial_dialogue"
    Tutorial( "[TRADUCIR: tutorial_dialogue]"

#   Tutorial( "tutorial_images"
    Tutorial( "[TRADUCIR: tutorial_images]"

#   Tutorial( "tutorial_simple_positions"
    Tutorial( "[TRADUCIR: tutorial_simple_positions]"

#   Tutorial( "tutorial_transitions"
    Tutorial( "[TRADUCIR: tutorial_transitions]"

#   Tutorial( "tutorial_music"
    Tutorial( "[TRADUCIR: tutorial_music]"

#   Tutorial( "tutorial_menus"
    Tutorial( "[TRADUCIR: tutorial_menus]"

#   Tutorial( "tutorial_input"
    Tutorial( "[TRADUCIR: tutorial_input]"

#   Tutorial( "tutorial_video"
    Tutorial( "[TRADUCIR: tutorial_video]"

#   Tutorial( "tutorial_nvlmode"
    Tutorial( "[TRADUCIR: tutorial_nvlmode]"

#   Tutorial( "director"
    Tutorial( "[TRADUCIR: director]"

#   Tutorial( "distribute"
    Tutorial( "[TRADUCIR: distribute]"

#   Section(_( "In Depth"
    Section(_( "[TRADUCIR: In Depth]"

#   Tutorial( "text"
    Tutorial( "[TRADUCIR: text]"

#   Tutorial( "demo_character"
    Tutorial( "[TRADUCIR: demo_character]"

#   Tutorial( "simple_displayables"
    Tutorial( "[TRADUCIR: simple_displayables]"

#   Tutorial( "demo_transitions"
    Tutorial( "[TRADUCIR: demo_transitions]"

#   Tutorial( "tutorial_positions"
    Tutorial( "[TRADUCIR: tutorial_positions]"

#   Tutorial( "tutorial_atl"
    Tutorial( "[TRADUCIR: tutorial_atl]"

#   Tutorial( "transform_properties"
    Tutorial( "[TRADUCIR: transform_properties]"

#   Tutorial( "new_gui"
    Tutorial( "[TRADUCIR: new_gui]"

#   Tutorial( "styles"
    Tutorial( "[TRADUCIR: styles]"

#   Tutorial( "tutorial_screens"
    Tutorial( "[TRADUCIR: tutorial_screens]"

#   Tutorial( "screen_displayables"
    Tutorial( "[TRADUCIR: screen_displayables]"

#   Tutorial( "demo_minigame"
    Tutorial( "[TRADUCIR: demo_minigame]"

#   Tutorial( "translations"
    Tutorial( "[TRADUCIR: translations]"

#   has side "c r b"
    has side "[TRADUCIR: c r b]"

#   if i.kind == "tutorial"
    if i.kind == "[TRADUCIR: tutorial]"

#   bar adjustment adj style "vscrollbar"
    bar adjustment adj style "[TRADUCIR: vscrollbar]"

#   textbutton _( "That's enough for now."
    textbutton _( "[TRADUCIR: That's enough for now.]"

#   play music "sunflower-slow-drag.ogg"
    play music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "Hi! My name is Eileen, and I'd like to welcome you to the Ren'Py tutorial."
    e "[TRADUCIR: Hi! My name is Eileen, and I'd like to welcome you to the Ren'Py tutorial.]"

#   e "In this tutorial, we'll teach you the basics of Ren'Py, so you can make games of your own. We'll also demonstrate many features, so you can see what Ren'Py is capable of."
    e "[TRADUCIR: In this tutorial, we'll teach you the basics of Ren'Py, so you can make games of your own. We'll also demonstrate many features, so you can see what Ren'Py is capable of.]"

#   $ e(_( "What would you like to see?"
    $ e(_( "[TRADUCIR: What would you like to see?]"

#   $ e(_( "Is there anything else you'd like to see?"
    $ e(_( "[TRADUCIR: Is there anything else you'd like to see?]"

#   e "Thank you for viewing this tutorial."
    e "[TRADUCIR: Thank you for viewing this tutorial.]"

#   e "If you'd like to see a full Ren'Py game, select \"
    e "[TRADUCIR: If you'd like to see a full Ren'Py game, select \]"

#   e "You can download new versions of Ren'Py from {a=https://www.renpy.org/}https://www.renpy.org/{/a}. For help and discussion, check out the {a=https://lemmasoft.renai.us/forums/}Lemma Soft Forums{/a}."
    e "[TRADUCIR: You can download new versions of Ren'Py from {a=https://www.renpy.org/}https://www.renpy.org/{/a}. For help and discussion, check out the {a=https://lemmasoft.renai.us/forums/}Lemma Soft Forums{/a}.]"

#   e "We'd like to thank Piroshki for contributing my sprites; Mugenjohncel for Lucy, the band, and drawn backgrounds; and Jake for the magic circle."
    e "[TRADUCIR: We'd like to thank Piroshki for contributing my sprites; Mugenjohncel for Lucy, the band, and drawn backgrounds; and Jake for the magic circle.]"

#   e "The background music is \"
    e "[TRADUCIR: The background music is \]"

#   e "We look forward to seeing what you create with Ren'Py. Have fun!"
    e "[TRADUCIR: We look forward to seeing what you create with Ren'Py. Have fun!]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\testcases.rpy DIALOGOS: 99

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Yes."
    click until "[TRADUCIR: Yes.]"

#   "No."
    "[TRADUCIR: No.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Yes, I do."
    click until "[TRADUCIR: Yes, I do.]"

#   click until "Yes."
    click until "[TRADUCIR: Yes.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Some games might prompt the player for input."
    click until "[TRADUCIR: Some games might prompt the player for input.]"

#   type "Tom"
    type "[TRADUCIR: Tom]"

#   type "m"
    type "[TRADUCIR: m]"

#   type "\n"
    type "[TRADUCIR: \n]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Yes."
    click until "[TRADUCIR: Yes.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Simple"
    click until "[TRADUCIR: Simple]"

#   click until "ImageDissolve"
    click until "[TRADUCIR: ImageDissolve]"

#   click until "MoveTransition"
    click until "[TRADUCIR: MoveTransition]"

#   click until "CropMove"
    click until "[TRADUCIR: CropMove]"

#   click until "PushMove"
    click until "[TRADUCIR: PushMove]"

#   click until "AlphaDissolve"
    click until "[TRADUCIR: AlphaDissolve]"

#   click until "something else"
    click until "[TRADUCIR: something else]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "xpos .75 ypos .25"
    click until "[TRADUCIR: xpos .75 ypos .25]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Style basics."
    click until "[TRADUCIR: Style basics.]"

#   click until "General style properties."
    click until "[TRADUCIR: General style properties.]"

#   click until "Text style properties."
    click until "[TRADUCIR: Text style properties.]"

#   click until "Window and Button style properties."
    click until "[TRADUCIR: Window and Button style properties.]"

#   click until "Bar style properties."
    click until "[TRADUCIR: Bar style properties.]"

#   click until "Box, Grid, and Fixed style properties."
    click until "[TRADUCIR: Box, Grid, and Fixed style properties.]"

#   click until "The Displayable Inspector."
    click until "[TRADUCIR: The Displayable Inspector.]"

#   click until "That's all I want to know."
    click until "[TRADUCIR: That's all I want to know.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "What screens can do."
    click until "[TRADUCIR: What screens can do.]"

#   click until "Yes."
    click until "[TRADUCIR: Yes.]"

#   click until "How to show screens."
    click until "[TRADUCIR: How to show screens.]"

#   click until "you'll have to click"
    click until "[TRADUCIR: you'll have to click]"

#   "Okay"
    "[TRADUCIR: Okay]"

#   click until "Passing parameters to screens."
    click until "[TRADUCIR: Passing parameters to screens.]"

#   click until "the call screen statement"
    click until "[TRADUCIR: the call screen statement]"

#   "Okay"
    "[TRADUCIR: Okay]"

#   click until "Screen properties."
    click until "[TRADUCIR: Screen properties.]"

#   click until "Close This Screen"
    click until "[TRADUCIR: Close This Screen]"

#   "Close This Screen"
    "[TRADUCIR: Close This Screen]"

#   click until "Special screen statements."
    click until "[TRADUCIR: Special screen statements.]"

#   click until "Using other screens."
    click until "[TRADUCIR: Using other screens.]"

#   click until "That's it."
    click until "[TRADUCIR: That's it.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Common properties"
    click until "[TRADUCIR: Common properties]"

#   click until "Adding images"
    click until "[TRADUCIR: Adding images]"

#   click until "Text"
    click until "[TRADUCIR: Text]"

#   click until "Buttons"
    click until "[TRADUCIR: Buttons]"

#   click until "Bars"
    click until "[TRADUCIR: Bars]"

#   click until "Viewports"
    click until "[TRADUCIR: Viewports]"

#   click until "Imagemaps"
    click until "[TRADUCIR: Imagemaps]"

#   click until "Science"
    click until "[TRADUCIR: Science]"

#   click until "That's all"
    click until "[TRADUCIR: That's all]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   "Back"
    "[TRADUCIR: Back]"

#   "Back"
    "[TRADUCIR: Back]"

#   "Skip"
    "[TRADUCIR: Skip]"

#   "Back"
    "[TRADUCIR: Back]"

#   "Auto"
    "[TRADUCIR: Auto]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   "Auto"
    "[TRADUCIR: Auto]"

#   "History"
    "[TRADUCIR: History]"

#   "Save"
    "[TRADUCIR: Save]"

#   "Save Slot 1"
    "[TRADUCIR: Save Slot 1]"

#   "Yes"
    "[TRADUCIR: Yes]"

#   "Load"
    "[TRADUCIR: Load]"

#   "Load Slot 1"
    "[TRADUCIR: Load Slot 1]"

#   "Yes"
    "[TRADUCIR: Yes]"

#   "Prefs"
    "[TRADUCIR: Prefs]"

#   "About"
    "[TRADUCIR: About]"

#   "Help"
    "[TRADUCIR: Help]"

#   "Main Menu"
    "[TRADUCIR: Main Menu]"

#   "Yes"
    "[TRADUCIR: Yes]"

#   "Load"
    "[TRADUCIR: Load]"

#   "Load Slot 1"
    "[TRADUCIR: Load Slot 1]"

#   click until "Yes."
    click until "[TRADUCIR: Yes.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   "Start"
    "[TRADUCIR: Start]"

#   "That's enough for now."
    "[TRADUCIR: That's enough for now.]"

#   click until "Quit"
    click until "[TRADUCIR: Quit]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\tutorial_atl.rpy DIALOGOS: 129

#   image bg band = Transform( "concert1"
    image bg band = Transform( "[TRADUCIR: concert1]"

#   image logo small = Transform( "logo base"
    image logo small = Transform( "[TRADUCIR: logo base]"

#   "concert2"
    "[TRADUCIR: concert2]"

#   "concert1"
    "[TRADUCIR: concert1]"

#   "concert2"
    "[TRADUCIR: concert2]"

#   "concert3"
    "[TRADUCIR: concert3]"

#   "concert2"
    "[TRADUCIR: concert2]"

#   "target1.png"
    "[TRADUCIR: target1.png]"

#   "target2.png"
    "[TRADUCIR: target2.png]"

#   "eileen vhappy"
    "[TRADUCIR: eileen vhappy]"

#   "eileen happy"
    "[TRADUCIR: eileen happy]"

#   "eileen vhappy"
    "[TRADUCIR: eileen vhappy]"

#   "eileen happy"
    "[TRADUCIR: eileen happy]"

#   "eileen vhappy"
    "[TRADUCIR: eileen vhappy]"

#   "eileen happy"
    "[TRADUCIR: eileen happy]"

#   "bg washington"
    "[TRADUCIR: bg washington]"

#   "bg whitehouse"
    "[TRADUCIR: bg whitehouse]"

#   "bg washington"
    "[TRADUCIR: bg washington]"

#   e "In this tutorial, I'll teach you how Ren'Py positions things on the screen. But before that, let's learn a little bit about how Python handles numbers."
    e "[TRADUCIR: In this tutorial, I'll teach you how Ren'Py positions things on the screen. But before that, let's learn a little bit about how Python handles numbers.]"

#   e "There are two main kinds of numbers in Python: integers and floating point numbers. An integer consists entirely of digits, while a floating point number has a decimal point."
    e "[TRADUCIR: There are two main kinds of numbers in Python: integers and floating point numbers. An integer consists entirely of digits, while a floating point number has a decimal point.]"

#   e "For example, 100 is an integer, while 0.5 is a floating point number, or float for short. In this system, there are two zeros: 0 is an integer, and 0.0 is a float."
    e "[TRADUCIR: For example, 100 is an integer, while 0.5 is a floating point number, or float for short. In this system, there are two zeros: 0 is an integer, and 0.0 is a float.]"

#   e "Ren'Py uses integers to represent absolute coordinates, and floats to represent fractions of an area with known size."
    e "[TRADUCIR: Ren'Py uses integers to represent absolute coordinates, and floats to represent fractions of an area with known size.]"

#   e "When we're positioning something, the area is usually the entire screen."
    e "[TRADUCIR: When we're positioning something, the area is usually the entire screen.]"

#   e "Let me get out of the way, and I'll show you where some positions are."
    e "[TRADUCIR: Let me get out of the way, and I'll show you where some positions are.]"

#   e "The origin is the upper-left corner of the screen. That's where the x position (xpos) and the y position (ypos) are both zero."
    e "[TRADUCIR: The origin is the upper-left corner of the screen. That's where the x position (xpos) and the y position (ypos) are both zero.]"

#   e "When we increase xpos, we move to the right. So here's an xpos of .5, meaning half the width across the screen."
    e "[TRADUCIR: When we increase xpos, we move to the right. So here's an xpos of .5, meaning half the width across the screen.]"

#   e "Increasing xpos to 1.0 moves us to the right-hand border of the screen."
    e "[TRADUCIR: Increasing xpos to 1.0 moves us to the right-hand border of the screen.]"

#   e "We can also use an absolute xpos, which is given in an absolute number of pixels from the left side of the screen. For example, since this window is 1280 pixels across, using an xpos of 640 will return the target to the center of the top row."
    e "[TRADUCIR: We can also use an absolute xpos, which is given in an absolute number of pixels from the left side of the screen. For example, since this window is 1280 pixels across, using an xpos of 640 will return the target to the center of the top row.]"

#   e "The y-axis position, or ypos works the same way. Right now, we have a ypos of 0.0."
    e "[TRADUCIR: The y-axis position, or ypos works the same way. Right now, we have a ypos of 0.0.]"

#   e "Here's a ypos of 0.5."
    e "[TRADUCIR: Here's a ypos of 0.5.]"

#   e "A ypos of 1.0 specifies a position at the bottom of the screen. If you look carefully, you can see the position indicator spinning below the text window."
    e "[TRADUCIR: A ypos of 1.0 specifies a position at the bottom of the screen. If you look carefully, you can see the position indicator spinning below the text window.]"

#   e "Like xpos, ypos can also be an integer. In this case, ypos would give the total number of pixels from the top of the screen."
    e "[TRADUCIR: Like xpos, ypos can also be an integer. In this case, ypos would give the total number of pixels from the top of the screen.]"

#   e "Can you guess where this position is, relative to the screen?"
    e "[TRADUCIR: Can you guess where this position is, relative to the screen?]"

#   "xpos 1.0 ypos .5"
    "[TRADUCIR: xpos 1.0 ypos .5]"

#   e "Sorry, that's wrong. The xpos is .75, and the ypos is .25."
    e "[TRADUCIR: Sorry, that's wrong. The xpos is .75, and the ypos is .25.]"

#   e "In other words, it's 75%% of the way from the left side, and 25%% of the way from the top."
    e "[TRADUCIR: In other words, it's 75%% of the way from the left side, and 25%% of the way from the top.]"

#   "xpos .75 ypos .25"
    "[TRADUCIR: xpos .75 ypos .25]"

#   e "Good job! You got that position right."
    e "[TRADUCIR: Good job! You got that position right.]"

#   "xpos .25 ypos .33"
    "[TRADUCIR: xpos .25 ypos .33]"

#   e "Sorry, that's wrong. The xpos is .75, and the ypos is .25."
    e "[TRADUCIR: Sorry, that's wrong. The xpos is .75, and the ypos is .25.]"

#   e "In other words, it's 75%% of the way from the left side, and 25%% of the way from the top."
    e "[TRADUCIR: In other words, it's 75%% of the way from the left side, and 25%% of the way from the top.]"

#   e "The second position we care about is the anchor. The anchor is a spot on the thing being positioned."
    e "[TRADUCIR: The second position we care about is the anchor. The anchor is a spot on the thing being positioned.]"

#   e "For example, here we have an xanchor of 0.0 and a yanchor of 0.0. It's in the upper-left corner of the logo image."
    e "[TRADUCIR: For example, here we have an xanchor of 0.0 and a yanchor of 0.0. It's in the upper-left corner of the logo image.]"

#   e "When we increase the xanchor to 1.0, the anchor moves to the right corner of the image."
    e "[TRADUCIR: When we increase the xanchor to 1.0, the anchor moves to the right corner of the image.]"

#   e "Similarly, when both xanchor and yanchor are 1.0, the anchor is the bottom-right corner."
    e "[TRADUCIR: Similarly, when both xanchor and yanchor are 1.0, the anchor is the bottom-right corner.]"

#   e "To place an image on the screen, we need both the position and the anchor."
    e "[TRADUCIR: To place an image on the screen, we need both the position and the anchor.]"

#   e "We then line them up, so that both the position and anchor are at the same point on the screen."
    e "[TRADUCIR: We then line them up, so that both the position and anchor are at the same point on the screen.]"

#   e "When we place both in the upper-left corner, the image moves to the upper-left corner of the screen."
    e "[TRADUCIR: When we place both in the upper-left corner, the image moves to the upper-left corner of the screen.]"

#   e "With the right combination of position and anchor, any place on the screen can be specified, without even knowing the size of the image."
    e "[TRADUCIR: With the right combination of position and anchor, any place on the screen can be specified, without even knowing the size of the image.]"

#   e "It's often useful to set xpos and xanchor to the same value. We call that xalign, and it gives a fractional position on the screen."
    e "[TRADUCIR: It's often useful to set xpos and xanchor to the same value. We call that xalign, and it gives a fractional position on the screen.]"

#   e "For example, when we set xalign to 0.0, things are aligned to the left side of the screen."
    e "[TRADUCIR: For example, when we set xalign to 0.0, things are aligned to the left side of the screen.]"

#   e "When we set it to 1.0, then we're aligned to the right side of the screen."
    e "[TRADUCIR: When we set it to 1.0, then we're aligned to the right side of the screen.]"

#   e "And when we set it to 0.5, we're back to the center of the screen."
    e "[TRADUCIR: And when we set it to 0.5, we're back to the center of the screen.]"

#   e "Setting yalign is similar, except along the y-axis."
    e "[TRADUCIR: Setting yalign is similar, except along the y-axis.]"

#   e "Remember that xalign is just setting xpos and xanchor to the same value, and yalign is just setting ypos and yanchor to the same value."
    e "[TRADUCIR: Remember that xalign is just setting xpos and xanchor to the same value, and yalign is just setting ypos and yanchor to the same value.]"

#   e "The xcenter and ycenter properties position the center of the image. Here, with xcenter set to .75, the center of the image is three-quarters of the way to the right side of the screen."
    e "[TRADUCIR: The xcenter and ycenter properties position the center of the image. Here, with xcenter set to .75, the center of the image is three-quarters of the way to the right side of the screen.]"

#   e "The difference between xalign and xcenter is more obvious when xcenter is 1.0, and the image is halfway off the right side of the screen."
    e "[TRADUCIR: The difference between xalign and xcenter is more obvious when xcenter is 1.0, and the image is halfway off the right side of the screen.]"

#   e "There are the xoffset and yoffset properties, which are applied after everything else, and offset things to the right or bottom, respectively."
    e "[TRADUCIR: There are the xoffset and yoffset properties, which are applied after everything else, and offset things to the right or bottom, respectively.]"

#   e "Of course, you can use negative numbers to offset things to the left and top."
    e "[TRADUCIR: Of course, you can use negative numbers to offset things to the left and top.]"

#   e "Lastly, I'll mention that there are combined properties like align, pos, anchor, and center. Align takes a pair of numbers, and sets xalign to the first and yalign to the second. The others are similar."
    e "[TRADUCIR: Lastly, I'll mention that there are combined properties like align, pos, anchor, and center. Align takes a pair of numbers, and sets xalign to the first and yalign to the second. The others are similar.]"

#   e "Once you understand positions, you can use transformations to move things around the Ren'Py screen."
    e "[TRADUCIR: Once you understand positions, you can use transformations to move things around the Ren'Py screen.]"

#   e "Ren'Py uses transforms to animate, manipulate, and place images. We've already seen the very simplest of transforms in use:"
    e "[TRADUCIR: Ren'Py uses transforms to animate, manipulate, and place images. We've already seen the very simplest of transforms in use:]"

#   e "Transforms can be very simple affairs that place the image somewhere on the screen, like the right transform."
    e "[TRADUCIR: Transforms can be very simple affairs that place the image somewhere on the screen, like the right transform.]"

#   e "But transforms can also be far more complicated affairs, that introduce animation and effects into the mix. To demonstrate, let's have a Gratuitous Rock Concert!"
    e "[TRADUCIR: But transforms can also be far more complicated affairs, that introduce animation and effects into the mix. To demonstrate, let's have a Gratuitous Rock Concert!]"

#   play music "renpyallstars.ogg"
    play music "[TRADUCIR: renpyallstars.ogg]"

#   e "But first, let's have... a Gratuitous Rock Concert!"
    e "[TRADUCIR: But first, let's have... a Gratuitous Rock Concert!]"

#   play music "sunflower-slow-drag.ogg"
    play music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "That was a lot of work, but it was built out of small parts."
    e "[TRADUCIR: That was a lot of work, but it was built out of small parts.]"

#   e "Most transforms in Ren'Py are built using the Animation and Transform Language, or ATL for short."
    e "[TRADUCIR: Most transforms in Ren'Py are built using the Animation and Transform Language, or ATL for short.]"

#   e "There are currently three places where ATL can be used in Ren'Py."
    e "[TRADUCIR: There are currently three places where ATL can be used in Ren'Py.]"

#   e "The first place ATL can be used is as part of an image statement. Instead of a displayable, an image may be defined as a block of ATL code."
    e "[TRADUCIR: The first place ATL can be used is as part of an image statement. Instead of a displayable, an image may be defined as a block of ATL code.]"

#   e "When used in this way, we have to be sure that ATL includes one or more displayables to actually show."
    e "[TRADUCIR: When used in this way, we have to be sure that ATL includes one or more displayables to actually show.]"

#   e "The second way is through the use of the transform statement. This assigns the ATL block to a python variable, allowing it to be used in at clauses and inside other transforms."
    e "[TRADUCIR: The second way is through the use of the transform statement. This assigns the ATL block to a python variable, allowing it to be used in at clauses and inside other transforms.]"

#   e "Finally, an ATL block can be used as part of a show statement, instead of the at clause."
    e "[TRADUCIR: Finally, an ATL block can be used as part of a show statement, instead of the at clause.]"

#   e "When ATL is used as part of a show statement, values of properties exist even when the transform is changed. So even though your click stopped the motion, the image remains in the same place."
    e "[TRADUCIR: When ATL is used as part of a show statement, values of properties exist even when the transform is changed. So even though your click stopped the motion, the image remains in the same place.]"

#   e "The key to ATL is what we call composability. ATL is made up of relatively simple commands, which can be combined together to create complicated transforms."
    e "[TRADUCIR: The key to ATL is what we call composability. ATL is made up of relatively simple commands, which can be combined together to create complicated transforms.]"

#   e "Before I explain how ATL works, let me explain what animation and transformation are."
    e "[TRADUCIR: Before I explain how ATL works, let me explain what animation and transformation are.]"

#   e "Animation is when the displayable being shown changes. For example, right now I am changing my expression."
    e "[TRADUCIR: Animation is when the displayable being shown changes. For example, right now I am changing my expression.]"

#   e "Transformation involves moving or distorting an image. This includes placing it on the screen, zooming it in and out, rotating it, and changing its opacity."
    e "[TRADUCIR: Transformation involves moving or distorting an image. This includes placing it on the screen, zooming it in and out, rotating it, and changing its opacity.]"

#   e "To introduce ATL, let's start by looking at a simple animation. Here's one that consists of five lines of ATL code, contained within an image statement."
    e "[TRADUCIR: To introduce ATL, let's start by looking at a simple animation. Here's one that consists of five lines of ATL code, contained within an image statement.]"

#   e "To change a displayable, simply mention it on a line of ATL. Here, we're switching back and forth between two images."
    e "[TRADUCIR: To change a displayable, simply mention it on a line of ATL. Here, we're switching back and forth between two images.]"

#   e "Since we're defining an image, the first line of ATL must give a displayable. Otherwise, there would be nothing to show."
    e "[TRADUCIR: Since we're defining an image, the first line of ATL must give a displayable. Otherwise, there would be nothing to show.]"

#   e "The second and fourth lines are pause statements, which cause ATL to wait half a second each before continuing. That's how we give the delay between images."
    e "[TRADUCIR: The second and fourth lines are pause statements, which cause ATL to wait half a second each before continuing. That's how we give the delay between images.]"

#   e "The final line is a repeat statement. This causes the current block of ATL to be restarted. You can only have one repeat statement per block."
    e "[TRADUCIR: The final line is a repeat statement. This causes the current block of ATL to be restarted. You can only have one repeat statement per block.]"

#   e "If we were to write repeat 2 instead, the animation would loop twice, then stop."
    e "[TRADUCIR: If we were to write repeat 2 instead, the animation would loop twice, then stop.]"

#   e "Omitting the repeat statement means that the animation stops once we reach the end of the block of ATL code."
    e "[TRADUCIR: Omitting the repeat statement means that the animation stops once we reach the end of the block of ATL code.]"

#   e "By default, displayables are replaced instantaneously. We can also use a with clause to give a transition between displayables."
    e "[TRADUCIR: By default, displayables are replaced instantaneously. We can also use a with clause to give a transition between displayables.]"

#   e "With animation done, we'll see how we can use ATL to transform images, starting with positioning an image on the screen."
    e "[TRADUCIR: With animation done, we'll see how we can use ATL to transform images, starting with positioning an image on the screen.]"

#   e "The simplest thing we can do is to statically position an image. This is done by giving the names of the position properties, followed by the property values."
    e "[TRADUCIR: The simplest thing we can do is to statically position an image. This is done by giving the names of the position properties, followed by the property values.]"

#   e "With a few more statements, we can move things around on the screen."
    e "[TRADUCIR: With a few more statements, we can move things around on the screen.]"

#   e "This example starts the image off at the top-right of the screen, and waits a second. It then moves it to the left side, waits another second, and repeats."
    e "[TRADUCIR: This example starts the image off at the top-right of the screen, and waits a second. It then moves it to the left side, waits another second, and repeats.]"

#   e "The pause and repeat statements are the same statements we used in our animations. They work throughout ATL code."
    e "[TRADUCIR: The pause and repeat statements are the same statements we used in our animations. They work throughout ATL code.]"

#   e "Having the image jump around on the screen isn't all that useful. That's why ATL has the interpolation statement."
    e "[TRADUCIR: Having the image jump around on the screen isn't all that useful. That's why ATL has the interpolation statement.]"

#   e "The interpolation statement allows you to smoothly vary the value of a transform property, from an old to a new value."
    e "[TRADUCIR: The interpolation statement allows you to smoothly vary the value of a transform property, from an old to a new value.]"

#   e "Here, we have an interpolation statement on the second ATL line. It starts off with the name of a time function, in this case linear."
    e "[TRADUCIR: Here, we have an interpolation statement on the second ATL line. It starts off with the name of a time function, in this case linear.]"

#   e "That's followed by an amount of time, in this case three seconds. It ends with a list of properties, each followed by its new value."
    e "[TRADUCIR: That's followed by an amount of time, in this case three seconds. It ends with a list of properties, each followed by its new value.]"

#   e "The value of each property is interpolated from its value when the statement starts to the value at the end of the statement. This is done once per frame, allowing smooth animation."
    e "[TRADUCIR: The value of each property is interpolated from its value when the statement starts to the value at the end of the statement. This is done once per frame, allowing smooth animation.]"

#   e "ATL supports more complicated move types, like circle and spline motion. But I won't be showing those here."
    e "[TRADUCIR: ATL supports more complicated move types, like circle and spline motion. But I won't be showing those here.]"

#   e "Apart from displayables, pause, interpolation, and repeat, there are a few other statements we can use as part of ATL."
    e "[TRADUCIR: Apart from displayables, pause, interpolation, and repeat, there are a few other statements we can use as part of ATL.]"

#   e "ATL transforms created using the statement become ATL statements themselves. Since the default positions are also transforms, this means that we can use left, right, and center inside of an ATL block."
    e "[TRADUCIR: ATL transforms created using the statement become ATL statements themselves. Since the default positions are also transforms, this means that we can use left, right, and center inside of an ATL block.]"

#   e "Here, we have two new statements. The block statement allows you to include a block of ATL code. Since the repeat statement applies to blocks, this lets you repeat only part of an ATL transform."
    e "[TRADUCIR: Here, we have two new statements. The block statement allows you to include a block of ATL code. Since the repeat statement applies to blocks, this lets you repeat only part of an ATL transform.]"

#   e "We also have the time statement, which runs after the given number of seconds have elapsed from the start of the block. It will run even if another statement is running, stopping the other statement."
    e "[TRADUCIR: We also have the time statement, which runs after the given number of seconds have elapsed from the start of the block. It will run even if another statement is running, stopping the other statement.]"

#   e "So this example bounces the image back and forth for eleven and a half seconds, and then moves it to the right side of the screen."
    e "[TRADUCIR: So this example bounces the image back and forth for eleven and a half seconds, and then moves it to the right side of the screen.]"

#   e "The parallel statement lets us run two blocks of ATL code at the same time."
    e "[TRADUCIR: The parallel statement lets us run two blocks of ATL code at the same time.]"

#   e "Here, the top block move the image in the horizontal direction, and the bottom block moves it in the vertical direction. Since they're moving at different speeds, it looks like the image is bouncing on the screen."
    e "[TRADUCIR: Here, the top block move the image in the horizontal direction, and the bottom block moves it in the vertical direction. Since they're moving at different speeds, it looks like the image is bouncing on the screen.]"

#   e "Finally, the choice statement makes Ren'Py randomly pick a block of ATL code. This allows you to add some variation as to what Ren'Py shows."
    e "[TRADUCIR: Finally, the choice statement makes Ren'Py randomly pick a block of ATL code. This allows you to add some variation as to what Ren'Py shows.]"

#   e "This tutorial game has only scratched the surface of what you can do with ATL. For example, we haven't even covered the on and event statements. For more information, you might want to check out {a=https://renpy.org/doc/html/atl.html}the ATL chapter in the reference manual{/a}."
    e "[TRADUCIR: This tutorial game has only scratched the surface of what you can do with ATL. For example, we haven't even covered the on and event statements. For more information, you might want to check out {a=https://renpy.org/doc/html/atl.html}the ATL chapter in the reference manual{/a}.]"

#   e "Ren'Py has quite a few transform properties that can be used with ATL, the Transform displayable, and the add Screen Language statement."
    e "[TRADUCIR: Ren'Py has quite a few transform properties that can be used with ATL, the Transform displayable, and the add Screen Language statement.]"

#   e "Here, we'll show them off so you can see them in action and get used to what each does."
    e "[TRADUCIR: Here, we'll show them off so you can see them in action and get used to what each does.]"

#   e "First off, all of the position properties are also transform properties. These include the pos, anchor, align, center, and offset properties."
    e "[TRADUCIR: First off, all of the position properties are also transform properties. These include the pos, anchor, align, center, and offset properties.]"

#   e "The position properties can also be used to pan over a displayable larger than the screen, by giving xpos and ypos negative values."
    e "[TRADUCIR: The position properties can also be used to pan over a displayable larger than the screen, by giving xpos and ypos negative values.]"

#   "The subpixel property controls how things are lined up with the screen. When False, images can be pixel-perfect, but there can be pixel jumping."
    "[TRADUCIR: The subpixel property controls how things are lined up with the screen. When False, images can be pixel-perfect, but there can be pixel jumping.]"

#   "When it's set to True, movement is smoother at the cost of blurring images a little."
    "[TRADUCIR: When it's set to True, movement is smoother at the cost of blurring images a little.]"

#   e "Transforms also support polar coordinates. The around property sets the center of the coordinate system to coordinates given in pixels."
    e "[TRADUCIR: Transforms also support polar coordinates. The around property sets the center of the coordinate system to coordinates given in pixels.]"

#   e "The angle property gives the angle in degrees. Angles run clockwise, with the zero angle at the top of the screen."
    e "[TRADUCIR: The angle property gives the angle in degrees. Angles run clockwise, with the zero angle at the top of the screen.]"

#   e "The radius property gives the distance in pixels from the anchor of the displayable to the center of the coordinate system."
    e "[TRADUCIR: The radius property gives the distance in pixels from the anchor of the displayable to the center of the coordinate system.]"

#   e "There are several ways to resize a displayable. The zoom property lets us scale a displayable by a factor, making it bigger and smaller."
    e "[TRADUCIR: There are several ways to resize a displayable. The zoom property lets us scale a displayable by a factor, making it bigger and smaller.]"

#   e "The xzoom and yzoom properties allow the displayable to be scaled in the X and Y directions independently."
    e "[TRADUCIR: The xzoom and yzoom properties allow the displayable to be scaled in the X and Y directions independently.]"

#   e "By making xzoom or yzoom a negative number, we can flip the image horizontally or vertically."
    e "[TRADUCIR: By making xzoom or yzoom a negative number, we can flip the image horizontally or vertically.]"

#   e "Instead of zooming by a scale factor, the size transform property can be used to scale a displayable to a size in pixels."
    e "[TRADUCIR: Instead of zooming by a scale factor, the size transform property can be used to scale a displayable to a size in pixels.]"

#   e "The alpha property is used to change the opacity of a displayable. This can make it appear and disappear."
    e "[TRADUCIR: The alpha property is used to change the opacity of a displayable. This can make it appear and disappear.]"

#   e "The rotate property rotates a displayable."
    e "[TRADUCIR: The rotate property rotates a displayable.]"

#   e "By default, when a displayable is rotated, Ren'Py will include extra space on all four sides, so the size doesn't change as it rotates. Here, you can see the extra space on the left and top, and it's also there on the right and bottom."
    e "[TRADUCIR: By default, when a displayable is rotated, Ren'Py will include extra space on all four sides, so the size doesn't change as it rotates. Here, you can see the extra space on the left and top, and it's also there on the right and bottom.]"

#   e "By setting rotate_pad to False, we can get rid of the space, at the cost of the size of the displayable changing as it rotates."
    e "[TRADUCIR: By setting rotate_pad to False, we can get rid of the space, at the cost of the size of the displayable changing as it rotates.]"

#   e "The tile transform properties, xtile and ytile, repeat the displayable multiple times."
    e "[TRADUCIR: The tile transform properties, xtile and ytile, repeat the displayable multiple times.]"

#   e "The crop property crops a rectangle out of a displayable, showing only part of it."
    e "[TRADUCIR: The crop property crops a rectangle out of a displayable, showing only part of it.]"

#   e "When used together, crop and size can be used to focus in on specific parts of an image."
    e "[TRADUCIR: When used together, crop and size can be used to focus in on specific parts of an image.]"

#   e "The xpan and ypan properties can be used to pan over a displayable, given an angle in degrees, with 0 being the center."
    e "[TRADUCIR: The xpan and ypan properties can be used to pan over a displayable, given an angle in degrees, with 0 being the center.]"

#   e "Those are all the transform properties we have to work with. By putting them together in the right order, you can create complex things."
    e "[TRADUCIR: Those are all the transform properties we have to work with. By putting them together in the right order, you can create complex things.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\tutorial_director.rpy DIALOGOS: 24

#   define director.show_tags = { "eileen"
    define director.show_tags = { "[TRADUCIR: eileen]"

#   e "There are a few tools you can access by pressing the right commands on the keyboard."
    e "[TRADUCIR: There are a few tools you can access by pressing the right commands on the keyboard.]"

#   e "Typing Shift+R turns on autoreload mode. When it's enabled, your game will automatically reload when you edit a script file."
    e "[TRADUCIR: Typing Shift+R turns on autoreload mode. When it's enabled, your game will automatically reload when you edit a script file.]"

#   e "Shift+O brings you to the console, which lets you enter Ren'Py and Python commands to try them out."
    e "[TRADUCIR: Shift+O brings you to the console, which lets you enter Ren'Py and Python commands to try them out.]"

#   e "Shift+D pops up a developer menu with access to these and other functions."
    e "[TRADUCIR: Shift+D pops up a developer menu with access to these and other functions.]"

#   e "The most powerful tool is the interactive director that lets you add images, music, and voice lines to your game from inside Ren'Py."
    e "[TRADUCIR: The most powerful tool is the interactive director that lets you add images, music, and voice lines to your game from inside Ren'Py.]"

#   e "The idea is that you can use an editor to write the script and logic of your visual novel, and then interactively add images in the right places."
    e "[TRADUCIR: The idea is that you can use an editor to write the script and logic of your visual novel, and then interactively add images in the right places.]"

#   e "It looks like Ren'Py is installed read-only on your system, so you won't be able to try out the interactive director now."
    e "[TRADUCIR: It looks like Ren'Py is installed read-only on your system, so you won't be able to try out the interactive director now.]"

#   e "You'll need to make your own project, and try it out there. But I can tell you how to use it."
    e "[TRADUCIR: You'll need to make your own project, and try it out there. But I can tell you how to use it.]"

#   e "You can try the interactive director out right now, by using it to change this tutorial game."
    e "[TRADUCIR: You can try the interactive director out right now, by using it to change this tutorial game.]"

#   e "Be sure to click my dialogue at the bottom of the screen to advance the tutorial."
    e "[TRADUCIR: Be sure to click my dialogue at the bottom of the screen to advance the tutorial.]"

#   e "If something goes wrong, don't worry. Quitting and restarting this tutorial will remove your changes and bring everything back to normal."
    e "[TRADUCIR: If something goes wrong, don't worry. Quitting and restarting this tutorial will remove your changes and bring everything back to normal.]"

#   e "To get started, let's go back to a blank slate, with no images on the screen."
    e "[TRADUCIR: To get started, let's go back to a blank slate, with no images on the screen.]"

#   e "You can show the director at any time by pressing the 'D' key on your keyboard. Ren'Py will reload, and you'll come back here. Try it now."
    e "[TRADUCIR: You can show the director at any time by pressing the 'D' key on your keyboard. Ren'Py will reload, and you'll come back here. Try it now.]"

#   e "Let's add a background. Click the '+' to pick where to add it, then the 'scene' statement and 'washington' for the image. Finally, click 'Add' to add it."
    e "[TRADUCIR: Let's add a background. Click the '+' to pick where to add it, then the 'scene' statement and 'washington' for the image. Finally, click 'Add' to add it.]"

#   e "Next, add a sprite. Click '+', then 'show', 'eileen', 'happy', and 'Add'. Once you've added it, dissolve it in by clicking the second '+', then 'with', 'dissolve', and 'Add'."
    e "[TRADUCIR: Next, add a sprite. Click '+', then 'show', 'eileen', 'happy', and 'Add'. Once you've added it, dissolve it in by clicking the second '+', then 'with', 'dissolve', and 'Add'.]"

#   e "You can edit or remove statements with the pencil icon. You can move me to the right by editing the show statement, then clicking '(transform)', 'right', and 'Change'."
    e "[TRADUCIR: You can edit or remove statements with the pencil icon. You can move me to the right by editing the show statement, then clicking '(transform)', 'right', and 'Change'.]"

#   e "Finally, you can use the play, queue, stop, and voice statements to manage audio. Try adding 'play', 'music', 'sunflower-slow-drag.ogg'."
    e "[TRADUCIR: Finally, you can use the play, queue, stop, and voice statements to manage audio. Try adding 'play', 'music', 'sunflower-slow-drag.ogg'.]"

#   if renpy.showing( "lucy"
    if renpy.showing( "[TRADUCIR: lucy]"

#   l "Finally, I get some more screen time!"
    l "[TRADUCIR: Finally, I get some more screen time!]"

#   queue music "sunflower-slow-drag.ogg"
    queue music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "The changes you make with the director are permanent. They're saved to the script, and you can rollback or repeat this section to see them."
    e "[TRADUCIR: The changes you make with the director are permanent. They're saved to the script, and you can rollback or repeat this section to see them.]"

#   e "However, we reset this tutorial when the game restarts, so you can try again from a clean slate. That won't happen with your own visual novel."
    e "[TRADUCIR: However, we reset this tutorial when the game restarts, so you can try again from a clean slate. That won't happen with your own visual novel.]"

#   e "I hope these tools make developing your visual novel that much easier."
    e "[TRADUCIR: I hope these tools make developing your visual novel that much easier.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\tutorial_distribute.rpy DIALOGOS: 12

#   e "One thing Ren'Py makes easy is building distributions of your visual novel so you can give it to players."
    e "[TRADUCIR: One thing Ren'Py makes easy is building distributions of your visual novel so you can give it to players.]"

#   e "Before you build distributions, you should use the Lint command to check your game for problems."
    e "[TRADUCIR: Before you build distributions, you should use the Lint command to check your game for problems.]"

#   e "While not every potential problem lint reports is a real issue, they generally are, and you should try to understand what might be wrong."
    e "[TRADUCIR: While not every potential problem lint reports is a real issue, they generally are, and you should try to understand what might be wrong.]"

#   e "After lint has finished, you can choose Build Distributions to build the Windows, Linux, and Mac distributions of your game."
    e "[TRADUCIR: After lint has finished, you can choose Build Distributions to build the Windows, Linux, and Mac distributions of your game.]"

#   e "This can be as simple as clicking the Build button, when you're not on a Mac."
    e "[TRADUCIR: This can be as simple as clicking the Build button, when you're not on a Mac.]"

#   e "If you are on a Macintosh, you can have Ren'Py sign the Mac application, which makes it easier for players to run. To enable this, you need to set build.mac_identity in options.rpy."
    e "[TRADUCIR: If you are on a Macintosh, you can have Ren'Py sign the Mac application, which makes it easier for players to run. To enable this, you need to set build.mac_identity in options.rpy.]"

#   e "Ren'Py supports the mobile platforms, Android and iOS. We also support ChromeOS, through its ability to run Android apps."
    e "[TRADUCIR: Ren'Py supports the mobile platforms, Android and iOS. We also support ChromeOS, through its ability to run Android apps.]"

#   e "These mobile platforms can be a bit more complicated. While Android apps can be built everywhere, iOS requires a Mac."
    e "[TRADUCIR: These mobile platforms can be a bit more complicated. While Android apps can be built everywhere, iOS requires a Mac.]"

#   e "Mobile platforms might also require you to change your visual novel a little, due to the smaller limited devices. For example, buttons need to be made large enough for a person to touch."
    e "[TRADUCIR: Mobile platforms might also require you to change your visual novel a little, due to the smaller limited devices. For example, buttons need to be made large enough for a person to touch.]"

#   e "Rather than cover mobile here, I'll point you to the {a=https://www.renpy.org/doc/html/android.html}Android{/a} and {a=https://www.renpy.org/doc/html/ios.html}iOS{/a} documentation, where you can read more."
    e "[TRADUCIR: Rather than cover mobile here, I'll point you to the {a=https://www.renpy.org/doc/html/android.html}Android{/a} and {a=https://www.renpy.org/doc/html/ios.html}iOS{/a} documentation, where you can read more.]"

#   e "Thanks to the distribution tools Ren'Py ships with, there are thousands of visual novels available."
    e "[TRADUCIR: Thanks to the distribution tools Ren'Py ships with, there are thousands of visual novels available.]"

#   e "I hope that soon, yours will be one of them!"
    e "[TRADUCIR: I hope that soon, yours will be one of them!]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\tutorial_nvlmode.rpy DIALOGOS: 18

#   define nvle = Character(_( "Eileen"
    define nvle = Character(_( "[TRADUCIR: Eileen]"

#   define config.lint_ignore_redefine += [ "store.menu"
    define config.lint_ignore_redefine += [ "[TRADUCIR: store.menu]"

#   nvle "NVL-style games are games that cover the full screen with text, rather then placing it in a window at the bottom of the screen. Like this."
    nvle "[TRADUCIR: NVL-style games are games that cover the full screen with text, rather then placing it in a window at the bottom of the screen. Like this.]"

#   nvle "To use NVL-mode, you need to define Characters with a kind=nvl."
    nvle "[TRADUCIR: To use NVL-mode, you need to define Characters with a kind=nvl.]"

#   nvle "Then just use that character in a say statement."
    nvle "[TRADUCIR: Then just use that character in a say statement.]"

#   nvle "You use 'nvl clear' to clear the screen when that becomes necessary."
    nvle "[TRADUCIR: You use 'nvl clear' to clear the screen when that becomes necessary.]"

#   nvle "The 'nvl show' and 'nvl hide' statements use transitions to show and hide the NVL window."
    nvle "[TRADUCIR: The 'nvl show' and 'nvl hide' statements use transitions to show and hide the NVL window.]"

#   nvle "NVL-mode also supports showing menus to the player, providing it's the last thing on the screen. Understand?"
    nvle "[TRADUCIR: NVL-mode also supports showing menus to the player, providing it's the last thing on the screen. Understand?]"

#   "Yes."
    "[TRADUCIR: Yes.]"

#   nvle "Good!"
    nvle "[TRADUCIR: Good!]"

#   "No."
    "[TRADUCIR: No.]"

#   nvle "Well, hopefully the code below makes it a little more clear."
    nvle "[TRADUCIR: Well, hopefully the code below makes it a little more clear.]"

#   nvle "Games can mix NVL-mode and the normal ADV-mode by having some characters that have kind=nvl, and some that do not."
    nvle "[TRADUCIR: Games can mix NVL-mode and the normal ADV-mode by having some characters that have kind=nvl, and some that do not.]"

#   e "You can specify transitions that occur when going from NVL-mode to ADV-mode."
    e "[TRADUCIR: You can specify transitions that occur when going from NVL-mode to ADV-mode.]"

#   nvle "As well as when going from ADV-mode to NVL-mode."
    nvle "[TRADUCIR: As well as when going from ADV-mode to NVL-mode.]"

#   nvle "Text tags like {{w}{w} work in NVL-mode."
    nvle "[TRADUCIR: Text tags like {{w}{w} work in NVL-mode.]"

#   extend "As does the \"
    extend "[TRADUCIR: As does the \]"

#   nvle "And that's it for NVL-mode."
    nvle "[TRADUCIR: And that's it for NVL-mode.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\tutorial_playing.rpy DIALOGOS: 34

#   e "As someone who has played more than a few visual novels, there are many features that I expect all games to have."
    e "[TRADUCIR: As someone who has played more than a few visual novels, there are many features that I expect all games to have.]"

#   e "Features like saving, loading, changing preferences, and so on."
    e "[TRADUCIR: Features like saving, loading, changing preferences, and so on.]"

#   e "One of the nice things about Ren'Py is that the engine provides many of these features for you. You can spend your time creating your game, and let us provide these things."
    e "[TRADUCIR: One of the nice things about Ren'Py is that the engine provides many of these features for you. You can spend your time creating your game, and let us provide these things.]"

#   e "While you're in the game, you can access the game menu by right clicking or hitting the escape key."
    e "[TRADUCIR: While you're in the game, you can access the game menu by right clicking or hitting the escape key.]"

#   e "You can also access the game menu through some of the quick menu buttons at the bottom of this screen."
    e "[TRADUCIR: You can also access the game menu through some of the quick menu buttons at the bottom of this screen.]"

#   e "When you first enter the game menu, you'll see the save screen. Clicking on a numbered slot will save the game."
    e "[TRADUCIR: When you first enter the game menu, you'll see the save screen. Clicking on a numbered slot will save the game.]"

#   e "Unlike other engines, Ren'Py doesn't limit the number of save slots that you can use. You can keep hitting next until you reach the page you want."
    e "[TRADUCIR: Unlike other engines, Ren'Py doesn't limit the number of save slots that you can use. You can keep hitting next until you reach the page you want.]"

#   e "Clicking on the title of the page allows you to start typing to change the page name."
    e "[TRADUCIR: Clicking on the title of the page allows you to start typing to change the page name.]"

#   e "The load screen looks quite similar to the save screen, and lets you load a game from a save slot."
    e "[TRADUCIR: The load screen looks quite similar to the save screen, and lets you load a game from a save slot.]"

#   e "It also lets you load one of the auto-saves that Ren'Py makes for you."
    e "[TRADUCIR: It also lets you load one of the auto-saves that Ren'Py makes for you.]"

#   e "The game menu also has the preferences screen."
    e "[TRADUCIR: The game menu also has the preferences screen.]"

#   e "This screen lets you decide how Ren'Py displays, pick what Ren'Py skips, control text speed and auto-click speed, and adjust sound, music, and voice volumes."
    e "[TRADUCIR: This screen lets you decide how Ren'Py displays, pick what Ren'Py skips, control text speed and auto-click speed, and adjust sound, music, and voice volumes.]"

#   e "The game menu also lets you end the game and return to the main menu, or quit Ren'Py entirely."
    e "[TRADUCIR: The game menu also lets you end the game and return to the main menu, or quit Ren'Py entirely.]"

#   e "While the default game menus look a bit generic, with a little work they can be customized or even entirely replaced, allowing you to create menus as unique as your game."
    e "[TRADUCIR: While the default game menus look a bit generic, with a little work they can be customized or even entirely replaced, allowing you to create menus as unique as your game.]"

#   e "While inside the game, there are a few more things you can do."
    e "[TRADUCIR: While inside the game, there are a few more things you can do.]"

#   e "When I'm liking a visual novel, I want to see all the endings. Ren'Py's skip function lets me easily do this, by skipping text that I've already seen."
    e "[TRADUCIR: When I'm liking a visual novel, I want to see all the endings. Ren'Py's skip function lets me easily do this, by skipping text that I've already seen.]"

#   e "I can skip a few lines by holding down Control, or I can toggle skip mode by clicking the skip button at the bottom of the screen."
    e "[TRADUCIR: I can skip a few lines by holding down Control, or I can toggle skip mode by clicking the skip button at the bottom of the screen.]"

#   e "By default, we only skip read text, so this won't do anything the first time through the game."
    e "[TRADUCIR: By default, we only skip read text, so this won't do anything the first time through the game.]"

#   e "Clicking the auto button toggles auto-forward mode, which makes the game advance without you clicking."
    e "[TRADUCIR: Clicking the auto button toggles auto-forward mode, which makes the game advance without you clicking.]"

#   e "The Q.Save and Q.Load buttons provide a single-click way to make a save, and a fast way to load that save again."
    e "[TRADUCIR: The Q.Save and Q.Load buttons provide a single-click way to make a save, and a fast way to load that save again.]"

#   e "Pressing the 's' key saves a screenshot to disk, so I can upload pictures of the game to websites like {a=https://www.renpy.org}renpy.org{/a}."
    e "[TRADUCIR: Pressing the 's' key saves a screenshot to disk, so I can upload pictures of the game to websites like {a=https://www.renpy.org}renpy.org{/a}.]"

#   e "The history button displays a history of read text - but you can also use rollback, which is usually better."
    e "[TRADUCIR: The history button displays a history of read text - but you can also use rollback, which is usually better.]"

#   e "Would you like to hear about rollback?"
    e "[TRADUCIR: Would you like to hear about rollback?]"

#   "Yes."
    "[TRADUCIR: Yes.]"

#   "No."
    "[TRADUCIR: No.]"

#   e "You can invoke a rollback by clicking the 'Back' button, scrolling the mouse wheel up, or by pushing the page up key. That'll bring you back to the previous screen."
    e "[TRADUCIR: You can invoke a rollback by clicking the 'Back' button, scrolling the mouse wheel up, or by pushing the page up key. That'll bring you back to the previous screen.]"

#   e "While at a previous screen, you can roll forward by scrolling the mouse wheel down, or pushing the page down key."
    e "[TRADUCIR: While at a previous screen, you can roll forward by scrolling the mouse wheel down, or pushing the page down key.]"

#   e "Rolling forward through a menu will make the same choice you did last time. But you don't have to do that - Ren'Py's rollback system allows you to make a different choice."
    e "[TRADUCIR: Rolling forward through a menu will make the same choice you did last time. But you don't have to do that - Ren'Py's rollback system allows you to make a different choice.]"

#   e "You can try it by rolling back through the last menu, and saying 'No'."
    e "[TRADUCIR: You can try it by rolling back through the last menu, and saying 'No'.]"

#   e "Click back a few times, press page up, or scroll up the mouse wheel."
    e "[TRADUCIR: Click back a few times, press page up, or scroll up the mouse wheel.]"

#   e "Well, are you going to try it?"
    e "[TRADUCIR: Well, are you going to try it?]"

#   e "Your loss."
    e "[TRADUCIR: Your loss.]"

#   e "Moving on."
    e "[TRADUCIR: Moving on.]"

#   e "By allowing Ren'Py to take care of out-of-game issues like loading and saving, you can focus on making your game, while still giving players the experience they've come to expect when playing visual novels."
    e "[TRADUCIR: By allowing Ren'Py to take care of out-of-game issues like loading and saving, you can focus on making your game, while still giving players the experience they've come to expect when playing visual novels.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\tutorial_quickstart.rpy DIALOGOS: 158

#   define l = Character(_( "Lucy"
    define l = Character(_( "[TRADUCIR: Lucy]"

#   default name = "Player"
    default name = "[TRADUCIR: Player]"

#   e "When you're ready to use Ren'Py to create your visual novel, the first step is to create a new project."
    e "[TRADUCIR: When you're ready to use Ren'Py to create your visual novel, the first step is to create a new project.]"

#   e "You can create a new project by clicking 'Create New Project' on the front screen of the launcher."
    e "[TRADUCIR: You can create a new project by clicking 'Create New Project' on the front screen of the launcher.]"

#   e "If this is your first time using Ren'Py, it'll ask you for the place you want to keep your projects. The best place is always somewhere that's frequently backed up."
    e "[TRADUCIR: If this is your first time using Ren'Py, it'll ask you for the place you want to keep your projects. The best place is always somewhere that's frequently backed up.]"

#   e "After that, Ren'Py will ask for a name for your project. You'll have to stick to English letters and numbers, as zip files can't handle anything more than that."
    e "[TRADUCIR: After that, Ren'Py will ask for a name for your project. You'll have to stick to English letters and numbers, as zip files can't handle anything more than that.]"

#   e "The next thing Ren'Py will ask for is the resolution the visual novel will run at. This controls how large or small you'll have to make your game's artwork."
    e "[TRADUCIR: The next thing Ren'Py will ask for is the resolution the visual novel will run at. This controls how large or small you'll have to make your game's artwork.]"

#   e "Finally, Ren'Py will ask you to select a color scheme. You can change this after the game has been created, so just pick a color that's pleasing."
    e "[TRADUCIR: Finally, Ren'Py will ask you to select a color scheme. You can change this after the game has been created, so just pick a color that's pleasing.]"

#   e "Once that's done, Ren'Py will work for a bit and return you to the main menu with the new project selected. Now, when you click Launch, Ren'Py will start your new game."
    e "[TRADUCIR: Once that's done, Ren'Py will work for a bit and return you to the main menu with the new project selected. Now, when you click Launch, Ren'Py will start your new game.]"

#   e "To get back here, you can choose 'Tutorial' to switch to this tutorial game."
    e "[TRADUCIR: To get back here, you can choose 'Tutorial' to switch to this tutorial game.]"

#   e "You'll also need to edit the games script to make changes. To do that, click 'script.rpy' on the front page of the launcher."
    e "[TRADUCIR: You'll also need to edit the games script to make changes. To do that, click 'script.rpy' on the front page of the launcher.]"

#   e "If it's your first time doing so, Ren'Py will ask you to select a text editor. Atom might be a safe choice, but read the descriptions to be sure."
    e "[TRADUCIR: If it's your first time doing so, Ren'Py will ask you to select a text editor. Atom might be a safe choice, but read the descriptions to be sure.]"

#   e "After the text editor is downloaded, the script will open up and you can start to change what characters are saying."
    e "[TRADUCIR: After the text editor is downloaded, the script will open up and you can start to change what characters are saying.]"

#   e "Probably the most common thing a creator does with Ren'Py is to write dialogue for the player to read."
    e "[TRADUCIR: Probably the most common thing a creator does with Ren'Py is to write dialogue for the player to read.]"

#   e "But before I can show you how to write dialogue, let me show you how we present script examples."
    e "[TRADUCIR: But before I can show you how to write dialogue, let me show you how we present script examples.]"

#   "Eileen"
    "[TRADUCIR: Eileen]"

#   "Eileen"
    "[TRADUCIR: Eileen]"

#   "Eileen"
    "[TRADUCIR: Eileen]"

#   e "Let's see the simplest possible Ren'Py game."
    e "[TRADUCIR: Let's see the simplest possible Ren'Py game.]"

#   "Wow, It's really really dark in here."
    "[TRADUCIR: Wow, It's really really dark in here.]"

#   "Lucy"
    "[TRADUCIR: Lucy]"

#   e "I'll show you the script of that example."
    e "[TRADUCIR: I'll show you the script of that example.]"

#   e "This script demonstrates two kinds of Ren'Py statements, labels and say statements."
    e "[TRADUCIR: This script demonstrates two kinds of Ren'Py statements, labels and say statements.]"

#   e "The first line is a label statement. The label statement is used to give a name to a place in the program."
    e "[TRADUCIR: The first line is a label statement. The label statement is used to give a name to a place in the program.]"

#   e "In this case, we're naming a place \"
    e "[TRADUCIR: In this case, we're naming a place \]"

#   e "The next line is a simple say statement. It consists of a string beginning with a double-quote, and ending at the next double-quote."
    e "[TRADUCIR: The next line is a simple say statement. It consists of a string beginning with a double-quote, and ending at the next double-quote.]"

#   e "Special characters in strings can be escaped with a backslash. To include \"
    e "[TRADUCIR: Special characters in strings can be escaped with a backslash. To include \]"

#   "Wow, It's really really dark in here."
    "[TRADUCIR: Wow, It's really really dark in here.]"

#   e "When Ren'Py sees a single string on a line by itself, it uses the narrator to say that string. So a single string can be used to express a character's thoughts."
    e "[TRADUCIR: When Ren'Py sees a single string on a line by itself, it uses the narrator to say that string. So a single string can be used to express a character's thoughts.]"

#   "Lucy"
    "[TRADUCIR: Lucy]"

#   e "When we have two strings separated by a space, the first is used as the character's name, and the second is what the character is saying."
    e "[TRADUCIR: When we have two strings separated by a space, the first is used as the character's name, and the second is what the character is saying.]"

#   e "This two-argument form of the say statement is used for dialogue, where a character is speaking out loud."
    e "[TRADUCIR: This two-argument form of the say statement is used for dialogue, where a character is speaking out loud.]"

#   e "If you'd like, you can run this game yourself by erasing everything in your project's script.rpy file, and replacing it with the code in the box above."
    e "[TRADUCIR: If you'd like, you can run this game yourself by erasing everything in your project's script.rpy file, and replacing it with the code in the box above.]"

#   e "Be sure to preserve the spacing before lines. That's known as indentation, and it's used to help Ren'Py group lines of script into blocks."
    e "[TRADUCIR: Be sure to preserve the spacing before lines. That's known as indentation, and it's used to help Ren'Py group lines of script into blocks.]"

#   e "Using a string for a character's name is inconvenient, for two reasons."
    e "[TRADUCIR: Using a string for a character's name is inconvenient, for two reasons.]"

#   e "The first is that's it's a bit verbose. While typing \"
    e "[TRADUCIR: The first is that's it's a bit verbose. While typing \]"

#   e "The second is that it doesn't leave any place to put styling, which can change the look of a character."
    e "[TRADUCIR: The second is that it doesn't leave any place to put styling, which can change the look of a character.]"

#   e "To solve these problems, Ren'Py lets you define Characters."
    e "[TRADUCIR: To solve these problems, Ren'Py lets you define Characters.]"

#   e "Here's an example Character definition. It begins with the word \"
    e "[TRADUCIR: Here's an example Character definition. It begins with the word \]"

#   e "Define is followed by a short name for the character, like \"
    e "[TRADUCIR: Define is followed by a short name for the character, like \]"

#   e "This is followed by an equals sign, and the thing that we're defining. In this case, it's a Character."
    e "[TRADUCIR: This is followed by an equals sign, and the thing that we're defining. In this case, it's a Character.]"

#   e "On the first line, the character's name is given to be \"
    e "[TRADUCIR: On the first line, the character's name is given to be \]"

#   e "These short names are case-sensitive. Capital L is a different name from lower-case l, so you'll need to be careful about that."
    e "[TRADUCIR: These short names are case-sensitive. Capital L is a different name from lower-case l, so you'll need to be careful about that.]"

#   e "Now that we have a character defined, we can use it to say dialogue."
    e "[TRADUCIR: Now that we have a character defined, we can use it to say dialogue.]"

#   l "Why are you trying to put words into my mouth? And who are you calling \"
    l "[TRADUCIR: Why are you trying to put words into my mouth? And who are you calling \]"

#   l "What's more, what are you going to do about the Grue problem? Are you just going to leave me here?"
    l "[TRADUCIR: What's more, what are you going to do about the Grue problem? Are you just going to leave me here?]"

#   e "Here's the full game, including the two new lines of dialogue, both of which use the Character we defined to say dialogue."
    e "[TRADUCIR: Here's the full game, including the two new lines of dialogue, both of which use the Character we defined to say dialogue.]"

#   e "The one-argument form of the say statement is unchanged, but in the two-argument form, instead of the first string we can use a short name."
    e "[TRADUCIR: The one-argument form of the say statement is unchanged, but in the two-argument form, instead of the first string we can use a short name.]"

#   e "When this say statement is run, Ren'Py will look up the short name, which is really a Python variable. It will then use the associated Character to show the dialogue."
    e "[TRADUCIR: When this say statement is run, Ren'Py will look up the short name, which is really a Python variable. It will then use the associated Character to show the dialogue.]"

#   e "The Character object controls who is speaking, the color of their name, and many other properties of the dialogue."
    e "[TRADUCIR: The Character object controls who is speaking, the color of their name, and many other properties of the dialogue.]"

#   e "Since the bulk of a visual novel is dialogue, we've tried to make it as easy to write as possible."
    e "[TRADUCIR: Since the bulk of a visual novel is dialogue, we've tried to make it as easy to write as possible.]"

#   e "Hopefully, by allowing the use of short names for characters, we've succeeded."
    e "[TRADUCIR: Hopefully, by allowing the use of short names for characters, we've succeeded.]"

#   e "A visual novel isn't much without images. So let's add some images to our little game."
    e "[TRADUCIR: A visual novel isn't much without images. So let's add some images to our little game.]"

#   e "Before we can show images, we must first choose image names, then place the image files into the images directory."
    e "[TRADUCIR: Before we can show images, we must first choose image names, then place the image files into the images directory.]"

#   e "An image name is something like 'bg cave' or 'lucy happy', with one or more parts separated by spaces."
    e "[TRADUCIR: An image name is something like 'bg cave' or 'lucy happy', with one or more parts separated by spaces.]"

#   e "Each part should start with a lower-case letter, and then contain lower-case letters, numbers, and underscores."
    e "[TRADUCIR: Each part should start with a lower-case letter, and then contain lower-case letters, numbers, and underscores.]"

#   e "The first part of an image is called the tag. For 'bg cave' the tag is 'bg', while for 'lucy happy' the tag is 'lucy'."
    e "[TRADUCIR: The first part of an image is called the tag. For 'bg cave' the tag is 'bg', while for 'lucy happy' the tag is 'lucy'.]"

#   e "You can open the images directory by clicking the appropriate button in the Ren'Py launcher."
    e "[TRADUCIR: You can open the images directory by clicking the appropriate button in the Ren'Py launcher.]"

#   e "The files in the images directory should have the same name as the image, followed by an extension like .jpg, .png, or .webp."
    e "[TRADUCIR: The files in the images directory should have the same name as the image, followed by an extension like .jpg, .png, or .webp.]"

#   e "Our example uses 'bg cave.jpg', 'lucy happy.png', and 'lucy mad.png'."
    e "[TRADUCIR: Our example uses 'bg cave.jpg', 'lucy happy.png', and 'lucy mad.png'.]"

#   e "Let's see what those look like in the game."
    e "[TRADUCIR: Let's see what those look like in the game.]"

#   l "Now that the lights are on, we don't have to worry about Grues anymore."
    l "[TRADUCIR: Now that the lights are on, we don't have to worry about Grues anymore.]"

#   l "But what's the deal with me being in a cave? Eileen gets to be out in the sun, and I'm stuck here!"
    l "[TRADUCIR: But what's the deal with me being in a cave? Eileen gets to be out in the sun, and I'm stuck here!]"

#   e "Here's the script for that scene. Notice how it includes two new statements, the scene and show statement."
    e "[TRADUCIR: Here's the script for that scene. Notice how it includes two new statements, the scene and show statement.]"

#   e "The scene statement clears the screen, and then adds a background image."
    e "[TRADUCIR: The scene statement clears the screen, and then adds a background image.]"

#   e "The show statement adds a new image on top of all the other images on the screen."
    e "[TRADUCIR: The show statement adds a new image on top of all the other images on the screen.]"

#   e "If there is already an image with the same tag, the new image is used to replace the old one."
    e "[TRADUCIR: If there is already an image with the same tag, the new image is used to replace the old one.]"

#   e "Changes to the list of shown images take place instantly, so in the example, the user won't see the background by itself."
    e "[TRADUCIR: Changes to the list of shown images take place instantly, so in the example, the user won't see the background by itself.]"

#   e "The second show statement has an at clause, which gives a location on the screen. Common locations are left, right, and center, but you can define many more."
    e "[TRADUCIR: The second show statement has an at clause, which gives a location on the screen. Common locations are left, right, and center, but you can define many more.]"

#   e "In this example, we show an image named logo base, and we show it at a creator-defined position, rightish."
    e "[TRADUCIR: In this example, we show an image named logo base, and we show it at a creator-defined position, rightish.]"

#   e "We also specify that it should be shown behind another image, in this case eileen. That's me."
    e "[TRADUCIR: We also specify that it should be shown behind another image, in this case eileen. That's me.]"

#   e "Finally, there's the hide statement, which hides the image with the given tag."
    e "[TRADUCIR: Finally, there's the hide statement, which hides the image with the given tag.]"

#   e "Since the show statement replaces an image, and the scene statement clears the scene, it's pretty rare to hide an image."
    e "[TRADUCIR: Since the show statement replaces an image, and the scene statement clears the scene, it's pretty rare to hide an image.]"

#   e "The main use is for when a character or prop leaves before the scene is over."
    e "[TRADUCIR: The main use is for when a character or prop leaves before the scene is over.]"

#   e "When the standard positions that come with Ren'Py aren't enough for you, you can create your own. Here, I'll show you the easy way to do it."
    e "[TRADUCIR: When the standard positions that come with Ren'Py aren't enough for you, you can create your own. Here, I'll show you the easy way to do it.]"

#   e "The first way to do it is to show an image followed by a colon. Then indented on the next couple of lines are the xalign and yalign transform properties."
    e "[TRADUCIR: The first way to do it is to show an image followed by a colon. Then indented on the next couple of lines are the xalign and yalign transform properties.]"

#   e "Each of the transform properties is a name followed by a value. For xalign and yalign, the values are numbers."
    e "[TRADUCIR: Each of the transform properties is a name followed by a value. For xalign and yalign, the values are numbers.]"

#   e "The xalign transform property is the important one, as it controls where the image is placed horizontally on the screen."
    e "[TRADUCIR: The xalign transform property is the important one, as it controls where the image is placed horizontally on the screen.]"

#   e "An xalign of 0.0 is the left side."
    e "[TRADUCIR: An xalign of 0.0 is the left side.]"

#   e "0.5 is the center."
    e "[TRADUCIR: 0.5 is the center.]"

#   e "And 1.0 is the right. The decimal place is important and has to be there. Just 1 by itself won't work the same."
    e "[TRADUCIR: And 1.0 is the right. The decimal place is important and has to be there. Just 1 by itself won't work the same.]"

#   e "Of course, you can pick any position in between."
    e "[TRADUCIR: Of course, you can pick any position in between.]"

#   e "The yalign property is the same way, with 0.0 being the top of the screen and 1.0 being the bottom. Since most sprites stick to the bottom, it's almost always 1.0."
    e "[TRADUCIR: The yalign property is the same way, with 0.0 being the top of the screen and 1.0 being the bottom. Since most sprites stick to the bottom, it's almost always 1.0.]"

#   e "While being able to write positions like this is useful, having to repeatedly do so isn't. So Ren'Py lets you define a transform once, and reuse it."
    e "[TRADUCIR: While being able to write positions like this is useful, having to repeatedly do so isn't. So Ren'Py lets you define a transform once, and reuse it.]"

#   e "Usually transforms are defined at the top of a file, right after the characters. But it doesn't matter to Ren'Py where you define them."
    e "[TRADUCIR: Usually transforms are defined at the top of a file, right after the characters. But it doesn't matter to Ren'Py where you define them.]"

#   e "The transform is given a name, slightleft, and then the xalign and yalign properties."
    e "[TRADUCIR: The transform is given a name, slightleft, and then the xalign and yalign properties.]"

#   e "Once a transform has been defined, you can use it in the at clause of the show statement."
    e "[TRADUCIR: Once a transform has been defined, you can use it in the at clause of the show statement.]"

#   e "Transforms are sticky. If you replace an image without using a transform, Ren'Py will keep the same transforms it had been using."
    e "[TRADUCIR: Transforms are sticky. If you replace an image without using a transform, Ren'Py will keep the same transforms it had been using.]"

#   e "Of course, there's a lot more to transforms than this. If you want to learn more, you can read the sections on Position Properties, Transforms and Animation, and Transform Properties."
    e "[TRADUCIR: Of course, there's a lot more to transforms than this. If you want to learn more, you can read the sections on Position Properties, Transforms and Animation, and Transform Properties.]"

#   e "But for many visual novels, xalign and yalign are the only properties that matter."
    e "[TRADUCIR: But for many visual novels, xalign and yalign are the only properties that matter.]"

#   e "It can be somewhat jarring for the game to jump from place to place."
    e "[TRADUCIR: It can be somewhat jarring for the game to jump from place to place.]"

#   e "To help take some of edge off a change in scene, Ren'Py supports the use of transitions. Let's try that scene change again, but this time we'll use transitions."
    e "[TRADUCIR: To help take some of edge off a change in scene, Ren'Py supports the use of transitions. Let's try that scene change again, but this time we'll use transitions.]"

#   e "That's much smoother. Here's some example code showing how we include transitions in our game."
    e "[TRADUCIR: That's much smoother. Here's some example code showing how we include transitions in our game.]"

#   e "It uses the with statement. The with statement causes the scene to transition from the last things shown to the things currently being shown."
    e "[TRADUCIR: It uses the with statement. The with statement causes the scene to transition from the last things shown to the things currently being shown.]"

#   e "It takes a transition as an argument. In this case, we're using the Dissolve transition. This transition takes as an argument the amount of time the dissolve should take."
    e "[TRADUCIR: It takes a transition as an argument. In this case, we're using the Dissolve transition. This transition takes as an argument the amount of time the dissolve should take.]"

#   e "In this case, each transition takes half a second."
    e "[TRADUCIR: In this case, each transition takes half a second.]"

#   e "We can define a short name for a transition, using the define statement. Here, we're defining slowdissolve to be a dissolve that takes a whole second."
    e "[TRADUCIR: We can define a short name for a transition, using the define statement. Here, we're defining slowdissolve to be a dissolve that takes a whole second.]"

#   e "Once a transition has been given a short name, we can use it in our game."
    e "[TRADUCIR: Once a transition has been given a short name, we can use it in our game.]"

#   e "Ren'Py defines some transitions for you, like dissolve, fade, and move. For more complex or customized transitions, you'll have to define your own."
    e "[TRADUCIR: Ren'Py defines some transitions for you, like dissolve, fade, and move. For more complex or customized transitions, you'll have to define your own.]"

#   e "If you're interested, check out the Transitions Gallery section of this tutorial."
    e "[TRADUCIR: If you're interested, check out the Transitions Gallery section of this tutorial.]"

#   e "Another important part of a visual novel or simulation game is the soundtrack."
    e "[TRADUCIR: Another important part of a visual novel or simulation game is the soundtrack.]"

#   e "Ren'Py breaks sound up into channels. The channel a sound is played on determines if the sound loops, and if it is saved and restored with the game."
    e "[TRADUCIR: Ren'Py breaks sound up into channels. The channel a sound is played on determines if the sound loops, and if it is saved and restored with the game.]"

#   e "When a sound is played on the music channel, it is looped, and it is saved when the game is saved."
    e "[TRADUCIR: When a sound is played on the music channel, it is looped, and it is saved when the game is saved.]"

#   e "When the channel named sound is used, the sound is played once and then stopped. It isn't saved."
    e "[TRADUCIR: When the channel named sound is used, the sound is played once and then stopped. It isn't saved.]"

#   e "The sounds themselves are stored in audio files. Ren'Py supports the Opus, Ogg Vorbis, and mp3 formats."
    e "[TRADUCIR: The sounds themselves are stored in audio files. Ren'Py supports the Opus, Ogg Vorbis, and mp3 formats.]"

#   e "Let's check out some of the commands that can affect the music channel."
    e "[TRADUCIR: Let's check out some of the commands that can affect the music channel.]"

#   play music "sunflower-slow-drag.ogg"
    play music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "The play music command replaces the currently playing music, and replaces it with the named filename."
    e "[TRADUCIR: The play music command replaces the currently playing music, and replaces it with the named filename.]"

#   e "If you specify the currently-playing song, it will restart it."
    e "[TRADUCIR: If you specify the currently-playing song, it will restart it.]"

#   e "If the optional fadeout clause is given, it will fade out the currently playing music before starting the new music."
    e "[TRADUCIR: If the optional fadeout clause is given, it will fade out the currently playing music before starting the new music.]"

#   queue music "sunflower-slow-drag.ogg"
    queue music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "The queue statement also adds music to the named channel, but it waits until the currently-playing song is finished before playing the new music."
    e "[TRADUCIR: The queue statement also adds music to the named channel, but it waits until the currently-playing song is finished before playing the new music.]"

#   e "The third statement is the stop statement. It stops the music playing on a channel. It too takes the fadeout clause."
    e "[TRADUCIR: The third statement is the stop statement. It stops the music playing on a channel. It too takes the fadeout clause.]"

#   play sound "tower_clock.ogg"
    play sound "[TRADUCIR: tower_clock.ogg]"

#   e "Unlike the music channel, playing a sound on the sound channel causes it to play only once."
    e "[TRADUCIR: Unlike the music channel, playing a sound on the sound channel causes it to play only once.]"

#   queue sound "tower_clock.ogg"
    queue sound "[TRADUCIR: tower_clock.ogg]"

#   queue sound "tower_clock.ogg"
    queue sound "[TRADUCIR: tower_clock.ogg]"

#   queue sound "tower_clock.ogg"
    queue sound "[TRADUCIR: tower_clock.ogg]"

#   e "You can queue up multiple sounds on the sound channel, but the sounds will only play one at a time."
    e "[TRADUCIR: You can queue up multiple sounds on the sound channel, but the sounds will only play one at a time.]"

#   play music "sunflower-slow-drag.ogg"
    play music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "Ren'Py has separate mixers for sound, music, and voices, so the player can adjust them as they like."
    e "[TRADUCIR: Ren'Py has separate mixers for sound, music, and voices, so the player can adjust them as they like.]"

#   e "Many visual novels require the player to make choices from in-game menus. These choices can add some challenge to the game, or adjust it to the player's preferences."
    e "[TRADUCIR: Many visual novels require the player to make choices from in-game menus. These choices can add some challenge to the game, or adjust it to the player's preferences.]"

#   e "Do you like to play visual novels with choices in them?"
    e "[TRADUCIR: Do you like to play visual novels with choices in them?]"

#   "Yes, I do."
    "[TRADUCIR: Yes, I do.]"

#   "No, I don't."
    "[TRADUCIR: No, I don't.]"

#   e "While creating a multi-path visual novel can be a bit more work, it can yield a unique experience."
    e "[TRADUCIR: While creating a multi-path visual novel can be a bit more work, it can yield a unique experience.]"

#   e "Games without menus are called kinetic novels, and there are dozens of them available to play."
    e "[TRADUCIR: Games without menus are called kinetic novels, and there are dozens of them available to play.]"

#   e "Here, you can see the code for that menu. If you scroll down, you can see the code we run after the menu."
    e "[TRADUCIR: Here, you can see the code for that menu. If you scroll down, you can see the code we run after the menu.]"

#   e "Menus are introduced by the menu statement. The menu statement takes an indented block, in which there can be one line of dialogue and multiple choices."
    e "[TRADUCIR: Menus are introduced by the menu statement. The menu statement takes an indented block, in which there can be one line of dialogue and multiple choices.]"

#   e "Each choice must end with a colon, as each choice has its own block of Ren'Py code, that is run when that choice is selected."
    e "[TRADUCIR: Each choice must end with a colon, as each choice has its own block of Ren'Py code, that is run when that choice is selected.]"

#   e "Here, each block jumps to a label. While you could put small amounts of Ren'Py code inside a menu label, it's probably good practice to usually jump to a bigger block of code."
    e "[TRADUCIR: Here, each block jumps to a label. While you could put small amounts of Ren'Py code inside a menu label, it's probably good practice to usually jump to a bigger block of code.]"

#   e "Scrolling down past the menu, you can see the labels that the menu jumps to. There are three labels here, named choice1_yes, choice1_no, and choice1_done."
    e "[TRADUCIR: Scrolling down past the menu, you can see the labels that the menu jumps to. There are three labels here, named choice1_yes, choice1_no, and choice1_done.]"

#   e "When the first menu choice is picked, we jump to the choice1_yes, which runs two lines of script before jumping to choice1_done."
    e "[TRADUCIR: When the first menu choice is picked, we jump to the choice1_yes, which runs two lines of script before jumping to choice1_done.]"

#   e "Similarly, picking the second choice jumps us to choice1_no, which also runs two lines of script."
    e "[TRADUCIR: Similarly, picking the second choice jumps us to choice1_no, which also runs two lines of script.]"

#   e "The lines beginning with the dollar sign are lines of python code, which are used to set a flag based on the user's choice."
    e "[TRADUCIR: The lines beginning with the dollar sign are lines of python code, which are used to set a flag based on the user's choice.]"

#   e "The flag is named menu_flag, and it's set to True or False based on the user's choice. The if statement can be used to test a flag, so the game can remember the user's choices."
    e "[TRADUCIR: The flag is named menu_flag, and it's set to True or False based on the user's choice. The if statement can be used to test a flag, so the game can remember the user's choices.]"

#   e "For example, I remember that you plan to use menus in your game."
    e "[TRADUCIR: For example, I remember that you plan to use menus in your game.]"

#   e "For example, I remember that you're planning to make a kinetic novel, without menus."
    e "[TRADUCIR: For example, I remember that you're planning to make a kinetic novel, without menus.]"

#   e "Here's an example that shows how we can test a flag, and do different things if it is true or not."
    e "[TRADUCIR: Here's an example that shows how we can test a flag, and do different things if it is true or not.]"

#   e "Finally, this shows how you can show dialogue and menus at the same time. Understand?"
    e "[TRADUCIR: Finally, this shows how you can show dialogue and menus at the same time. Understand?]"

#   "Yes."
    "[TRADUCIR: Yes.]"

#   e "Great."
    e "[TRADUCIR: Great.]"

#   "No."
    "[TRADUCIR: No.]"

#   e "If you look at the example, before the first choice, there's an indented say statement."
    e "[TRADUCIR: If you look at the example, before the first choice, there's an indented say statement.]"

#   e "Although we won't demonstrate it here, Ren'Py supports making decisions based on a combinations of points, flags, and other factors."
    e "[TRADUCIR: Although we won't demonstrate it here, Ren'Py supports making decisions based on a combinations of points, flags, and other factors.]"

#   e "One of Ren'Py's big advantages is the flexibility using a scripting language like Python provides us. It lets us easily scale from kinetic novels to complex simulation games."
    e "[TRADUCIR: One of Ren'Py's big advantages is the flexibility using a scripting language like Python provides us. It lets us easily scale from kinetic novels to complex simulation games.]"

#   define g = Character( "[name]"
    define g = Character( "[TRADUCIR: [name]]"

#   e "Some games might prompt the player for input."
    e "[TRADUCIR: Some games might prompt the player for input.]"

#   name = renpy.input(_( "What's your name?"
    name = renpy.input(_( "[TRADUCIR: What's your name?]"

#   name = name.strip() or __( "Guy Shy"
    name = name.strip() or __( "[TRADUCIR: Guy Shy]"

#   if name.lower() == "shiro"
    if name.lower() == "[TRADUCIR: shiro]"

#   renpy.run(OpenURL( "https://shiro-heartcat.tumblr.com/"
    renpy.run(OpenURL( "[TRADUCIR: https://shiro-heartcat.tumblr.com/]"

#   e "That's done with Python, and especially the renpy.input function. The first line of this example prompts the player for some texts, and sticks it in the name variable."
    e "[TRADUCIR: That's done with Python, and especially the renpy.input function. The first line of this example prompts the player for some texts, and sticks it in the name variable.]"

#   e "Often times, you'll want to clean the name up before you use it. The last line does that, by calling the strip method to remove whitespace, and replacing the name with a default if it's missing."
    e "[TRADUCIR: Often times, you'll want to clean the name up before you use it. The last line does that, by calling the strip method to remove whitespace, and replacing the name with a default if it's missing.]"

#   e "To interpolate a variable, write it in square brackets. Isn't that right, [name]?"
    e "[TRADUCIR: To interpolate a variable, write it in square brackets. Isn't that right, [name]?]"

#   e "Variable names can also be shown in character names. To do that, just include the variable in square brackets in the character's name. Got it?"
    e "[TRADUCIR: Variable names can also be shown in character names. To do that, just include the variable in square brackets in the character's name. Got it?]"

#   g "I think I do."
    g "[TRADUCIR: I think I do.]"

#   e "Variable interpolation also works with other variables. Here, the answer is [answer] and the flag is [flag]."
    e "[TRADUCIR: Variable interpolation also works with other variables. Here, the answer is [answer] and the flag is [flag].]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\tutorial_screens.rpy DIALOGOS: 132

#   text "[name!t]"
    text "[TRADUCIR: [name!t]]"

#   text _( "Lv. [lv]"
    text _( "[TRADUCIR: Lv. [lv]]"

#   text _( "HP"
    text _( "[TRADUCIR: HP]"

#   text "[hp]/[hp_max]"
    text "[TRADUCIR: [hp]/[hp_max]]"

#   use single_stat(_( "Player"
    use single_stat(_( "[TRADUCIR: Player]"

#   use single_stat(_( "Eileen"
    use single_stat(_( "[TRADUCIR: Eileen]"

#   style_prefix "stat"
    style_prefix "[TRADUCIR: stat]"

#   text _( "Strength"
    text _( "[TRADUCIR: Strength]"

#   text _( "Intelligence"
    text _( "[TRADUCIR: Intelligence]"

#   text _( "Moxie"
    text _( "[TRADUCIR: Moxie]"

#   text _( "Chutzpah"
    text _( "[TRADUCIR: Chutzpah]"

#   textbutton _( "Done"
    textbutton _( "[TRADUCIR: Done]"

#   e "Screens are the most powerful part of Ren'Py. Screens let you customize the out-of-game interface, and create new in-game interface components."
    e "[TRADUCIR: Screens are the most powerful part of Ren'Py. Screens let you customize the out-of-game interface, and create new in-game interface components.]"

#   e "What would you like to know about screens?"
    e "[TRADUCIR: What would you like to know about screens?]"

#   "What screens can do."
    "[TRADUCIR: What screens can do.]"

#   "How to show screens."
    "[TRADUCIR: How to show screens.]"

#   "Passing parameters to screens."
    "[TRADUCIR: Passing parameters to screens.]"

#   "Screen properties."
    "[TRADUCIR: Screen properties.]"

#   "Special screen statements."
    "[TRADUCIR: Special screen statements.]"

#   "Using other screens."
    "[TRADUCIR: Using other screens.]"

#   "That's it."
    "[TRADUCIR: That's it.]"

#   e "Screens are how we create the user interface in Ren'Py. With the exception of images and transitions, everything you see comes from a screen."
    e "[TRADUCIR: Screens are how we create the user interface in Ren'Py. With the exception of images and transitions, everything you see comes from a screen.]"

#   e "When I'm speaking to you, I'm using the 'say' screen. It's responsible for taking dialogue and presenting it to the player."
    e "[TRADUCIR: When I'm speaking to you, I'm using the 'say' screen. It's responsible for taking dialogue and presenting it to the player.]"

#   e "And when the menu statement displays an in-game choice, the 'choice' screen is used. Got it?"
    e "[TRADUCIR: And when the menu statement displays an in-game choice, the 'choice' screen is used. Got it?]"

#   "Yes."
    "[TRADUCIR: Yes.]"

#   "I do."
    "[TRADUCIR: I do.]"

#   e "Text input uses the 'input' screen, NVL mode uses the 'nvl' screen, and so on."
    e "[TRADUCIR: Text input uses the 'input' screen, NVL mode uses the 'nvl' screen, and so on.]"

#   e "More than one screen can be displayed at once. For example, the buttons at the bottom - Back, History, Skip, and so on - are all displayed by a quick_menu screen that's shown all of the time."
    e "[TRADUCIR: More than one screen can be displayed at once. For example, the buttons at the bottom - Back, History, Skip, and so on - are all displayed by a quick_menu screen that's shown all of the time.]"

#   e "There are a lot of special screens, like 'main_menu', 'load', 'save', and 'preferences'. Rather than list them all here, I'll {a=https://www.renpy.org/doc/html/screen_special.html}send you to the documentation{/a}."
    e "[TRADUCIR: There are a lot of special screens, like 'main_menu', 'load', 'save', and 'preferences'. Rather than list them all here, I'll {a=https://www.renpy.org/doc/html/screen_special.html}send you to the documentation{/a}.]"

#   e "In a newly created project, all these screens live in screens.rpy. You can edit that file in order to change them."
    e "[TRADUCIR: In a newly created project, all these screens live in screens.rpy. You can edit that file in order to change them.]"

#   e "You aren't limited to these screens either. In Ren'Py, you can make your own screens, and use them for your game's interface."
    e "[TRADUCIR: You aren't limited to these screens either. In Ren'Py, you can make your own screens, and use them for your game's interface.]"

#   e "For example, in an RPG like visual novel, a screen can display the player's statistics."
    e "[TRADUCIR: For example, in an RPG like visual novel, a screen can display the player's statistics.]"

#   e "Which reminds me, I should probably heal you."
    e "[TRADUCIR: Which reminds me, I should probably heal you.]"

#   e "Complex screens can be the basis of whole game mechanics. A stats screen like this can be the basis of dating and life-sims."
    e "[TRADUCIR: Complex screens can be the basis of whole game mechanics. A stats screen like this can be the basis of dating and life-sims.]"

#   e "While screens might be complex, they're really just the result of a lot of simple parts working together to make something larger than all of them."
    e "[TRADUCIR: While screens might be complex, they're really just the result of a lot of simple parts working together to make something larger than all of them.]"

#   text _( "This is a screen."
    text _( "[TRADUCIR: This is a screen.]"

#   textbutton _( "Okay"
    textbutton _( "[TRADUCIR: Okay]"

#   e "Here's an example of a very simple screen. The screen statement is used to tell Ren'Py this is a screen, and its name is simple_screen."
    e "[TRADUCIR: Here's an example of a very simple screen. The screen statement is used to tell Ren'Py this is a screen, and its name is simple_screen.]"

#   e "Inside the screen statement, lines introduces displayables such as frame, vbox, text, and textbutton; or properties like action, xalign, and ypos."
    e "[TRADUCIR: Inside the screen statement, lines introduces displayables such as frame, vbox, text, and textbutton; or properties like action, xalign, and ypos.]"

#   e "I'll work from the inside out to describe the statements. But first, I'll show the screen so you can see it in action."
    e "[TRADUCIR: I'll work from the inside out to describe the statements. But first, I'll show the screen so you can see it in action.]"

#   e "The text statement is used to display the text provided."
    e "[TRADUCIR: The text statement is used to display the text provided.]"

#   e "The textbutton statement introduces a button that can be clicked. When the button is clicked, the provided action is run."
    e "[TRADUCIR: The textbutton statement introduces a button that can be clicked. When the button is clicked, the provided action is run.]"

#   e "Both are inside a vbox, which means vertical box, statement - that places the text on top of the button."
    e "[TRADUCIR: Both are inside a vbox, which means vertical box, statement - that places the text on top of the button.]"

#   e "And that is inside a frame that provides the background and borders. The frame has an at property that takes a transform giving its position."
    e "[TRADUCIR: And that is inside a frame that provides the background and borders. The frame has an at property that takes a transform giving its position.]"

#   e "There are a trio of statements that are used to display screens."
    e "[TRADUCIR: There are a trio of statements that are used to display screens.]"

#   e "The first is the show screen statement, which displays a screen and lets Ren'Py keep going."
    e "[TRADUCIR: The first is the show screen statement, which displays a screen and lets Ren'Py keep going.]"

#   e "The screen will stay shown until it is hidden."
    e "[TRADUCIR: The screen will stay shown until it is hidden.]"

#   e "Hiding a screen is done with the hide screen statement."
    e "[TRADUCIR: Hiding a screen is done with the hide screen statement.]"

#   e "The call screen statement stops Ren'Py from executing script until the screen either returns a value, or jumps the script somewhere else."
    e "[TRADUCIR: The call screen statement stops Ren'Py from executing script until the screen either returns a value, or jumps the script somewhere else.]"

#   e "Since we can't display dialogue at the same time, you'll have to click 'Okay' to continue."
    e "[TRADUCIR: Since we can't display dialogue at the same time, you'll have to click 'Okay' to continue.]"

#   e "When a call screen statement ends, the screen is automatically hidden."
    e "[TRADUCIR: When a call screen statement ends, the screen is automatically hidden.]"

#   e "Generally, you use show screen to show overlays that are up all the time, and call screen to show screens the player interacts with for a little while."
    e "[TRADUCIR: Generally, you use show screen to show overlays that are up all the time, and call screen to show screens the player interacts with for a little while.]"

#   text "[message!t]"
    text "[TRADUCIR: [message!t]]"

#   textbutton _( "Okay"
    textbutton _( "[TRADUCIR: Okay]"

#   textbutton _( "Cancel"
    textbutton _( "[TRADUCIR: Cancel]"

#   show screen parameter_screen(_( "Hello, world."
    show screen parameter_screen(_( "[TRADUCIR: Hello, world.]"

#   e "Here's an example of a screen that takes three parameters. The message parameter is a message to show, while the okay and cancel actions are run when the appropriate button is chosen."
    e "[TRADUCIR: Here's an example of a screen that takes three parameters. The message parameter is a message to show, while the okay and cancel actions are run when the appropriate button is chosen.]"

#   e "While the message parameter always has to be supplied, the okay and cancel parameters have default values that are used if no argument is given."
    e "[TRADUCIR: While the message parameter always has to be supplied, the okay and cancel parameters have default values that are used if no argument is given.]"

#   e "Each parameter is a variable that is defined inside the screen. Inside the screen, these variables take priority over those used in the rest of Ren'Py."
    e "[TRADUCIR: Each parameter is a variable that is defined inside the screen. Inside the screen, these variables take priority over those used in the rest of Ren'Py.]"

#   e "When a screen is shown, arguments can be supplied for each of the parameters. Arguments can be given by position or by name."
    e "[TRADUCIR: When a screen is shown, arguments can be supplied for each of the parameters. Arguments can be given by position or by name.]"

#   show screen parameter_screen(_( "Shiro was here."
    show screen parameter_screen(_( "[TRADUCIR: Shiro was here.]"

#   e "Parameters let us change what a screen displays, simply by re-showing it with different arguments."
    e "[TRADUCIR: Parameters let us change what a screen displays, simply by re-showing it with different arguments.]"

#   e "The call screen statement can also take arguments, much like show screen does."
    e "[TRADUCIR: The call screen statement can also take arguments, much like show screen does.]"

#   call screen parameter_screen(_( "Click either button to continue."
    call screen parameter_screen(_( "[TRADUCIR: Click either button to continue.]"

#   e "There are a few properties that can be applied to a screen itself."
    e "[TRADUCIR: There are a few properties that can be applied to a screen itself.]"

#   textbutton _( "Close This Screen"
    textbutton _( "[TRADUCIR: Close This Screen]"

#   action Hide( "modal_example"
    action Hide( "[TRADUCIR: modal_example]"

#   e "When the modal property is true, you can't interact with things beneath the screen. You'll have to click 'Close This Screen' before you can continue."
    e "[TRADUCIR: When the modal property is true, you can't interact with things beneath the screen. You'll have to click 'Close This Screen' before you can continue.]"

#   text _( "A Tag Screen"
    text _( "[TRADUCIR: A Tag Screen]"

#   text _( "B Tag Screen"
    text _( "[TRADUCIR: B Tag Screen]"

#   e "When a screen has the tag property, it's treated like the tag part of an image name. Here, I'm showing a_tag_screen."
    e "[TRADUCIR: When a screen has the tag property, it's treated like the tag part of an image name. Here, I'm showing a_tag_screen.]"

#   e "When I show b_tag_screen, it replaces a_tag_screen."
    e "[TRADUCIR: When I show b_tag_screen, it replaces a_tag_screen.]"

#   e "This is useful in the game and main menus, where you want the load screen to replace the preferences screen. By default, all those screens have tag menu."
    e "[TRADUCIR: This is useful in the game and main menus, where you want the load screen to replace the preferences screen. By default, all those screens have tag menu.]"

#   e "For some reason, tag takes a name, and not an expression. It's too late to change it."
    e "[TRADUCIR: For some reason, tag takes a name, and not an expression. It's too late to change it.]"

#   text "Zorder 100"
    text "[TRADUCIR: Zorder 100]"

#   text "Zorder 0"
    text "[TRADUCIR: Zorder 0]"

#   e "The zorder property controls the order in which screens overlap each other. The larger the zorder number, the closer the screen is to the player."
    e "[TRADUCIR: The zorder property controls the order in which screens overlap each other. The larger the zorder number, the closer the screen is to the player.]"

#   e "By default, a screen has a zorder of 0. When two screens have the same zorder number, the screen that is shown second is closer to the player."
    e "[TRADUCIR: By default, a screen has a zorder of 0. When two screens have the same zorder number, the screen that is shown second is closer to the player.]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   text _( "You're on a small device."
    text _( "[TRADUCIR: You're on a small device.]"

#   text _( "You're not on a small device."
    text _( "[TRADUCIR: You're not on a small device.]"

#   e "The variant property selects a screen based on the properties of the device it's running on."
    e "[TRADUCIR: The variant property selects a screen based on the properties of the device it's running on.]"

#   e "In this example, the first screen will be used for small devices like telephones, and the other screen will be used for tablets and computers."
    e "[TRADUCIR: In this example, the first screen will be used for small devices like telephones, and the other screen will be used for tablets and computers.]"

#   style_prefix "red"
    style_prefix "[TRADUCIR: red]"

#   text _( "This text is red."
    text _( "[TRADUCIR: This text is red.]"

#   background "#440000d9"
    background "[TRADUCIR: #440000d9]"

#   color "#ffc0c0"
    color "[TRADUCIR: #ffc0c0]"

#   e "Finally, the style_prefix property specifies a prefix that's applied to the styles in the screen."
    e "[TRADUCIR: Finally, the style_prefix property specifies a prefix that's applied to the styles in the screen.]"

#   e "When the 'red' prefix is given, the frame gets the 'red_frame' style, and the text gets the 'red_text' style."
    e "[TRADUCIR: When the 'red' prefix is given, the frame gets the 'red_frame' style, and the text gets the 'red_text' style.]"

#   e "This can save a lot of typing when styling screens with many displayables in them."
    e "[TRADUCIR: This can save a lot of typing when styling screens with many displayables in them.]"

#   e "The screen language has a few statements that do things other than show displayables. If you haven't seen the section on {a=jump:warp_screen_displayables}Screen Displayables{/a} yet, you might want to check it out, then come back here."
    e "[TRADUCIR: The screen language has a few statements that do things other than show displayables. If you haven't seen the section on {a=jump:warp_screen_displayables}Screen Displayables{/a} yet, you might want to check it out, then come back here.]"

#   $ message = _( "Hello, World."
    $ message = _( "[TRADUCIR: Hello, World.]"

#   text "[message!t]"
    text "[TRADUCIR: [message!t]]"

#   e "The python statement works just about the same way it does in the script. A single line of Python is introduced with a dollar sign. This line is run each time the screen updates."
    e "[TRADUCIR: The python statement works just about the same way it does in the script. A single line of Python is introduced with a dollar sign. This line is run each time the screen updates.]"

#   message1 = _( "Hello, World."
    message1 = _( "[TRADUCIR: Hello, World.]"

#   message2 = _( "It's good to meet you."
    message2 = _( "[TRADUCIR: It's good to meet you.]"

#   text "[message1!t]"
    text "[TRADUCIR: [message1!t]]"

#   text "[message2!t]"
    text "[TRADUCIR: [message2!t]]"

#   e "Similarly, the python statement introduces an indented block of python statements. But there is one big difference in Python in screens and Python in scripts."
    e "[TRADUCIR: Similarly, the python statement introduces an indented block of python statements. But there is one big difference in Python in screens and Python in scripts.]"

#   e "The Python you use in screens isn't allowed to have side effects. That means that it can't do things like change the value of a variable."
    e "[TRADUCIR: The Python you use in screens isn't allowed to have side effects. That means that it can't do things like change the value of a variable.]"

#   e "The reason for this is that Ren'Py will run a screen, and the Python in it, during screen prediction."
    e "[TRADUCIR: The reason for this is that Ren'Py will run a screen, and the Python in it, during screen prediction.]"

#   text "n = [n]"
    text "[TRADUCIR: n = [n]]"

#   textbutton _( "Increase"
    textbutton _( "[TRADUCIR: Increase]"

#   e "The default statement lets you set the value of a screen variable the first time the screen runs. This value can be changed with the SetScreenVariable and ToggleScreenVariable actions."
    e "[TRADUCIR: The default statement lets you set the value of a screen variable the first time the screen runs. This value can be changed with the SetScreenVariable and ToggleScreenVariable actions.]"

#   e "The default statement differs from the Python statement in that it is only run once. Python runs each time the screen updates, and hence the variable would never change value."
    e "[TRADUCIR: The default statement differs from the Python statement in that it is only run once. Python runs each time the screen updates, and hence the variable would never change value.]"

#   text "n = [n]"
    text "[TRADUCIR: n = [n]]"

#   text "n = [n]"
    text "[TRADUCIR: n = [n]]"

#   textbutton _( "Increase"
    textbutton _( "[TRADUCIR: Increase]"

#   e "The if statement works like it does in script, running one block if the condition is true and another if the condition is false."
    e "[TRADUCIR: The if statement works like it does in script, running one block if the condition is true and another if the condition is false.]"

#   $ landings = [ _( "Earth"
    $ landings = [ _( "[TRADUCIR: Earth]"

#   textbutton "[i!t]"
    textbutton "[TRADUCIR: [i!t]]"

#   e "The for statement takes a list of values, and iterates through them, running the block inside the for loop with the variable bound to each list item."
    e "[TRADUCIR: The for statement takes a list of values, and iterates through them, running the block inside the for loop with the variable bound to each list item.]"

#   text _( "Now press 'a'."
    text _( "[TRADUCIR: Now press 'a'.]"

#   on "show"
    on "[TRADUCIR: show]"

#   key "a"
    key "[TRADUCIR: a]"

#   e "The on and key statements probably only make sense at the top level of the screen."
    e "[TRADUCIR: The on and key statements probably only make sense at the top level of the screen.]"

#   e "The on statement makes the screen run an action when an event occurs. The 'show' event happens when the screen is first shown, and the 'hide' event happens when it is hidden."
    e "[TRADUCIR: The on statement makes the screen run an action when an event occurs. The 'show' event happens when the screen is first shown, and the 'hide' event happens when it is hidden.]"

#   e "The key event runs an event when a key is pressed."
    e "[TRADUCIR: The key event runs an event when a key is pressed.]"

#   e "The screen language use statement lets you include a screen inside another. This can be useful to prevent duplication inside screens."
    e "[TRADUCIR: The screen language use statement lets you include a screen inside another. This can be useful to prevent duplication inside screens.]"

#   text _( "Health"
    text _( "[TRADUCIR: Health]"

#   text _( "Magic"
    text _( "[TRADUCIR: Magic]"

#   e "Take for example this screen, which shows two stat entries. There's already a lot of duplication there, and if we had more stats, there would be more."
    e "[TRADUCIR: Take for example this screen, which shows two stat entries. There's already a lot of duplication there, and if we had more stats, there would be more.]"

#   use stat(_( "Health"
    use stat(_( "[TRADUCIR: Health]"

#   use stat(_( "Magic"
    use stat(_( "[TRADUCIR: Magic]"

#   e "Here, we moved the statements that show the text and bar into a second screen, and the use statement includes that screen in the first one."
    e "[TRADUCIR: Here, we moved the statements that show the text and bar into a second screen, and the use statement includes that screen in the first one.]"

#   e "The name and amount of the stat are passed in as arguments to the screen, just as is done in the call screen statement."
    e "[TRADUCIR: The name and amount of the stat are passed in as arguments to the screen, just as is done in the call screen statement.]"

#   e "By doing it this way, we control the amount of duplication, and can change the stat in one place."
    e "[TRADUCIR: By doing it this way, we control the amount of duplication, and can change the stat in one place.]"

#   text _( "There's not much left to see."
    text _( "[TRADUCIR: There's not much left to see.]"

#   e "The transclude statement goes one step further, by letting the use statement take a block of screen language statements."
    e "[TRADUCIR: The transclude statement goes one step further, by letting the use statement take a block of screen language statements.]"

#   e "When the included screen reaches the transclude statement it is replaced with the block from the use statement."
    e "[TRADUCIR: When the included screen reaches the transclude statement it is replaced with the block from the use statement.]"

#   e "The boilerplate screen is included in the first one, and the text from the first screen is transcluded into the boilerplate screen."
    e "[TRADUCIR: The boilerplate screen is included in the first one, and the text from the first screen is transcluded into the boilerplate screen.]"

#   e "Use and transclude are complex, but very powerful. If you think about it, 'use boilerplate' is only one step removed from writing your own Screen Language statement."
    e "[TRADUCIR: Use and transclude are complex, but very powerful. If you think about it, 'use boilerplate' is only one step removed from writing your own Screen Language statement.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\tutorial_screen_displayables.rpy DIALOGOS: 240

#   e "There are quite a few screen displayables. Here, I'll tell you about some of the most important ones."
    e "[TRADUCIR: There are quite a few screen displayables. Here, I'll tell you about some of the most important ones.]"

#   e "What would you like to know about?"
    e "[TRADUCIR: What would you like to know about?]"

#   "Common properties all displayables share."
    "[TRADUCIR: Common properties all displayables share.]"

#   "Adding images and other displayables."
    "[TRADUCIR: Adding images and other displayables.]"

#   "Text."
    "[TRADUCIR: Text.]"

#   "Boxes and other layouts."
    "[TRADUCIR: Boxes and other layouts.]"

#   "Windows and frames."
    "[TRADUCIR: Windows and frames.]"

#   "Buttons."
    "[TRADUCIR: Buttons.]"

#   "Bars."
    "[TRADUCIR: Bars.]"

#   "Viewports."
    "[TRADUCIR: Viewports.]"

#   "Imagemaps."
    "[TRADUCIR: Imagemaps.]"

#   "That's all for now."
    "[TRADUCIR: That's all for now.]"

#   e "There are a few properties that every screen language displayable shares. Here, I'll demonstrate them for you."
    e "[TRADUCIR: There are a few properties that every screen language displayable shares. Here, I'll demonstrate them for you.]"

#   text _( "This uses position properties."
    text _( "[TRADUCIR: This uses position properties.]"

#   e "First off, every screen language displayable supports the position properties. When the container a displayable is in supports it, you can use properties like align, anchor, pos, and so so on."
    e "[TRADUCIR: First off, every screen language displayable supports the position properties. When the container a displayable is in supports it, you can use properties like align, anchor, pos, and so so on.]"

#   text _( "And the world turned upside down..."
    text _( "[TRADUCIR: And the world turned upside down...]"

#   e "The at property applies a transform to the displayable, the same way the at clause in the show statement does."
    e "[TRADUCIR: The at property applies a transform to the displayable, the same way the at clause in the show statement does.]"

#   e "The id property is mostly used with the say screen, which is used to show dialogue. Outside of the say screen, it isn't used much."
    e "[TRADUCIR: The id property is mostly used with the say screen, which is used to show dialogue. Outside of the say screen, it isn't used much.]"

#   e "It tells Ren'Py which displayables are the background window, 'who' is speaking, and 'what' is being said. This used to apply per-Character styles, and help with auto-forward mode."
    e "[TRADUCIR: It tells Ren'Py which displayables are the background window, 'who' is speaking, and 'what' is being said. This used to apply per-Character styles, and help with auto-forward mode.]"

#   text _( "Flight pressure in tanks."
    text _( "[TRADUCIR: Flight pressure in tanks.]"

#   text _( "On internal power."
    text _( "[TRADUCIR: On internal power.]"

#   text _( "Launch enabled."
    text _( "[TRADUCIR: Launch enabled.]"

#   text _( "Liftoff!"
    text _( "[TRADUCIR: Liftoff!]"

#   color "#c8ffc8"
    color "[TRADUCIR: #c8ffc8]"

#   e "The style property lets you specify the style of a single displayable."
    e "[TRADUCIR: The style property lets you specify the style of a single displayable.]"

#   style_prefix "green"
    style_prefix "[TRADUCIR: green]"

#   text _( "Flight pressure in tanks."
    text _( "[TRADUCIR: Flight pressure in tanks.]"

#   text _( "On internal power."
    text _( "[TRADUCIR: On internal power.]"

#   style_prefix "yellow"
    style_prefix "[TRADUCIR: yellow]"

#   text _( "Launch enabled."
    text _( "[TRADUCIR: Launch enabled.]"

#   text _( "Liftoff!"
    text _( "[TRADUCIR: Liftoff!]"

#   color "#ffffc8"
    color "[TRADUCIR: #ffffc8]"

#   e "The style_prefix property sets the prefix of the style that's used for a displayable and its children."
    e "[TRADUCIR: The style_prefix property sets the prefix of the style that's used for a displayable and its children.]"

#   e "For example, when the style_prefix property is 'green', the vbox has the 'green_vbox' style, and the text in it has the 'green_text' style."
    e "[TRADUCIR: For example, when the style_prefix property is 'green', the vbox has the 'green_vbox' style, and the text in it has the 'green_text' style.]"

#   e "There are a few more properties than these, and you can find the rest in the documentation. But these are the ones you can expect to see in your game, in the default screens."
    e "[TRADUCIR: There are a few more properties than these, and you can find the rest in the documentation. But these are the ones you can expect to see in your game, in the default screens.]"

#   e "Sometimes you'll have a displayable, like an image, that you want to add to a screen."
    e "[TRADUCIR: Sometimes you'll have a displayable, like an image, that you want to add to a screen.]"

#   add "logo base"
    add "[TRADUCIR: logo base]"

#   e "This can be done using the add statement, which adds an image or other displayable to the screen."
    e "[TRADUCIR: This can be done using the add statement, which adds an image or other displayable to the screen.]"

#   e "There are a few ways to refer to the image. If it's in the images directory or defined with the image statement, you can just put the name inside a quoted string."
    e "[TRADUCIR: There are a few ways to refer to the image. If it's in the images directory or defined with the image statement, you can just put the name inside a quoted string.]"

#   add "images/logo base.png"
    add "[TRADUCIR: images/logo base.png]"

#   e "An image can also be referred to by its filename, relative to the game directory."
    e "[TRADUCIR: An image can also be referred to by its filename, relative to the game directory.]"

#   add Solid( "#0000ff"
    add Solid( "[TRADUCIR: #0000ff]"

#   e "Other displayables can also be added using the add statement. Here, we add the Solid displayable, showing a solid block of color."
    e "[TRADUCIR: Other displayables can also be added using the add statement. Here, we add the Solid displayable, showing a solid block of color.]"

#   add "logo base"
    add "[TRADUCIR: logo base]"

#   e "In addition to the displayable, the add statement can be given transform properties. These can place or otherwise transform the displayable being added."
    e "[TRADUCIR: In addition to the displayable, the add statement can be given transform properties. These can place or otherwise transform the displayable being added.]"

#   add "logo base"
    add "[TRADUCIR: logo base]"

#   e "Of course, the add statement can also take the at property, letting you give it a more complex transform."
    e "[TRADUCIR: Of course, the add statement can also take the at property, letting you give it a more complex transform.]"

#   text _( "This is a text displayable."
    text _( "[TRADUCIR: This is a text displayable.]"

#   e "The screen language text statement adds a text displayable to the screen. It takes one argument, the text to be displayed."
    e "[TRADUCIR: The screen language text statement adds a text displayable to the screen. It takes one argument, the text to be displayed.]"

#   e "In addition to the common properties that all displayables take, text takes the text style properties. For example, size sets the size of the text."
    e "[TRADUCIR: In addition to the common properties that all displayables take, text takes the text style properties. For example, size sets the size of the text.]"

#   text _( "The answer is [answer]."
    text _( "[TRADUCIR: The answer is [answer].]"

#   e "The text displayable can also interpolate values enclosed in square brackets."
    e "[TRADUCIR: The text displayable can also interpolate values enclosed in square brackets.]"

#   e "When text is displayed in a screen using the text statement, variables defined in the screen take precedence over those defined outside it."
    e "[TRADUCIR: When text is displayed in a screen using the text statement, variables defined in the screen take precedence over those defined outside it.]"

#   e "Those variables may be parameters given to the screen, defined with the default or python statements, or set using the SetScreenVariable action."
    e "[TRADUCIR: Those variables may be parameters given to the screen, defined with the default or python statements, or set using the SetScreenVariable action.]"

#   text _( "Text tags {color=#c8ffc8}work{/color} in screens."
    text _( "[TRADUCIR: Text tags {color=#c8ffc8}work{/color} in screens.]"

#   e "There's not much more to say about text in screens, as it works the same way as all other text in Ren'Py."
    e "[TRADUCIR: There's not much more to say about text in screens, as it works the same way as all other text in Ren'Py.]"

#   e "The layout displayables take other displayables and lay them out on the screen."
    e "[TRADUCIR: The layout displayables take other displayables and lay them out on the screen.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "For example, the hbox displayable takes its children and lays them out horizontally."
    e "[TRADUCIR: For example, the hbox displayable takes its children and lays them out horizontally.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "The vbox displayable is similar, except it takes its children and arranges them vertically."
    e "[TRADUCIR: The vbox displayable is similar, except it takes its children and arranges them vertically.]"

#   e "Both of the boxes take the box style properties, the most useful of which is spacing, the amount of space to leave between children."
    e "[TRADUCIR: Both of the boxes take the box style properties, the most useful of which is spacing, the amount of space to leave between children.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "The grid displayable displays its children in a grid of equally-sized cells. It takes two arguments, the number of columns and the number of rows."
    e "[TRADUCIR: The grid displayable displays its children in a grid of equally-sized cells. It takes two arguments, the number of columns and the number of rows.]"

#   e "The grid has to be full, or Ren'Py will produce an error. Notice how in this example, the empty cell is filled with a null."
    e "[TRADUCIR: The grid has to be full, or Ren'Py will produce an error. Notice how in this example, the empty cell is filled with a null.]"

#   e "Like the boxes, grid uses the spacing property to specify the space between cells."
    e "[TRADUCIR: Like the boxes, grid uses the spacing property to specify the space between cells.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "Grid also takes the transpose property, to make it fill top-to-bottom before it fills left-to-right."
    e "[TRADUCIR: Grid also takes the transpose property, to make it fill top-to-bottom before it fills left-to-right.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   text _( "Bigger"
    text _( "[TRADUCIR: Bigger]"

#   e "And just to demonstrate that all cells are equally-sized, here's what happens when once child is bigger than the others."
    e "[TRADUCIR: And just to demonstrate that all cells are equally-sized, here's what happens when once child is bigger than the others.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "The fixed displayable displays the children using Ren'Py's normal placement algorithm. This lets you place displayables anywhere in the screen."
    e "[TRADUCIR: The fixed displayable displays the children using Ren'Py's normal placement algorithm. This lets you place displayables anywhere in the screen.]"

#   e "By default, the layout expands to fill all the space available to it. To prevent that, we use the xsize and ysize properties to set its size in advance."
    e "[TRADUCIR: By default, the layout expands to fill all the space available to it. To prevent that, we use the xsize and ysize properties to set its size in advance.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "When a non-layout displayable is given two or more children, it's not necessary to create a fixed. A fixed is automatically added, and the children are added to it."
    e "[TRADUCIR: When a non-layout displayable is given two or more children, it's not necessary to create a fixed. A fixed is automatically added, and the children are added to it.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "Finally, there's one convenience to save space. When many displayables are nested, adding a layout to each could cause crazy indent levels."
    e "[TRADUCIR: Finally, there's one convenience to save space. When many displayables are nested, adding a layout to each could cause crazy indent levels.]"

#   e "The has statement creates a layout, and then adds all further children of its parent to that layout. It's just a convenience to make screens more readable."
    e "[TRADUCIR: The has statement creates a layout, and then adds all further children of its parent to that layout. It's just a convenience to make screens more readable.]"

#   e "In the default GUI that Ren'Py creates for a game, most user interface elements expect some sort of background."
    e "[TRADUCIR: In the default GUI that Ren'Py creates for a game, most user interface elements expect some sort of background.]"

#   text _( "This is a screen."
    text _( "[TRADUCIR: This is a screen.]"

#   textbutton _( "Okay"
    textbutton _( "[TRADUCIR: Okay]"

#   e "Without the background, text can be hard to read. While a frame isn't strictly required, many screens have one or more of them."
    e "[TRADUCIR: Without the background, text can be hard to read. While a frame isn't strictly required, many screens have one or more of them.]"

#   text _( "This is a screen."
    text _( "[TRADUCIR: This is a screen.]"

#   textbutton _( "Okay"
    textbutton _( "[TRADUCIR: Okay]"

#   e "But when I add a background, it's much easier. That's why there are two displayables that are intended to give backgrounds to user interface elements."
    e "[TRADUCIR: But when I add a background, it's much easier. That's why there are two displayables that are intended to give backgrounds to user interface elements.]"

#   e "The two displayables are frame and window. Frame is the one we use above, and it's designed to provide a background for arbitrary parts of the user interface."
    e "[TRADUCIR: The two displayables are frame and window. Frame is the one we use above, and it's designed to provide a background for arbitrary parts of the user interface.]"

#   e "On the other hand, the window displayable is very specific. It's used to provide the text window. If you're reading what I'm saying, you're looking at the text window right now."
    e "[TRADUCIR: On the other hand, the window displayable is very specific. It's used to provide the text window. If you're reading what I'm saying, you're looking at the text window right now.]"

#   e "Both frames and windows can be given window style properties, allowing you to change things like the background, margins, and padding around the window."
    e "[TRADUCIR: Both frames and windows can be given window style properties, allowing you to change things like the background, margins, and padding around the window.]"

#   e "One of the most flexible displayables is the button displayable, and its textbutton and imagebutton variants."
    e "[TRADUCIR: One of the most flexible displayables is the button displayable, and its textbutton and imagebutton variants.]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   text _( "Click me."
    text _( "[TRADUCIR: Click me.]"

#   e "A button is a displayable that when selected runs an action. Buttons can be selected by clicking with the mouse, by touch, or with the keyboard and controller."
    e "[TRADUCIR: A button is a displayable that when selected runs an action. Buttons can be selected by clicking with the mouse, by touch, or with the keyboard and controller.]"

#   e "Actions can do many things, like setting variables, showing screens, jumping to a label, or returning a value. There are many {a=https://www.renpy.org/doc/html/screen_actions.html}actions in the Ren'Py documentation{/a}, and you can also write your own."
    e "[TRADUCIR: Actions can do many things, like setting variables, showing screens, jumping to a label, or returning a value. There are many {a=https://www.renpy.org/doc/html/screen_actions.html}actions in the Ren'Py documentation{/a}, and you can also write your own.]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   hovered Notify(_( "You hovered the button."
    hovered Notify(_( "[TRADUCIR: You hovered the button.]"

#   unhovered Notify(_( "You unhovered the button."
    unhovered Notify(_( "[TRADUCIR: You unhovered the button.]"

#   text _( "Click me."
    text _( "[TRADUCIR: Click me.]"

#   e "It's also possible to run actions when a button gains and loses focus."
    e "[TRADUCIR: It's also possible to run actions when a button gains and loses focus.]"

#   action SetScreenVariable( "health"
    action SetScreenVariable( "[TRADUCIR: health]"

#   text _( "Heal"
    text _( "[TRADUCIR: Heal]"

#   e "A button takes another displayable as a child. Since that child can be a layout, it can take as many children as you want."
    e "[TRADUCIR: A button takes another displayable as a child. Since that child can be a layout, it can take as many children as you want.]"

#   textbutton _( "This is a textbutton."
    textbutton _( "[TRADUCIR: This is a textbutton.]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   e "In many cases, buttons will be given text. To make that easier, there's the textbutton displayable that takes the text as an argument."
    e "[TRADUCIR: In many cases, buttons will be given text. To make that easier, there's the textbutton displayable that takes the text as an argument.]"

#   e "Since the textbutton displayable manages the style of the button text for you, it's the kind of button that's used most often in the default GUI."
    e "[TRADUCIR: Since the textbutton displayable manages the style of the button text for you, it's the kind of button that's used most often in the default GUI.]"

#   idle "logo bw"
    idle "[TRADUCIR: logo bw]"

#   hover "logo base"
    hover "[TRADUCIR: logo base]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   e "There's also the imagebutton, which takes displayables, one for each state the button can be in, and displays them as the button."
    e "[TRADUCIR: There's also the imagebutton, which takes displayables, one for each state the button can be in, and displays them as the button.]"

#   e "An imagebutton gives you the most control over what a button looks like, but is harder to translate and won't look as good if the game window is resized."
    e "[TRADUCIR: An imagebutton gives you the most control over what a button looks like, but is harder to translate and won't look as good if the game window is resized.]"

#   textbutton _( "Click me."
    textbutton _( "[TRADUCIR: Click me.]"

#   idle_background Frame( "button glossy idle"
    idle_background Frame( "[TRADUCIR: button glossy idle]"

#   hover_background Frame( "button glossy hover"
    hover_background Frame( "[TRADUCIR: button glossy hover]"

#   hover_sound "pong_beep.opus"
    hover_sound "[TRADUCIR: pong_beep.opus]"

#   text_idle_color "#c0c0c0"
    text_idle_color "[TRADUCIR: #c0c0c0]"

#   text_hover_color "#ffffff"
    text_hover_color "[TRADUCIR: #ffffff]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   e "Buttons take Window style properties, that are used to specify the background, margins, and padding. They also take Button-specific properties, like a sound to play on hover."
    e "[TRADUCIR: Buttons take Window style properties, that are used to specify the background, margins, and padding. They also take Button-specific properties, like a sound to play on hover.]"

#   e "When used with a button, style properties can be given prefixes like idle and hover to make the property change with the button state."
    e "[TRADUCIR: When used with a button, style properties can be given prefixes like idle and hover to make the property change with the button state.]"

#   e "A text button also takes Text style properties, prefixed with text. These are applied to the text displayable it creates internally."
    e "[TRADUCIR: A text button also takes Text style properties, prefixed with text. These are applied to the text displayable it creates internally.]"

#   textbutton _( "Click me."
    textbutton _( "[TRADUCIR: Click me.]"

#   style "custom_button"
    style "[TRADUCIR: custom_button]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   textbutton _( "Or me."
    textbutton _( "[TRADUCIR: Or me.]"

#   style "custom_button"
    style "[TRADUCIR: custom_button]"

#   action Notify(_( "You clicked the other button."
    action Notify(_( "[TRADUCIR: You clicked the other button.]"

#   idle_background Frame( "button glossy idle"
    idle_background Frame( "[TRADUCIR: button glossy idle]"

#   hover_background Frame( "button glossy hover"
    hover_background Frame( "[TRADUCIR: button glossy hover]"

#   size_group "custom_button"
    size_group "[TRADUCIR: custom_button]"

#   hover_sound "pong_beep.opus"
    hover_sound "[TRADUCIR: pong_beep.opus]"

#   idle_color "#c0c0c0"
    idle_color "[TRADUCIR: #c0c0c0]"

#   hover_color "#ffffff"
    hover_color "[TRADUCIR: #ffffff]"

#   e "Of course, it's prety rare we'd ever customize a button in a screen like that. Instead, we'd create custom styles and tell Ren'Py to use them."
    e "[TRADUCIR: Of course, it's prety rare we'd ever customize a button in a screen like that. Instead, we'd create custom styles and tell Ren'Py to use them.]"

#   e "The bar and vbar displayables are flexible displayables that show bars representing a value. The value can be static, animated, or adjustable by the player."
    e "[TRADUCIR: The bar and vbar displayables are flexible displayables that show bars representing a value. The value can be static, animated, or adjustable by the player.]"

#   e "The value property gives a BarValue, which is an object that determines the bar's value and range. Here, a StaticValue sets the range to 100 and the value to 66, making a bar that's two thirds full."
    e "[TRADUCIR: The value property gives a BarValue, which is an object that determines the bar's value and range. Here, a StaticValue sets the range to 100 and the value to 66, making a bar that's two thirds full.]"

#   e "A list of all the BarValues that can be used is found {a=https://www.renpy.org/doc/html/screen_actions.html#bar-values}in the Ren'Py documentation{/a}."
    e "[TRADUCIR: A list of all the BarValues that can be used is found {a=https://www.renpy.org/doc/html/screen_actions.html#bar-values}in the Ren'Py documentation{/a}.]"

#   e "In this example, we give the frame the xsize property. If we didn't do that, the bar would expand to fill all available horizontal space."
    e "[TRADUCIR: In this example, we give the frame the xsize property. If we didn't do that, the bar would expand to fill all available horizontal space.]"

#   bar value AnimatedValue(n, 100, 0.5) style "bar"
    bar value AnimatedValue(n, 100, 0.5) style "[TRADUCIR: bar]"

#   bar value ScreenVariableValue( "n"
    bar value ScreenVariableValue( "[TRADUCIR: n]"

#   bar value ScreenVariableValue( "n"
    bar value ScreenVariableValue( "[TRADUCIR: n]"

#   e "There are a few different bar styles that are defined in the default GUI. The styles are selected by the style property, with the default selected by the value."
    e "[TRADUCIR: There are a few different bar styles that are defined in the default GUI. The styles are selected by the style property, with the default selected by the value.]"

#   e "The top style is the 'bar' style. It's used to display values that the player can't adjust, like a life or progress bar."
    e "[TRADUCIR: The top style is the 'bar' style. It's used to display values that the player can't adjust, like a life or progress bar.]"

#   e "The middle style is the 'slider' value. It's used for values the player is expected to adjust, like a volume preference."
    e "[TRADUCIR: The middle style is the 'slider' value. It's used for values the player is expected to adjust, like a volume preference.]"

#   e "Finally, the bottom style is the 'scrollbar' style, which is used for horizontal scrollbars. When used as a scrollbar, the thumb in the center changes size to reflect the visible area of a viewport."
    e "[TRADUCIR: Finally, the bottom style is the 'scrollbar' style, which is used for horizontal scrollbars. When used as a scrollbar, the thumb in the center changes size to reflect the visible area of a viewport.]"

#   vbar value ScreenVariableValue( "n"
    vbar value ScreenVariableValue( "[TRADUCIR: n]"

#   vbar value ScreenVariableValue( "n"
    vbar value ScreenVariableValue( "[TRADUCIR: n]"

#   e "The vbar displayable is similar to the bar displayable, except it uses vertical styles - 'vbar', 'vslider', and 'vscrollbar' - by default."
    e "[TRADUCIR: The vbar displayable is similar to the bar displayable, except it uses vertical styles - 'vbar', 'vslider', and 'vscrollbar' - by default.]"

#   e "Bars take the Bar style properties, which can customize the look and feel greatly. Just look at the difference between the bar, slider, and scrollbar styles."
    e "[TRADUCIR: Bars take the Bar style properties, which can customize the look and feel greatly. Just look at the difference between the bar, slider, and scrollbar styles.]"

#   e "Imagemaps use two or more images to show buttons and bars. Let me start by showing you an example of an imagemap in action."
    e "[TRADUCIR: Imagemaps use two or more images to show buttons and bars. Let me start by showing you an example of an imagemap in action.]"

#   idle "imagemap ground"
    idle "[TRADUCIR: imagemap ground]"

#   hover "imagemap hover"
    hover "[TRADUCIR: imagemap hover]"

#   hotspot (44, 238, 93, 93) action Jump( "swimming"
    hotspot (44, 238, 93, 93) action Jump( "[TRADUCIR: swimming]"

#   hotspot (360, 62, 93, 93) action Jump( "science"
    hotspot (360, 62, 93, 93) action Jump( "[TRADUCIR: science]"

#   hotspot (726, 106, 93, 93) action Jump( "art"
    hotspot (726, 106, 93, 93) action Jump( "[TRADUCIR: art]"

#   hotspot (934, 461, 93, 93) action Jump( "home"
    hotspot (934, 461, 93, 93) action Jump( "[TRADUCIR: home]"

#   e "You chose swimming."
    e "[TRADUCIR: You chose swimming.]"

#   e "Swimming seems like a lot of fun, but I didn't bring my bathing suit with me."
    e "[TRADUCIR: Swimming seems like a lot of fun, but I didn't bring my bathing suit with me.]"

#   e "You chose science."
    e "[TRADUCIR: You chose science.]"

#   e "I've heard that some schools have a competitive science team, but to me research is something that can't be rushed."
    e "[TRADUCIR: I've heard that some schools have a competitive science team, but to me research is something that can't be rushed.]"

#   e "You chose art."
    e "[TRADUCIR: You chose art.]"

#   e "Really good background art is hard to make, which is why so many games use filtered photographs. Maybe you can change that."
    e "[TRADUCIR: Really good background art is hard to make, which is why so many games use filtered photographs. Maybe you can change that.]"

#   e "You chose to go home."
    e "[TRADUCIR: You chose to go home.]"

#   e "Anyway..."
    e "[TRADUCIR: Anyway...]"

#   e "To demonstrate how imagemaps are put together, I'll show you the five images that make up a smaller imagemap."
    e "[TRADUCIR: To demonstrate how imagemaps are put together, I'll show you the five images that make up a smaller imagemap.]"

#   e "The idle image is used for the background of the imagemap, for hotspot buttons that aren't focused or selected, and for the empty part of an unfocused bar."
    e "[TRADUCIR: The idle image is used for the background of the imagemap, for hotspot buttons that aren't focused or selected, and for the empty part of an unfocused bar.]"

#   e "The hover image is used for hotspots that are focused but not selected, and for the empty part of a focused bar."
    e "[TRADUCIR: The hover image is used for hotspots that are focused but not selected, and for the empty part of a focused bar.]"

#   e "Notice how both the bar and button are highlighted in this image. When we display them as part of a screen, only one of them will show up as focused."
    e "[TRADUCIR: Notice how both the bar and button are highlighted in this image. When we display them as part of a screen, only one of them will show up as focused.]"

#   e "Selected images like this selected_idle image are used for parts of the bar that are filled, and for selected buttons, like the current screen and a checked checkbox."
    e "[TRADUCIR: Selected images like this selected_idle image are used for parts of the bar that are filled, and for selected buttons, like the current screen and a checked checkbox.]"

#   e "Here's the selected_hover image. The button here will never be shown, since it will never be marked as selected."
    e "[TRADUCIR: Here's the selected_hover image. The button here will never be shown, since it will never be marked as selected.]"

#   e "Finally, an insensitive image can be given, which is used when a hotspot can't be interacted with."
    e "[TRADUCIR: Finally, an insensitive image can be given, which is used when a hotspot can't be interacted with.]"

#   e "Imagemaps aren't limited to just images. Any displayable can be used where an image is expected."
    e "[TRADUCIR: Imagemaps aren't limited to just images. Any displayable can be used where an image is expected.]"

#   idle "imagemap volume idle"
    idle "[TRADUCIR: imagemap volume idle]"

#   hover "imagemap volume hover"
    hover "[TRADUCIR: imagemap volume hover]"

#   selected_idle "imagemap volume selected_idle"
    selected_idle "[TRADUCIR: imagemap volume selected_idle]"

#   selected_hover "imagemap volume selected_hover"
    selected_hover "[TRADUCIR: imagemap volume selected_hover]"

#   insensitive "imagemap volume insensitive"
    insensitive "[TRADUCIR: imagemap volume insensitive]"

#   hotbar (51, 96, 498, 52) value Preference( "music volume"
    hotbar (51, 96, 498, 52) value Preference( "[TRADUCIR: music volume]"

#   e "Here's an imagemap built using those five images. Now that it's an imagemap, you can interact with it if you want to."
    e "[TRADUCIR: Here's an imagemap built using those five images. Now that it's an imagemap, you can interact with it if you want to.]"

#   auto "imagemap volume %s"
    auto "[TRADUCIR: imagemap volume %s]"

#   hotbar (51, 96, 498, 52) value Preference( "music volume"
    hotbar (51, 96, 498, 52) value Preference( "[TRADUCIR: music volume]"

#   e "To make this a little more concise, we can replace the five images with the auto property, which replaces '%%s' with 'idle', 'hover', 'selected_idle', 'selected_hover', or 'insensitive' as appropriate."
    e "[TRADUCIR: To make this a little more concise, we can replace the five images with the auto property, which replaces '%%s' with 'idle', 'hover', 'selected_idle', 'selected_hover', or 'insensitive' as appropriate.]"

#   e "Feel free to omit the selected and insensitive images if your game doesn't need them. Ren'Py will use the idle or hover images to replace them."
    e "[TRADUCIR: Feel free to omit the selected and insensitive images if your game doesn't need them. Ren'Py will use the idle or hover images to replace them.]"

#   e "The hotspot and hotbar statements describe areas of the imagemap that should act as buttons or bars, respectively."
    e "[TRADUCIR: The hotspot and hotbar statements describe areas of the imagemap that should act as buttons or bars, respectively.]"

#   e "Both take the coordinates of the area, in (x, y, width, height) format."
    e "[TRADUCIR: Both take the coordinates of the area, in (x, y, width, height) format.]"

#   e "A hotspot takes an action that is run when the hotspot is activated. It can also take actions that are run when it's hovered and unhovered, just like a button can."
    e "[TRADUCIR: A hotspot takes an action that is run when the hotspot is activated. It can also take actions that are run when it's hovered and unhovered, just like a button can.]"

#   e "A hotbar takes a BarValue object that describes how full the bar is, and the range of values the bar should display, just like a bar and vbar does."
    e "[TRADUCIR: A hotbar takes a BarValue object that describes how full the bar is, and the range of values the bar should display, just like a bar and vbar does.]"

#   e "A useful pattern is to define a screen with an imagemap that has hotspots that jump to labels, and call that using the call screen statement."
    e "[TRADUCIR: A useful pattern is to define a screen with an imagemap that has hotspots that jump to labels, and call that using the call screen statement.]"

#   e "That's what we did in the school example I showed before. Here's the script for it. It's long, but the imagemap itself is fairly simple."
    e "[TRADUCIR: That's what we did in the school example I showed before. Here's the script for it. It's long, but the imagemap itself is fairly simple.]"

#   e "Imagemaps have pluses and minuses. On one hand, they are easy for a designer to create, and can look very good. At the same time, they can be hard to translate, and text baked into images may be blurry when the window is scaled."
    e "[TRADUCIR: Imagemaps have pluses and minuses. On one hand, they are easy for a designer to create, and can look very good. At the same time, they can be hard to translate, and text baked into images may be blurry when the window is scaled.]"

#   e "It's up to you and your team to decide if imagemaps are right for your project."
    e "[TRADUCIR: It's up to you and your team to decide if imagemaps are right for your project.]"

#   e "Sometimes, you'll want to display something bigger than the screen. That's what the viewport displayable is for."
    e "[TRADUCIR: Sometimes, you'll want to display something bigger than the screen. That's what the viewport displayable is for.]"

#   add "bg band"
    add "[TRADUCIR: bg band]"

#   e "Here's an example of a simple viewport, used to display a single image that's far bigger than the screen. Since the viewport will expand to the size of the screen, we use the xysize property to make it smaller."
    e "[TRADUCIR: Here's an example of a simple viewport, used to display a single image that's far bigger than the screen. Since the viewport will expand to the size of the screen, we use the xysize property to make it smaller.]"

#   e "By default the viewport can't be moved, so we give the draggable, mousewheel, and arrowkeys properties to allow it to be moved in multiple ways."
    e "[TRADUCIR: By default the viewport can't be moved, so we give the draggable, mousewheel, and arrowkeys properties to allow it to be moved in multiple ways.]"

#   add "bg band"
    add "[TRADUCIR: bg band]"

#   e "When I give the viewport the edgescroll property, the viewport automatically scrolls when the mouse is near its edges. The two numbers are the size of the edges, and the speed in pixels per second."
    e "[TRADUCIR: When I give the viewport the edgescroll property, the viewport automatically scrolls when the mouse is near its edges. The two numbers are the size of the edges, and the speed in pixels per second.]"

#   scrollbars "both"
    scrollbars "[TRADUCIR: both]"

#   add "bg band"
    add "[TRADUCIR: bg band]"

#   e "Giving the viewport the scrollbars property surrounds it with scrollbars. The scrollbars property can take 'both', 'horizontal', and 'vertical' as values."
    e "[TRADUCIR: Giving the viewport the scrollbars property surrounds it with scrollbars. The scrollbars property can take 'both', 'horizontal', and 'vertical' as values.]"

#   e "The spacing property controls the space between the viewport and its scrollbars, in pixels."
    e "[TRADUCIR: The spacing property controls the space between the viewport and its scrollbars, in pixels.]"

#   scrollbars "both"
    scrollbars "[TRADUCIR: both]"

#   add "bg band"
    add "[TRADUCIR: bg band]"

#   e "The xinitial and yinitial properties set the initial amount of scrolling, as a fraction of the amount that can be scrolled."
    e "[TRADUCIR: The xinitial and yinitial properties set the initial amount of scrolling, as a fraction of the amount that can be scrolled.]"

#   scrollbars "both"
    scrollbars "[TRADUCIR: both]"

#   add "logo base"
    add "[TRADUCIR: logo base]"

#   e "Finally, there's the vpgrid displayable. It combines a viewport and a grid into a single displayable, except it's more efficient than either, since it doesn't have to draw every child."
    e "[TRADUCIR: Finally, there's the vpgrid displayable. It combines a viewport and a grid into a single displayable, except it's more efficient than either, since it doesn't have to draw every child.]"

#   e "It takes the cols and rows properties, which give the number of rows and columns of children. If one is omitted, Ren'Py figures it out from the other and the number of children."
    e "[TRADUCIR: It takes the cols and rows properties, which give the number of rows and columns of children. If one is omitted, Ren'Py figures it out from the other and the number of children.]"

# ARQUIVO: .\unrpyc-master\testcases\expected\tutorial-8.2\tutorial_video.rpy DIALOGOS: 10

#   image launch = Movie(play= "oa4_launch.webm"
    image launch = Movie(play= "[TRADUCIR: oa4_launch.webm]"

#   e "Ren'Py supports playing movies. There are two ways of doing this."
    e "[TRADUCIR: Ren'Py supports playing movies. There are two ways of doing this.]"

#   e "The first way allows you to show a movie as an image, along with every other image that's displayed on the screen."
    e "[TRADUCIR: The first way allows you to show a movie as an image, along with every other image that's displayed on the screen.]"

#   e "To do this, we first have to define an image to be a Movie displayable. Movie displayables take a movie to play, and can be given position properties."
    e "[TRADUCIR: To do this, we first have to define an image to be a Movie displayable. Movie displayables take a movie to play, and can be given position properties.]"

#   e "Then, we can show the movie displayable, which starts the movie playing."
    e "[TRADUCIR: Then, we can show the movie displayable, which starts the movie playing.]"

#   e "When we no longer want to play the movie, we can hide it."
    e "[TRADUCIR: When we no longer want to play the movie, we can hide it.]"

#   e "The other way to show a movie is with the renpy.movie_cutscene python function. This shows the movie fullscreen, either until it ends or until the user clicks."
    e "[TRADUCIR: The other way to show a movie is with the renpy.movie_cutscene python function. This shows the movie fullscreen, either until it ends or until the user clicks.]"

#   $ renpy.movie_cutscene( "oa4_launch.webm"
    $ renpy.movie_cutscene( "[TRADUCIR: oa4_launch.webm]"

#   e "A Movie displayable can also take a mask with an alpha channel, which lets you make movie sprites. But that's more complicated, so I'll stop here for now."
    e "[TRADUCIR: A Movie displayable can also take a mask with an alpha channel, which lets you make movie sprites. But that's more complicated, so I'll stop here for now.]"

#   play music "sunflower-slow-drag.ogg"
    play music "[TRADUCIR: sunflower-slow-drag.ogg]"

# ARQUIVO: .\unrpyc-master\testcases\originals\the_question-8.2\gui.rpy DIALOGOS: 11

#   define gui.text_font = "DejaVuSans.ttf"
    define gui.text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.name_text_font = "DejaVuSans.ttf"
    define gui.name_text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.interface_text_font = "DejaVuSans.ttf"
    define gui.interface_text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.main_menu_background = "gui/main_menu.png"
    define gui.main_menu_background = "[TRADUCIR: gui/main_menu.png]"

#   define gui.game_menu_background = "gui/game_menu.png"
    define gui.game_menu_background = "[TRADUCIR: gui/game_menu.png]"

#   define gui.main_menu_text_color = "#ffaa22"
    define gui.main_menu_text_color = "[TRADUCIR: #ffaa22]"

#   define gui.choice_button_text_idle_color = "#cccccc"
    define gui.choice_button_text_idle_color = "[TRADUCIR: #cccccc]"

#   define gui.choice_button_text_hover_color = "#ffffff"
    define gui.choice_button_text_hover_color = "[TRADUCIR: #ffffff]"

#   ## What to do with unscrollable scrollbars in the gui. "hide"
    ## What to do with unscrollable scrollbars in the gui. "[TRADUCIR: hide]"

#   define gui.unscrollable = "hide"
    define gui.unscrollable = "[TRADUCIR: hide]"

#   define gui.language = "unicode"
    define gui.language = "[TRADUCIR: unicode]"

# ARQUIVO: .\unrpyc-master\testcases\originals\the_question-8.2\options.rpy DIALOGOS: 22

#   define config.name = _( "The Question"
    define config.name = _( "[TRADUCIR: The Question]"

#   define config.version = "7.0"
    define config.version = "[TRADUCIR: 7.0]"

#   define build.name = "the_question"
    define build.name = "[TRADUCIR: the_question]"

#   define build.version = "7.0"
    define build.version = "[TRADUCIR: 7.0]"

#   # define config.sample_sound = "sample-sound.ogg"
    # define config.sample_sound = "[TRADUCIR: sample-sound.ogg]"

#   # define config.sample_voice = "sample-voice.ogg"
    # define config.sample_voice = "[TRADUCIR: sample-voice.ogg]"

#   # define config.main_menu_music = "main-menu-theme.ogg"
    # define config.main_menu_music = "[TRADUCIR: main-menu-theme.ogg]"

#   ## This controls when the dialogue window is displayed. If "show"
    ## This controls when the dialogue window is displayed. If "[TRADUCIR: show]"

#   ## displayed. If "hide"
    ## displayed. If "[TRADUCIR: hide]"

#   ## "auto"
    ## "[TRADUCIR: auto]"

#   ## After the game has started, this can be changed with the "window show"
    ## After the game has started, this can be changed with the "[TRADUCIR: window show]"

#   ## "window hide"
    ## "[TRADUCIR: window hide]"

#   define config.window = "auto"
    define config.window = "[TRADUCIR: auto]"

#   define config.save_directory = "the_question-7"
    define config.save_directory = "[TRADUCIR: the_question-7]"

#   define config.window_icon = "gui/window_icon.png"
    define config.window_icon = "[TRADUCIR: gui/window_icon.png]"

#   config.searchpath.append(config.renpy_base + "/sdk-fonts"
    config.searchpath.append(config.renpy_base + "[TRADUCIR: /sdk-fonts]"

#   build.classify_renpy( "sdk-fonts/**"
    build.classify_renpy( "[TRADUCIR: sdk-fonts/**]"

#   ## For example, "*.txt"
    ## For example, "[TRADUCIR: *.txt]"

#   ## subdirectories, and "**.psd"
    ## subdirectories, and "[TRADUCIR: **.psd]"

#   ## in-app purchases. It can be found on the "Services & APIs"
    ## in-app purchases. It can be found on the "[TRADUCIR: Services & APIs]"

#   # define build.google_play_key = "..."
    # define build.google_play_key = "[TRADUCIR: ...]"

#   define build.itch_project = "renpytom/the-question"
    define build.itch_project = "[TRADUCIR: renpytom/the-question]"

# ARQUIVO: .\unrpyc-master\testcases\originals\the_question-8.2\screens.rpy DIALOGOS: 299

#   properties gui.text_properties( "input"
    properties gui.text_properties( "[TRADUCIR: input]"

#   properties gui.text_properties( "hyperlink"
    properties gui.text_properties( "[TRADUCIR: hyperlink]"

#   properties gui.text_properties( "interface"
    properties gui.text_properties( "[TRADUCIR: interface]"

#   properties gui.button_properties( "button"
    properties gui.button_properties( "[TRADUCIR: button]"

#   properties gui.text_properties( "button"
    properties gui.text_properties( "[TRADUCIR: button]"

#   properties gui.text_properties( "label"
    properties gui.text_properties( "[TRADUCIR: label]"

#   properties gui.text_properties( "prompt"
    properties gui.text_properties( "[TRADUCIR: prompt]"

#   left_bar Frame( "gui/bar/left.png"
    left_bar Frame( "[TRADUCIR: gui/bar/left.png]"

#   right_bar Frame( "gui/bar/right.png"
    right_bar Frame( "[TRADUCIR: gui/bar/right.png]"

#   top_bar Frame( "gui/bar/top.png"
    top_bar Frame( "[TRADUCIR: gui/bar/top.png]"

#   bottom_bar Frame( "gui/bar/bottom.png"
    bottom_bar Frame( "[TRADUCIR: gui/bar/bottom.png]"

#   base_bar Frame( "gui/scrollbar/horizontal_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/scrollbar/horizontal_[prefix_]bar.png]"

#   thumb Frame( "gui/scrollbar/horizontal_[prefix_]thumb.png"
    thumb Frame( "[TRADUCIR: gui/scrollbar/horizontal_[prefix_]thumb.png]"

#   base_bar Frame( "gui/scrollbar/vertical_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/scrollbar/vertical_[prefix_]bar.png]"

#   thumb Frame( "gui/scrollbar/vertical_[prefix_]thumb.png"
    thumb Frame( "[TRADUCIR: gui/scrollbar/vertical_[prefix_]thumb.png]"

#   base_bar Frame( "gui/slider/horizontal_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/slider/horizontal_[prefix_]bar.png]"

#   thumb "gui/slider/horizontal_[prefix_]thumb.png"
    thumb "[TRADUCIR: gui/slider/horizontal_[prefix_]thumb.png]"

#   base_bar Frame( "gui/slider/vertical_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/slider/vertical_[prefix_]bar.png]"

#   thumb "gui/slider/vertical_[prefix_]thumb.png"
    thumb "[TRADUCIR: gui/slider/vertical_[prefix_]thumb.png]"

#   background Frame( "gui/frame.png"
    background Frame( "[TRADUCIR: gui/frame.png]"

#   ## This screen must create a text displayable with id "what"
    ## This screen must create a text displayable with id "[TRADUCIR: what]"

#   ## this to manage text display. It can also create displayables with id "who"
    ## this to manage text display. It can also create displayables with id "[TRADUCIR: who]"

#   ## and id "window"
    ## and id "[TRADUCIR: window]"

#   style_prefix "say"
    style_prefix "[TRADUCIR: say]"

#   id "window"
    id "[TRADUCIR: window]"

#   style "namebox"
    style "[TRADUCIR: namebox]"

#   text who id "who"
    text who id "[TRADUCIR: who]"

#   text what id "what"
    text what id "[TRADUCIR: what]"

#   if not renpy.variant( "small"
    if not renpy.variant( "[TRADUCIR: small]"

#   background Image( "gui/textbox.png"
    background Image( "[TRADUCIR: gui/textbox.png]"

#   background Frame( "gui/namebox.png"
    background Frame( "[TRADUCIR: gui/namebox.png]"

#   properties gui.text_properties( "name"
    properties gui.text_properties( "[TRADUCIR: name]"

#   properties gui.text_properties( "dialogue"
    properties gui.text_properties( "[TRADUCIR: dialogue]"

#   ## This screen must create an input displayable with id "input"
    ## This screen must create an input displayable with id "[TRADUCIR: input]"

#   style_prefix "input"
    style_prefix "[TRADUCIR: input]"

#   text prompt style "input_prompt"
    text prompt style "[TRADUCIR: input_prompt]"

#   input id "input"
    input id "[TRADUCIR: input]"

#   properties gui.text_properties( "input_prompt"
    properties gui.text_properties( "[TRADUCIR: input_prompt]"

#   style_prefix "choice"
    style_prefix "[TRADUCIR: choice]"

#   properties gui.button_properties( "choice_button"
    properties gui.button_properties( "[TRADUCIR: choice_button]"

#   properties gui.text_properties( "choice_button"
    properties gui.text_properties( "[TRADUCIR: choice_button]"

#   style_prefix "quick"
    style_prefix "[TRADUCIR: quick]"

#   textbutton _( "Back"
    textbutton _( "[TRADUCIR: Back]"

#   textbutton _( "History"
    textbutton _( "[TRADUCIR: History]"

#   textbutton _( "Skip"
    textbutton _( "[TRADUCIR: Skip]"

#   textbutton _( "Auto"
    textbutton _( "[TRADUCIR: Auto]"

#   textbutton _( "Save"
    textbutton _( "[TRADUCIR: Save]"

#   textbutton _( "Q.Save"
    textbutton _( "[TRADUCIR: Q.Save]"

#   textbutton _( "Q.Load"
    textbutton _( "[TRADUCIR: Q.Load]"

#   textbutton _( "Prefs"
    textbutton _( "[TRADUCIR: Prefs]"

#   config.overlay_screens.append( "quick_menu"
    config.overlay_screens.append( "[TRADUCIR: quick_menu]"

#   properties gui.button_properties( "quick_button"
    properties gui.button_properties( "[TRADUCIR: quick_button]"

#   properties gui.text_properties( "quick_button"
    properties gui.text_properties( "[TRADUCIR: quick_button]"

#   style_prefix "navigation"
    style_prefix "[TRADUCIR: navigation]"

#   textbutton _( "Start"
    textbutton _( "[TRADUCIR: Start]"

#   textbutton _( "History"
    textbutton _( "[TRADUCIR: History]"

#   textbutton _( "Save"
    textbutton _( "[TRADUCIR: Save]"

#   textbutton _( "Load"
    textbutton _( "[TRADUCIR: Load]"

#   textbutton _( "Preferences"
    textbutton _( "[TRADUCIR: Preferences]"

#   textbutton _( "End Replay"
    textbutton _( "[TRADUCIR: End Replay]"

#   textbutton _( "Main Menu"
    textbutton _( "[TRADUCIR: Main Menu]"

#   textbutton _( "About"
    textbutton _( "[TRADUCIR: About]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   textbutton _( "Help"
    textbutton _( "[TRADUCIR: Help]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   textbutton _( "Quit"
    textbutton _( "[TRADUCIR: Quit]"

#   size_group "navigation"
    size_group "[TRADUCIR: navigation]"

#   properties gui.button_properties( "navigation_button"
    properties gui.button_properties( "[TRADUCIR: navigation_button]"

#   properties gui.text_properties( "navigation_button"
    properties gui.text_properties( "[TRADUCIR: navigation_button]"

#   style_prefix "main_menu"
    style_prefix "[TRADUCIR: main_menu]"

#   text "[config.name!t]"
    text "[TRADUCIR: [config.name!t]]"

#   style "main_menu_title"
    style "[TRADUCIR: main_menu_title]"

#   text _( "Ren'Py 7+ Edition"
    text _( "[TRADUCIR: Ren'Py 7+ Edition]"

#   style "main_menu_version"
    style "[TRADUCIR: main_menu_version]"

#   background "gui/overlay/main_menu.png"
    background "[TRADUCIR: gui/overlay/main_menu.png]"

#   properties gui.text_properties( "main_menu"
    properties gui.text_properties( "[TRADUCIR: main_menu]"

#   properties gui.text_properties( "title"
    properties gui.text_properties( "[TRADUCIR: title]"

#   properties gui.text_properties( "version"
    properties gui.text_properties( "[TRADUCIR: version]"

#   ## The scroll parameter can be None, or one of "viewport"
    ## The scroll parameter can be None, or one of "[TRADUCIR: viewport]"

#   style_prefix "game_menu"
    style_prefix "[TRADUCIR: game_menu]"

#   style "game_menu_outer_frame"
    style "[TRADUCIR: game_menu_outer_frame]"

#   style "game_menu_navigation_frame"
    style "[TRADUCIR: game_menu_navigation_frame]"

#   style "game_menu_content_frame"
    style "[TRADUCIR: game_menu_content_frame]"

#   if scroll == "viewport"
    if scroll == "[TRADUCIR: viewport]"

#   scrollbars "vertical"
    scrollbars "[TRADUCIR: vertical]"

#   elif scroll == "vpgrid"
    elif scroll == "[TRADUCIR: vpgrid]"

#   scrollbars "vertical"
    scrollbars "[TRADUCIR: vertical]"

#   textbutton _( "Return"
    textbutton _( "[TRADUCIR: Return]"

#   style "return_button"
    style "[TRADUCIR: return_button]"

#   key "game_menu"
    key "[TRADUCIR: game_menu]"

#   background "gui/overlay/game_menu.png"
    background "[TRADUCIR: gui/overlay/game_menu.png]"

#   use game_menu(_( "About"
    use game_menu(_( "[TRADUCIR: About]"

#   style_prefix "about"
    style_prefix "[TRADUCIR: about]"

#   label "[config.name!t]"
    label "[TRADUCIR: [config.name!t]]"

#   text _( "[config.version!t]\n"
    text _( "[TRADUCIR: [config.version!t]\n]"

#   text _( "Updated Character Art"
    text _( "[TRADUCIR: Updated Character Art]"

#   text _( "Deji"
    text _( "[TRADUCIR: Deji]"

#   text _( "Original Character Art"
    text _( "[TRADUCIR: Original Character Art]"

#   text _( "Derik"
    text _( "[TRADUCIR: Derik]"

#   text _( "Updated Background Art"
    text _( "[TRADUCIR: Updated Background Art]"

#   text _( "Mugenjohncel"
    text _( "[TRADUCIR: Mugenjohncel]"

#   text _( "Original Background Art"
    text _( "[TRADUCIR: Original Background Art]"

#   text _( "DaFool"
    text _( "[TRADUCIR: DaFool]"

#   text _( "Music By"
    text _( "[TRADUCIR: Music By]"

#   text _( "Alessio"
    text _( "[TRADUCIR: Alessio]"

#   text _( "Update Written By"
    text _( "[TRADUCIR: Update Written By]"

#   text _( "Lore"
    text _( "[TRADUCIR: Lore]"

#   text _( "Originally Written By"
    text _( "[TRADUCIR: Originally Written By]"

#   text _( "mikey (ATP Projects)"
    text _( "[TRADUCIR: mikey (ATP Projects)]"

#   text _( "\nMade with {a=https://www.renpy.org/}Ren'Py{/a} [renpy.version_only]"
    text _( "[TRADUCIR: \nMade with {a=https://www.renpy.org/}Ren'Py{/a} [renpy.version_only]]"

#   text _( "[renpy.license!t]"
    text _( "[TRADUCIR: [renpy.license!t]]"

#   use file_slots(_( "Save"
    use file_slots(_( "[TRADUCIR: Save]"

#   use file_slots(_( "Load"
    use file_slots(_( "[TRADUCIR: Load]"

#   default page_name_value = FilePageNameInputValue(pattern=_( "Page {}"
    default page_name_value = FilePageNameInputValue(pattern=_( "[TRADUCIR: Page {}]"

#   style "page_label"
    style "[TRADUCIR: page_label]"

#   style "page_label_text"
    style "[TRADUCIR: page_label_text]"

#   style_prefix "slot"
    style_prefix "[TRADUCIR: slot]"

#   text FileTime(slot, format=_( "{#file_time}%A, %B %d %Y, %H:%M"
    text FileTime(slot, format=_( "[TRADUCIR: {#file_time}%A, %B %d %Y, %H:%M]"

#   style "slot_time_text"
    style "[TRADUCIR: slot_time_text]"

#   style "slot_name_text"
    style "[TRADUCIR: slot_name_text]"

#   key "save_delete"
    key "[TRADUCIR: save_delete]"

#   style_prefix "page"
    style_prefix "[TRADUCIR: page]"

#   textbutton _( "<"
    textbutton _( "[TRADUCIR: <]"

#   textbutton _( "{#auto_page}A"
    textbutton _( "[TRADUCIR: {#auto_page}A]"

#   textbutton _( "{#quick_page}Q"
    textbutton _( "[TRADUCIR: {#quick_page}Q]"

#   textbutton "[page]"
    textbutton "[TRADUCIR: [page]]"

#   textbutton _( ">"
    textbutton _( "[TRADUCIR: >]"

#   layout "subtitle"
    layout "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "page_button"
    properties gui.button_properties( "[TRADUCIR: page_button]"

#   properties gui.text_properties( "page_button"
    properties gui.text_properties( "[TRADUCIR: page_button]"

#   properties gui.button_properties( "slot_button"
    properties gui.button_properties( "[TRADUCIR: slot_button]"

#   properties gui.text_properties( "slot_button"
    properties gui.text_properties( "[TRADUCIR: slot_button]"

#   use game_menu(_( "Preferences"
    use game_menu(_( "[TRADUCIR: Preferences]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   label _( "Display"
    label _( "[TRADUCIR: Display]"

#   textbutton _( "Window"
    textbutton _( "[TRADUCIR: Window]"

#   textbutton _( "Fullscreen"
    textbutton _( "[TRADUCIR: Fullscreen]"

#   style_prefix "check"
    style_prefix "[TRADUCIR: check]"

#   label _( "Skip"
    label _( "[TRADUCIR: Skip]"

#   textbutton _( "Unseen Text"
    textbutton _( "[TRADUCIR: Unseen Text]"

#   textbutton _( "After Choices"
    textbutton _( "[TRADUCIR: After Choices]"

#   textbutton _( "Transitions"
    textbutton _( "[TRADUCIR: Transitions]"

#   ## Additional vboxes of type "radio_pref"
    ## Additional vboxes of type "[TRADUCIR: radio_pref]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   label _( "Language"
    label _( "[TRADUCIR: Language]"

#   textbutton "English"
    textbutton "[TRADUCIR: English]"

#   textbutton "Česky"
    textbutton "[TRADUCIR: Česky]"

#   textbutton "Dansk"
    textbutton "[TRADUCIR: Dansk]"

#   textbutton "Français"
    textbutton "[TRADUCIR: Français]"

#   textbutton "Bahasa Melayu"
    textbutton "[TRADUCIR: Bahasa Melayu]"

#   textbutton "Русский"
    textbutton "[TRADUCIR: Русский]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   textbutton "Español"
    textbutton "[TRADUCIR: Español]"

#   textbutton "Українська"
    textbutton "[TRADUCIR: Українська]"

#   textbutton "日本語"
    textbutton "[TRADUCIR: 日本語]"

#   textbutton "한국어"
    textbutton "[TRADUCIR: 한국어]"

#   textbutton "简体中文"
    textbutton "[TRADUCIR: 简体中文]"

#   textbutton "繁體中文"
    textbutton "[TRADUCIR: 繁體中文]"

#   style_prefix "slider"
    style_prefix "[TRADUCIR: slider]"

#   label _( "Text Speed"
    label _( "[TRADUCIR: Text Speed]"

#   bar value Preference( "text speed"
    bar value Preference( "[TRADUCIR: text speed]"

#   label _( "Auto-Forward Time"
    label _( "[TRADUCIR: Auto-Forward Time]"

#   bar value Preference( "auto-forward time"
    bar value Preference( "[TRADUCIR: auto-forward time]"

#   label _( "Music Volume"
    label _( "[TRADUCIR: Music Volume]"

#   bar value Preference( "music volume"
    bar value Preference( "[TRADUCIR: music volume]"

#   label _( "Sound Volume"
    label _( "[TRADUCIR: Sound Volume]"

#   bar value Preference( "sound volume"
    bar value Preference( "[TRADUCIR: sound volume]"

#   textbutton _( "Test"
    textbutton _( "[TRADUCIR: Test]"

#   label _( "Voice Volume"
    label _( "[TRADUCIR: Voice Volume]"

#   bar value Preference( "voice volume"
    bar value Preference( "[TRADUCIR: voice volume]"

#   textbutton _( "Test"
    textbutton _( "[TRADUCIR: Test]"

#   textbutton _( "Mute All"
    textbutton _( "[TRADUCIR: Mute All]"

#   action Preference( "all mute"
    action Preference( "[TRADUCIR: all mute]"

#   style "mute_all_button"
    style "[TRADUCIR: mute_all_button]"

#   properties gui.button_properties( "radio_button"
    properties gui.button_properties( "[TRADUCIR: radio_button]"

#   foreground "gui/button/radio_[prefix_]foreground.png"
    foreground "[TRADUCIR: gui/button/radio_[prefix_]foreground.png]"

#   properties gui.text_properties( "radio_button"
    properties gui.text_properties( "[TRADUCIR: radio_button]"

#   properties gui.button_properties( "check_button"
    properties gui.button_properties( "[TRADUCIR: check_button]"

#   foreground "gui/button/check_[prefix_]foreground.png"
    foreground "[TRADUCIR: gui/button/check_[prefix_]foreground.png]"

#   properties gui.text_properties( "check_button"
    properties gui.text_properties( "[TRADUCIR: check_button]"

#   properties gui.button_properties( "slider_button"
    properties gui.button_properties( "[TRADUCIR: slider_button]"

#   properties gui.text_properties( "slider_button"
    properties gui.text_properties( "[TRADUCIR: slider_button]"

#   use game_menu(_( "History"
    use game_menu(_( "[TRADUCIR: History]"

#   style_prefix "history"
    style_prefix "[TRADUCIR: history]"

#   style "history_name"
    style "[TRADUCIR: history_name]"

#   if "color"
    if "[TRADUCIR: color]"

#   text_color h.who_args[ "color"
    text_color h.who_args[ "[TRADUCIR: color]"

#   label _( "The dialogue history is empty."
    label _( "[TRADUCIR: The dialogue history is empty.]"

#   define gui.history_allow_tags = { "alt"
    define gui.history_allow_tags = { "[TRADUCIR: alt]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   default device = "keyboard"
    default device = "[TRADUCIR: keyboard]"

#   use game_menu(_( "Help"
    use game_menu(_( "[TRADUCIR: Help]"

#   style_prefix "help"
    style_prefix "[TRADUCIR: help]"

#   textbutton _( "Keyboard"
    textbutton _( "[TRADUCIR: Keyboard]"

#   textbutton _( "Mouse"
    textbutton _( "[TRADUCIR: Mouse]"

#   textbutton _( "Gamepad"
    textbutton _( "[TRADUCIR: Gamepad]"

#   if device == "keyboard"
    if device == "[TRADUCIR: keyboard]"

#   elif device == "mouse"
    elif device == "[TRADUCIR: mouse]"

#   elif device == "gamepad"
    elif device == "[TRADUCIR: gamepad]"

#   label _( "Enter"
    label _( "[TRADUCIR: Enter]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Space"
    label _( "[TRADUCIR: Space]"

#   text _( "Advances dialogue without selecting choices."
    text _( "[TRADUCIR: Advances dialogue without selecting choices.]"

#   label _( "Arrow Keys"
    label _( "[TRADUCIR: Arrow Keys]"

#   text _( "Navigate the interface."
    text _( "[TRADUCIR: Navigate the interface.]"

#   label _( "Escape"
    label _( "[TRADUCIR: Escape]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Ctrl"
    label _( "[TRADUCIR: Ctrl]"

#   text _( "Skips dialogue while held down."
    text _( "[TRADUCIR: Skips dialogue while held down.]"

#   label _( "Tab"
    label _( "[TRADUCIR: Tab]"

#   text _( "Toggles dialogue skipping."
    text _( "[TRADUCIR: Toggles dialogue skipping.]"

#   label _( "Page Up"
    label _( "[TRADUCIR: Page Up]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Page Down"
    label _( "[TRADUCIR: Page Down]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label "H"
    label "[TRADUCIR: H]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   label "S"
    label "[TRADUCIR: S]"

#   text _( "Takes a screenshot."
    text _( "[TRADUCIR: Takes a screenshot.]"

#   label "V"
    label "[TRADUCIR: V]"

#   text _( "Toggles assistive {a=https://www.renpy.org/l/voicing}self-voicing{/a}."
    text _( "[TRADUCIR: Toggles assistive {a=https://www.renpy.org/l/voicing}self-voicing{/a}.]"

#   label "Shift+A"
    label "[TRADUCIR: Shift+A]"

#   text _( "Opens the accessibility menu."
    text _( "[TRADUCIR: Opens the accessibility menu.]"

#   label _( "Left Click"
    label _( "[TRADUCIR: Left Click]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Middle Click"
    label _( "[TRADUCIR: Middle Click]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   label _( "Right Click"
    label _( "[TRADUCIR: Right Click]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Mouse Wheel Up"
    label _( "[TRADUCIR: Mouse Wheel Up]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Mouse Wheel Down"
    label _( "[TRADUCIR: Mouse Wheel Down]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label _( "Right Trigger\nA/Bottom Button"
    label _( "[TRADUCIR: Right Trigger\nA/Bottom Button]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Left Trigger\nLeft Shoulder"
    label _( "[TRADUCIR: Left Trigger\nLeft Shoulder]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Right Shoulder"
    label _( "[TRADUCIR: Right Shoulder]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label _( "D-Pad, Sticks"
    label _( "[TRADUCIR: D-Pad, Sticks]"

#   text _( "Navigate the interface."
    text _( "[TRADUCIR: Navigate the interface.]"

#   label _( "Start, Guide"
    label _( "[TRADUCIR: Start, Guide]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Y/Top Button"
    label _( "[TRADUCIR: Y/Top Button]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   textbutton _( "Calibrate"
    textbutton _( "[TRADUCIR: Calibrate]"

#   properties gui.button_properties( "help_button"
    properties gui.button_properties( "[TRADUCIR: help_button]"

#   properties gui.text_properties( "help_button"
    properties gui.text_properties( "[TRADUCIR: help_button]"

#   style_prefix "confirm"
    style_prefix "[TRADUCIR: confirm]"

#   add "gui/overlay/confirm.png"
    add "[TRADUCIR: gui/overlay/confirm.png]"

#   style "confirm_prompt"
    style "[TRADUCIR: confirm_prompt]"

#   textbutton _( "Yes"
    textbutton _( "[TRADUCIR: Yes]"

#   textbutton _( "No"
    textbutton _( "[TRADUCIR: No]"

#   ## Right-click and escape answer "no"
    ## Right-click and escape answer "[TRADUCIR: no]"

#   key "game_menu"
    key "[TRADUCIR: game_menu]"

#   background Frame([ "gui/confirm_frame.png"
    background Frame([ "[TRADUCIR: gui/confirm_frame.png]"

#   layout "subtitle"
    layout "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "confirm_button"
    properties gui.button_properties( "[TRADUCIR: confirm_button]"

#   properties gui.text_properties( "confirm_button"
    properties gui.text_properties( "[TRADUCIR: confirm_button]"

#   style_prefix "skip"
    style_prefix "[TRADUCIR: skip]"

#   text _( "Skipping"
    text _( "[TRADUCIR: Skipping]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   background Frame( "gui/skip.png"
    background Frame( "[TRADUCIR: gui/skip.png]"

#   font "DejaVuSans.ttf"
    font "[TRADUCIR: DejaVuSans.ttf]"

#   style_prefix "notify"
    style_prefix "[TRADUCIR: notify]"

#   text "[message!tq]"
    text "[TRADUCIR: [message!tq]]"

#   background Frame( "gui/notify.png"
    background Frame( "[TRADUCIR: gui/notify.png]"

#   properties gui.text_properties( "notify"
    properties gui.text_properties( "[TRADUCIR: notify]"

#   style "nvl_window"
    style "[TRADUCIR: nvl_window]"

#   style "nvl_button"
    style "[TRADUCIR: nvl_button]"

#   background "gui/nvl.png"
    background "[TRADUCIR: gui/nvl.png]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "nvl_button"
    properties gui.button_properties( "[TRADUCIR: nvl_button]"

#   properties gui.text_properties( "nvl_button"
    properties gui.text_properties( "[TRADUCIR: nvl_button]"

#   variant "medium"
    variant "[TRADUCIR: medium]"

#   variant "touch"
    variant "[TRADUCIR: touch]"

#   style_prefix "quick"
    style_prefix "[TRADUCIR: quick]"

#   textbutton _( "Back"
    textbutton _( "[TRADUCIR: Back]"

#   textbutton _( "Skip"
    textbutton _( "[TRADUCIR: Skip]"

#   textbutton _( "Auto"
    textbutton _( "[TRADUCIR: Auto]"

#   textbutton _( "Menu"
    textbutton _( "[TRADUCIR: Menu]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/textbox.png"
    background "[TRADUCIR: gui/phone/textbox.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/nvl.png"
    background "[TRADUCIR: gui/phone/nvl.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/overlay/main_menu.png"
    background "[TRADUCIR: gui/phone/overlay/main_menu.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/overlay/game_menu.png"
    background "[TRADUCIR: gui/phone/overlay/game_menu.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

# ARQUIVO: .\unrpyc-master\testcases\originals\the_question-8.2\script.rpy DIALOGOS: 78

#   define s = Character(_( "Sylvie"
    define s = Character(_( "[TRADUCIR: Sylvie]"

#   define m = Character(_( "Me"
    define m = Character(_( "[TRADUCIR: Me]"

#   play music "illurock.opus"
    play music "[TRADUCIR: illurock.opus]"

#   "It's only when I hear the sounds of shuffling feet and supplies being put away that I realize that the lecture's over."
    "[TRADUCIR: It's only when I hear the sounds of shuffling feet and supplies being put away that I realize that the lecture's over.]"

#   "Professor Eileen's lectures are usually interesting, but today I just couldn't concentrate on it."
    "[TRADUCIR: Professor Eileen's lectures are usually interesting, but today I just couldn't concentrate on it.]"

#   "I've had a lot of other thoughts on my mind...thoughts that culminate in a question."
    "[TRADUCIR: I've had a lot of other thoughts on my mind...thoughts that culminate in a question.]"

#   "It's a question that I've been meaning to ask a certain someone."
    "[TRADUCIR: It's a question that I've been meaning to ask a certain someone.]"

#   "When we come out of the university, I spot her right away."
    "[TRADUCIR: When we come out of the university, I spot her right away.]"

#   "I've known Sylvie since we were kids. She's got a big heart and she's always been a good friend to me."
    "[TRADUCIR: I've known Sylvie since we were kids. She's got a big heart and she's always been a good friend to me.]"

#   "But recently... I've felt that I want something more."
    "[TRADUCIR: But recently... I've felt that I want something more.]"

#   "More than just talking, more than just walking home together when our classes end."
    "[TRADUCIR: More than just talking, more than just walking home together when our classes end.]"

#   "As soon as she catches my eye, I decide..."
    "[TRADUCIR: As soon as she catches my eye, I decide...]"

#   "To ask her right away."
    "[TRADUCIR: To ask her right away.]"

#   "To ask her later."
    "[TRADUCIR: To ask her later.]"

#   s "Hi there! How was class?"
    s "[TRADUCIR: Hi there! How was class?]"

#   m "Good..."
    m "[TRADUCIR: Good...]"

#   "I can't bring myself to admit that it all went in one ear and out the other."
    "[TRADUCIR: I can't bring myself to admit that it all went in one ear and out the other.]"

#   m "Are you going home now? Wanna walk back with me?"
    m "[TRADUCIR: Are you going home now? Wanna walk back with me?]"

#   s "Sure!"
    s "[TRADUCIR: Sure!]"

#   "After a short while, we reach the meadows just outside the neighborhood where we both live."
    "[TRADUCIR: After a short while, we reach the meadows just outside the neighborhood where we both live.]"

#   "It's a scenic view I've grown used to. Autumn is especially beautiful here."
    "[TRADUCIR: It's a scenic view I've grown used to. Autumn is especially beautiful here.]"

#   "When we were children, we played in these meadows a lot, so they're full of memories."
    "[TRADUCIR: When we were children, we played in these meadows a lot, so they're full of memories.]"

#   m "Hey... Umm..."
    m "[TRADUCIR: Hey... Umm...]"

#   "She turns to me and smiles. She looks so welcoming that I feel my nervousness melt away."
    "[TRADUCIR: She turns to me and smiles. She looks so welcoming that I feel my nervousness melt away.]"

#   "I'll ask her...!"
    "[TRADUCIR: I'll ask her...!]"

#   m "Ummm... Will you..."
    m "[TRADUCIR: Ummm... Will you...]"

#   m "Will you be my artist for a visual novel?"
    m "[TRADUCIR: Will you be my artist for a visual novel?]"

#   "Silence."
    "[TRADUCIR: Silence.]"

#   "She looks so shocked that I begin to fear the worst. But then..."
    "[TRADUCIR: She looks so shocked that I begin to fear the worst. But then...]"

#   s "Sure, but what's a \"
    s "[TRADUCIR: Sure, but what's a \]"

#   "It's a videogame."
    "[TRADUCIR: It's a videogame.]"

#   "It's an interactive book."
    "[TRADUCIR: It's an interactive book.]"

#   m "It's a kind of videogame you can play on your computer or a console."
    m "[TRADUCIR: It's a kind of videogame you can play on your computer or a console.]"

#   m "Visual novels tell a story with pictures and music."
    m "[TRADUCIR: Visual novels tell a story with pictures and music.]"

#   m "Sometimes, you also get to make choices that affect the outcome of the story."
    m "[TRADUCIR: Sometimes, you also get to make choices that affect the outcome of the story.]"

#   s "So it's like those choose-your-adventure books?"
    s "[TRADUCIR: So it's like those choose-your-adventure books?]"

#   m "Exactly! I've got lots of different ideas that I think would work."
    m "[TRADUCIR: Exactly! I've got lots of different ideas that I think would work.]"

#   m "And I thought maybe you could help me...since I know how you like to draw."
    m "[TRADUCIR: And I thought maybe you could help me...since I know how you like to draw.]"

#   m "It'd be hard for me to make a visual novel alone."
    m "[TRADUCIR: It'd be hard for me to make a visual novel alone.]"

#   s "Well, sure! I can try. I just hope I don't disappoint you."
    s "[TRADUCIR: Well, sure! I can try. I just hope I don't disappoint you.]"

#   m "You know you could never disappoint me, Sylvie."
    m "[TRADUCIR: You know you could never disappoint me, Sylvie.]"

#   m "It's like an interactive book that you can read on a computer or a console."
    m "[TRADUCIR: It's like an interactive book that you can read on a computer or a console.]"

#   s "Interactive?"
    s "[TRADUCIR: Interactive?]"

#   m "You can make choices that lead to different events and endings in the story."
    m "[TRADUCIR: You can make choices that lead to different events and endings in the story.]"

#   s "So where does the \"
    s "[TRADUCIR: So where does the \]"

#   m "Visual novels have pictures and even music, sound effects, and sometimes voice acting to go along with the text."
    m "[TRADUCIR: Visual novels have pictures and even music, sound effects, and sometimes voice acting to go along with the text.]"

#   s "I see! That certainly sounds like fun. I actually used to make webcomics way back when, so I've got lots of story ideas."
    s "[TRADUCIR: I see! That certainly sounds like fun. I actually used to make webcomics way back when, so I've got lots of story ideas.]"

#   m "That's great! So...would you be interested in working with me as an artist?"
    m "[TRADUCIR: That's great! So...would you be interested in working with me as an artist?]"

#   s "I'd love to!"
    s "[TRADUCIR: I'd love to!]"

#   "And so, we become a visual novel creating duo."
    "[TRADUCIR: And so, we become a visual novel creating duo.]"

#   "Over the years, we make lots of games and have a lot of fun making them."
    "[TRADUCIR: Over the years, we make lots of games and have a lot of fun making them.]"

#   "Our first game is based on one of Sylvie's ideas, but afterwards I get to come up with stories of my own, too."
    "[TRADUCIR: Our first game is based on one of Sylvie's ideas, but afterwards I get to come up with stories of my own, too.]"

#   "We take turns coming up with stories and characters and support each other to make some great games!"
    "[TRADUCIR: We take turns coming up with stories and characters and support each other to make some great games!]"

#   "And one day..."
    "[TRADUCIR: And one day...]"

#   s "Hey..."
    s "[TRADUCIR: Hey...]"

#   m "Yes?"
    m "[TRADUCIR: Yes?]"

#   s "Will you marry me?"
    s "[TRADUCIR: Will you marry me?]"

#   m "What? Where did this come from?"
    m "[TRADUCIR: What? Where did this come from?]"

#   s "Come on, how long have we been dating?"
    s "[TRADUCIR: Come on, how long have we been dating?]"

#   m "A while..."
    m "[TRADUCIR: A while...]"

#   s "These last few years we've been making visual novels together, spending time together, helping each other..."
    s "[TRADUCIR: These last few years we've been making visual novels together, spending time together, helping each other...]"

#   s "I've gotten to know you and care about you better than anyone else. And I think the same goes for you, right?"
    s "[TRADUCIR: I've gotten to know you and care about you better than anyone else. And I think the same goes for you, right?]"

#   m "Sylvie..."
    m "[TRADUCIR: Sylvie...]"

#   s "But I know you're the indecisive type. If I held back, who knows when you'd propose?"
    s "[TRADUCIR: But I know you're the indecisive type. If I held back, who knows when you'd propose?]"

#   s "So will you marry me?"
    s "[TRADUCIR: So will you marry me?]"

#   m "Of course I will! I've actually been meaning to propose, honest!"
    m "[TRADUCIR: Of course I will! I've actually been meaning to propose, honest!]"

#   s "I know, I know."
    s "[TRADUCIR: I know, I know.]"

#   m "I guess... I was too worried about timing. I wanted to ask the right question at the right time."
    m "[TRADUCIR: I guess... I was too worried about timing. I wanted to ask the right question at the right time.]"

#   s "You worry too much. If only this were a visual novel and I could pick an option to give you more courage!"
    s "[TRADUCIR: You worry too much. If only this were a visual novel and I could pick an option to give you more courage!]"

#   "We get married shortly after that."
    "[TRADUCIR: We get married shortly after that.]"

#   "Our visual novel duo lives on even after we're married...and I try my best to be more decisive."
    "[TRADUCIR: Our visual novel duo lives on even after we're married...and I try my best to be more decisive.]"

#   "Together, we live happily ever after even now."
    "[TRADUCIR: Together, we live happily ever after even now.]"

#   "{b}Good Ending{/b}."
    "[TRADUCIR: {b}Good Ending{/b}.]"

#   "I can't get up the nerve to ask right now. With a gulp, I decide to ask her later."
    "[TRADUCIR: I can't get up the nerve to ask right now. With a gulp, I decide to ask her later.]"

#   "But I'm an indecisive person."
    "[TRADUCIR: But I'm an indecisive person.]"

#   "I couldn't ask her that day and I end up never being able to ask her."
    "[TRADUCIR: I couldn't ask her that day and I end up never being able to ask her.]"

#   "I guess I'll never know the answer to my question now..."
    "[TRADUCIR: I guess I'll never know the answer to my question now...]"

#   "{b}Bad Ending{/b}."
    "[TRADUCIR: {b}Bad Ending{/b}.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\01director_support.rpy DIALOGOS: 3

#   fn1 = os.path.join(renpy.config.gamedir, "tutorial_director.rpym"
    fn1 = os.path.join(renpy.config.gamedir, "[TRADUCIR: tutorial_director.rpym]"

#   fn2 = os.path.join(renpy.config.gamedir, "tutorial_director.rpy"
    fn2 = os.path.join(renpy.config.gamedir, "[TRADUCIR: tutorial_director.rpy]"

#   if not renpy.session.get( "director"
    if not renpy.session.get( "[TRADUCIR: director]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\01example.rpy DIALOGOS: 102

#   example_size = "small"
    example_size = "[TRADUCIR: small]"

#   example_location = "top"
    example_location = "[TRADUCIR: top]"

#   example_size = "small"
    example_size = "[TRADUCIR: small]"

#   example_location = "top"
    example_location = "[TRADUCIR: top]"

#   OUTDENT_KEYWORDS = { "define"
    OUTDENT_KEYWORDS = { "[TRADUCIR: define]"

#   fn = fn.replace( "game/"
    fn = fn.replace( "[TRADUCIR: game/]"

#   data = f.read().decode( "utf-8"
    data = f.read().decode( "[TRADUCIR: utf-8]"

#   rawlines = [ i.rstrip() for i in data.split( "\n"
    rawlines = [ i.rstrip() for i in data.split( "[TRADUCIR: \n]"

#   raise Exception( "Example open at end of {}."
    raise Exception( "[TRADUCIR: Example open at end of {}.]"

#   if outdent == "auto"
    if outdent == "[TRADUCIR: auto]"

#   outdent = "auto"
    outdent = "[TRADUCIR: auto]"

#   elif l.keyword( "noshow"
    elif l.keyword( "[TRADUCIR: noshow]"

#   elif l.keyword( "nohide"
    elif l.keyword( "[TRADUCIR: nohide]"

#   elif l.keyword( "showtrans"
    elif l.keyword( "[TRADUCIR: showtrans]"

#   name = "example_{}_{}"
    name = "[TRADUCIR: example_{}_{}]"

#   "name"
    "[TRADUCIR: name]"

#   "names"
    "[TRADUCIR: names]"

#   "hide"
    "[TRADUCIR: hide]"

#   "bottom"
    "[TRADUCIR: bottom]"

#   "small"
    "[TRADUCIR: small]"

#   "filename"
    "[TRADUCIR: filename]"

#   "number"
    "[TRADUCIR: number]"

#   "top"
    "[TRADUCIR: top]"

#   "large"
    "[TRADUCIR: large]"

#   "outdent"
    "[TRADUCIR: outdent]"

#   "screen_name"
    "[TRADUCIR: screen_name]"

#   "show_screen"
    "[TRADUCIR: show_screen]"

#   "hide_screen"
    "[TRADUCIR: hide_screen]"

#   "showtrans"
    "[TRADUCIR: showtrans]"

#   names = data.get( "names"
    names = data.get( "[TRADUCIR: names]"

#   hide = data.get( "hide"
    hide = data.get( "[TRADUCIR: hide]"

#   bottom = data.get( "bottom"
    bottom = data.get( "[TRADUCIR: bottom]"

#   small = data.get( "small"
    small = data.get( "[TRADUCIR: small]"

#   top = data.get( "top"
    top = data.get( "[TRADUCIR: top]"

#   large = data.get( "large"
    large = data.get( "[TRADUCIR: large]"

#   showtrans = data.get( "showtrans"
    showtrans = data.get( "[TRADUCIR: showtrans]"

#   example_location = "bottom"
    example_location = "[TRADUCIR: bottom]"

#   example_location = "top"
    example_location = "[TRADUCIR: top]"

#   example_size = "small"
    example_size = "[TRADUCIR: small]"

#   example_size = "large"
    example_size = "[TRADUCIR: large]"

#   renpy.show_screen( "example"
    renpy.show_screen( "[TRADUCIR: example]"

#   screen_name = data.get( "screen_name"
    screen_name = data.get( "[TRADUCIR: screen_name]"

#   if data.get( "hide_screen"
    if data.get( "[TRADUCIR: hide_screen]"

#   if data.get( "show_screen"
    if data.get( "[TRADUCIR: show_screen]"

#   read_example(data[ "name"
    read_example(data[ "[TRADUCIR: name]"

#   "example"
    "[TRADUCIR: example]"

#   block= "script"
    block= "[TRADUCIR: script]"

#   "names"
    "[TRADUCIR: names]"

#   "hide"
    "[TRADUCIR: hide]"

#   "bottom"
    "[TRADUCIR: bottom]"

#   "small"
    "[TRADUCIR: small]"

#   "top"
    "[TRADUCIR: top]"

#   "large"
    "[TRADUCIR: large]"

#   "showtrans"
    "[TRADUCIR: showtrans]"

#   renpy.register_statement( "show example"
    renpy.register_statement( "[TRADUCIR: show example]"

#   "hide_screen"
    "[TRADUCIR: hide_screen]"

#   renpy.hide_screen( "example"
    renpy.hide_screen( "[TRADUCIR: example]"

#   if example_screen and data.get( "hide_screen"
    if example_screen and data.get( "[TRADUCIR: hide_screen]"

#   renpy.register_statement( "hide example"
    renpy.register_statement( "[TRADUCIR: hide example]"

#   regex = r "(?P<word>\b(\$|[_a-zA-Z0-9]+)\b)"
    regex = r "[TRADUCIR: (?P<word>\b(\$|[_a-zA-Z0-9]+)\b)]"

#   r "|(?P<string>\"
    r "[TRADUCIR: |(?P<string>\]"

#   r "|(?P<comment>#.*)"
    r "[TRADUCIR: |(?P<comment>#.*)]"

#   s = s.replace( "{"
    s = s.replace( "[TRADUCIR: {]"

#   s = s.replace( "["
    s = s.replace( "[TRADUCIR: []"

#   if m.group( "string"
    if m.group( "[TRADUCIR: string]"

#   s = s.replace( "\\"
    s = s.replace( "[TRADUCIR: \\]"

#   s = s.replace(quote, "\\"
    s = s.replace(quote, "[TRADUCIR: \\]"

#   s = s.replace( "\n"
    s = s.replace( "[TRADUCIR: \n]"

#   if m.group( "string"
    if m.group( "[TRADUCIR: string]"

#   return "{color=#060}"
    return "[TRADUCIR: {color=#060}]"

#   word = m.group( "word"
    word = m.group( "[TRADUCIR: word]"

#   return "{color=#840}"
    return "[TRADUCIR: {color=#840}]"

#   return "{color=#048}"
    return "[TRADUCIR: {color=#048}]"

#   if m.group( "comment"
    if m.group( "[TRADUCIR: comment]"

#   return "{color=#600}"
    return "[TRADUCIR: {color=#600}]"

#   i = re.sub(r'__?\(( ".*?"
    i = re.sub(r'__?\(( "[TRADUCIR: .*?]"

#   i = re.sub(r "__?\(('.*?')\)"
    i = re.sub(r "[TRADUCIR: __?\(('.*?')\)]"

#   i = i.replace( "!t]"
    i = i.replace( "[TRADUCIR: !t]]"

#   return "\n"
    return "[TRADUCIR: \n]"

#   pygame.scrap.put(pygame.SCRAP_TEXT, self.s.encode( "utf-8"
    pygame.scrap.put(pygame.SCRAP_TEXT, self.s.encode( "[TRADUCIR: utf-8]"

#   renpy.notify(_( "Copied the example to the clipboard."
    renpy.notify(_( "[TRADUCIR: Copied the example to the clipboard.]"

#   SHOW_EXAMPLES = ( "RENPY_LESS_EXAMPLES"
    SHOW_EXAMPLES = ( "[TRADUCIR: RENPY_LESS_EXAMPLES]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   background "#fffc"
    background "[TRADUCIR: #fffc]"

#   foreground Solid( "#aaac"
    foreground Solid( "[TRADUCIR: #aaac]"

#   scrollbars "vertical"
    scrollbars "[TRADUCIR: vertical]"

#   vscrollbar_base_bar "#aaac"
    vscrollbar_base_bar "[TRADUCIR: #aaac]"

#   vscrollbar_unscrollable "hide"
    vscrollbar_unscrollable "[TRADUCIR: hide]"

#   color "#000"
    color "[TRADUCIR: #000]"

#   textbutton _( "copy"
    textbutton _( "[TRADUCIR: copy]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   text_style "quick_button_text"
    text_style "[TRADUCIR: quick_button_text]"

#   if i.endswith( ".rpy"
    if i.endswith( "[TRADUCIR: .rpy]"

#   with open(os.path.join(renpy.config.gamedir, fn), "r"
    with open(os.path.join(renpy.config.gamedir, fn), "[TRADUCIR: r]"

#   l = l.lstrip( "\ufeff"
    l = l.lstrip( "[TRADUCIR: \ufeff]"

#   m = re.match( "\s*#begin (\w+)"
    m = re.match( "[TRADUCIR: \s*#begin (\w+)]"

#   raise Exception( "Example %r is defined in two places."
    raise Exception( "[TRADUCIR: Example %r is defined in two places.]"

#   m = re.match( "\s*#end (\w+)"
    m = re.match( "[TRADUCIR: \s*#end (\w+)]"

#   raise Exception( "Example %r is not open."
    raise Exception( "[TRADUCIR: Example %r is not open.]"

#   raise Exception( "Examples %r remain open at the end of %r"
    raise Exception( "[TRADUCIR: Examples %r remain open at the end of %r]"

#   print( "The game contains {} examples."
    print( "[TRADUCIR: The game contains {} examples.]"

#   "_finaleimage"
    "[TRADUCIR: _finaleimage]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\gui.rpy DIALOGOS: 10

#   define gui.text_font = "DejaVuSans.ttf"
    define gui.text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.name_text_font = "DejaVuSans.ttf"
    define gui.name_text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.interface_text_font = "DejaVuSans.ttf"
    define gui.interface_text_font = "[TRADUCIR: DejaVuSans.ttf]"

#   define gui.main_menu_background = "gui/main_menu.jpg"
    define gui.main_menu_background = "[TRADUCIR: gui/main_menu.jpg]"

#   define gui.game_menu_background = "images/bg washington.jpg"
    define gui.game_menu_background = "[TRADUCIR: images/bg washington.jpg]"

#   define gui.choice_button_text_idle_color = "#cccccc"
    define gui.choice_button_text_idle_color = "[TRADUCIR: #cccccc]"

#   define gui.choice_button_text_hover_color = "#ffffff"
    define gui.choice_button_text_hover_color = "[TRADUCIR: #ffffff]"

#   ## What to do with unscrollable scrollbars in the gui. "hide"
    ## What to do with unscrollable scrollbars in the gui. "[TRADUCIR: hide]"

#   define gui.unscrollable = "hide"
    define gui.unscrollable = "[TRADUCIR: hide]"

#   define gui.language = "unicode"
    define gui.language = "[TRADUCIR: unicode]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\indepth_character.rpy DIALOGOS: 49

#   config.searchpath.append( "../launcher/game/fonts"
    config.searchpath.append( "[TRADUCIR: ../launcher/game/fonts]"

#   e "We've already seen how to define a Character in Ren'Py. But I want to go into a bit more detail as to what a Character is."
    e "[TRADUCIR: We've already seen how to define a Character in Ren'Py. But I want to go into a bit more detail as to what a Character is.]"

#   define e_shout = Character( "Eileen"
    define e_shout = Character( "[TRADUCIR: Eileen]"

#   define e_whisper = Character( "Eileen"
    define e_whisper = Character( "[TRADUCIR: Eileen]"

#   e "Here are couple of additional characters."
    e "[TRADUCIR: Here are couple of additional characters.]"

#   e "Each statement creates a Character object, and gives it a single argument, a name. If the name is None, no name is displayed."
    e "[TRADUCIR: Each statement creates a Character object, and gives it a single argument, a name. If the name is None, no name is displayed.]"

#   e "This can be followed by named arguments that set properties of the character. A named argument is a property name, an equals sign, and a value."
    e "[TRADUCIR: This can be followed by named arguments that set properties of the character. A named argument is a property name, an equals sign, and a value.]"

#   e "Multiple arguments should be separated with commas, like they are here. Let's see those characters in action."
    e "[TRADUCIR: Multiple arguments should be separated with commas, like they are here. Let's see those characters in action.]"

#   e_shout "I can shout!"
    e_shout "[TRADUCIR: I can shout!]"

#   e_whisper "And I can speak in a whisper."
    e_whisper "[TRADUCIR: And I can speak in a whisper.]"

#   e "This example shows how the name Character is a bit of a misnomer. Here, we have multiple Characters in use, but you see it as me speaking."
    e "[TRADUCIR: This example shows how the name Character is a bit of a misnomer. Here, we have multiple Characters in use, but you see it as me speaking.]"

#   e "It's best to think of a Character as repesenting a name and style, rather than a single person."
    e "[TRADUCIR: It's best to think of a Character as repesenting a name and style, rather than a single person.]"

#   e "There are a lot of properties that can be given to Characters, most of them prefixed styles."
    e "[TRADUCIR: There are a lot of properties that can be given to Characters, most of them prefixed styles.]"

#   e "Properties beginning with window apply to the textbox, those with what apply to the the dialogue, and those with who to the name of Character speaking."
    e "[TRADUCIR: Properties beginning with window apply to the textbox, those with what apply to the the dialogue, and those with who to the name of Character speaking.]"

#   e "If you leave a prefix out, the style customizes the name of the speaker."
    e "[TRADUCIR: If you leave a prefix out, the style customizes the name of the speaker.]"

#   e "There are quite a few different properties that can be set this way. Here are some of the most useful."
    e "[TRADUCIR: There are quite a few different properties that can be set this way. Here are some of the most useful.]"

#   define e1 = Character( "Eileen"
    define e1 = Character( "[TRADUCIR: Eileen]"

#   e1 "The window_background property sets the image that's used for the background of the textbox, which should be the same size as the default in gui/textbox.png."
    e1 "[TRADUCIR: The window_background property sets the image that's used for the background of the textbox, which should be the same size as the default in gui/textbox.png.]"

#   define e1a = Character( "Eileen"
    define e1a = Character( "[TRADUCIR: Eileen]"

#   e1a "If it's set to None, the textbox has no background window."
    e1a "[TRADUCIR: If it's set to None, the textbox has no background window.]"

#   define e2 = Character( "Eileen"
    define e2 = Character( "[TRADUCIR: Eileen]"

#   e2 "The who_color and what_color properties set the color of the character's name and dialogue text, respectively."
    e2 "[TRADUCIR: The who_color and what_color properties set the color of the character's name and dialogue text, respectively.]"

#   e2 "The colors are strings containing rgb hex codes, the same sort of colors understood by a web browser."
    e2 "[TRADUCIR: The colors are strings containing rgb hex codes, the same sort of colors understood by a web browser.]"

#   define e3 = Character( "Eileen"
    define e3 = Character( "[TRADUCIR: Eileen]"

#   e3 "Similarly, the who_font and what_font properties set the font used by the different kinds of text."
    e3 "[TRADUCIR: Similarly, the who_font and what_font properties set the font used by the different kinds of text.]"

#   define e4 = Character( "Eileen"
    define e4 = Character( "[TRADUCIR: Eileen]"

#   e4 "Setting the who_bold, what_italic, and what_size properties makes the name bold, and the dialogue text italic at a size of 20 pixels."
    e4 "[TRADUCIR: Setting the who_bold, what_italic, and what_size properties makes the name bold, and the dialogue text italic at a size of 20 pixels.]"

#   e4 "Of course, the what_bold, who_italic and who_size properties also exist, even if they're not used here."
    e4 "[TRADUCIR: Of course, the what_bold, who_italic and who_size properties also exist, even if they're not used here.]"

#   define e5 = Character( "Eileen"
    define e5 = Character( "[TRADUCIR: Eileen]"

#   e5 "The what_outlines property puts an outline around the text."
    e5 "[TRADUCIR: The what_outlines property puts an outline around the text.]"

#   e5 "It's a little complicated since it takes a list with a tuple in it, with the tuple being four things in parenthesis, and the list the square brackets around them."
    e5 "[TRADUCIR: It's a little complicated since it takes a list with a tuple in it, with the tuple being four things in parenthesis, and the list the square brackets around them.]"

#   e5 "The first number is the size of the outline, in pixels. That's followed by a string giving the hex-code of the color of the outline, and the x and y offsets."
    e5 "[TRADUCIR: The first number is the size of the outline, in pixels. That's followed by a string giving the hex-code of the color of the outline, and the x and y offsets.]"

#   define e6 = Character( "Eileen"
    define e6 = Character( "[TRADUCIR: Eileen]"

#   e6 "When the outline size is 0 and the offsets are given, what_outlines can also act as a drop-shadow behind the text."
    e6 "[TRADUCIR: When the outline size is 0 and the offsets are given, what_outlines can also act as a drop-shadow behind the text.]"

#   define e7 = Character( "Eileen"
    define e7 = Character( "[TRADUCIR: Eileen]"

#   e7 "The what_xalign and what_textalign properties control the alignment of text, with 0.0 being left, 0.5 being center, and 1.0 being right."
    e7 "[TRADUCIR: The what_xalign and what_textalign properties control the alignment of text, with 0.0 being left, 0.5 being center, and 1.0 being right.]"

#   e7 "The what_xalign property controls where all the text itself is placed within the textbox, while what_textalign controls where rows of text are placed relative to each other."
    e7 "[TRADUCIR: The what_xalign property controls where all the text itself is placed within the textbox, while what_textalign controls where rows of text are placed relative to each other.]"

#   e7 "Generally you'll want to to set them both what_xalign and what_textalign to the same value."
    e7 "[TRADUCIR: Generally you'll want to to set them both what_xalign and what_textalign to the same value.]"

#   e7 "Setting what_layout to 'subtitle' puts Ren'Py in subtitle mode, which tries to even out the length of every line of text in a block."
    e7 "[TRADUCIR: Setting what_layout to 'subtitle' puts Ren'Py in subtitle mode, which tries to even out the length of every line of text in a block.]"

#   e8 "These properties can be combined to achieve many different effects."
    e8 "[TRADUCIR: These properties can be combined to achieve many different effects.]"

#   what_outlines=[( 1, "#008000"
    what_outlines=[( 1, "[TRADUCIR: #008000]"

#   e8 "This example hides the background and shows dialogue centered and outlined, as if the game is being subtitled."
    e8 "[TRADUCIR: This example hides the background and shows dialogue centered and outlined, as if the game is being subtitled.]"

#   define e9 = Character( "Eileen"
    define e9 = Character( "[TRADUCIR: Eileen]"

#   e9 "There are two interesting non-style properties, what_prefix and what_suffix. These can put text at the start and end of a line of dialogue."
    e9 "[TRADUCIR: There are two interesting non-style properties, what_prefix and what_suffix. These can put text at the start and end of a line of dialogue.]"

#   define l8 = Character(kind=e8, what_outlines=[( 1, "#c00000"
    define l8 = Character(kind=e8, what_outlines=[( 1, "[TRADUCIR: #c00000]"

#   e "By using kind, you can copy properties from one character to another, changing only what you need to."
    e "[TRADUCIR: By using kind, you can copy properties from one character to another, changing only what you need to.]"

#   l8 "Like this! Finally I get some more dialogue around here."
    l8 "[TRADUCIR: Like this! Finally I get some more dialogue around here.]"

#   e "The last thing you have to know is that there's a special character, narrator, that speaks narration. Got it?"
    e "[TRADUCIR: The last thing you have to know is that there's a special character, narrator, that speaks narration. Got it?]"

#   "I think I do."
    "[TRADUCIR: I think I do.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\indepth_displayables.rpy DIALOGOS: 34

#   "logo base"
    "[TRADUCIR: logo base]"

#   e "Ren'Py has the concept of a displayable, which is something like an image that can be shown and hidden."
    e "[TRADUCIR: Ren'Py has the concept of a displayable, which is something like an image that can be shown and hidden.]"

#   image logo base = "logo base.png"
    image logo base = "[TRADUCIR: logo base.png]"

#   e "The image statement is used to give an image name to a displayable. The easy way is to simply give an image filename."
    e "[TRADUCIR: The image statement is used to give an image name to a displayable. The easy way is to simply give an image filename.]"

#   image logo alias = "logo base"
    image logo alias = "[TRADUCIR: logo base]"

#   e "But that's not the only thing that an image can refer to. When the string doesn't have a dot in it, Ren'Py interprets that as a reference to a second image."
    e "[TRADUCIR: But that's not the only thing that an image can refer to. When the string doesn't have a dot in it, Ren'Py interprets that as a reference to a second image.]"

#   image bg red = "#c00"
    image bg red = "[TRADUCIR: #c00]"

#   image bg blue = "#0000cc"
    image bg blue = "[TRADUCIR: #0000cc]"

#   image overlay red = "#c008"
    image overlay red = "[TRADUCIR: #c008]"

#   image overlay blue = "#0000cc88"
    image overlay blue = "[TRADUCIR: #0000cc88]"

#   e "The string can also contain a color code, consisting of hexadecimal digits, just like the colors used by web browsers."
    e "[TRADUCIR: The string can also contain a color code, consisting of hexadecimal digits, just like the colors used by web browsers.]"

#   e "Three or six digit colors are opaque, containing red, green, and blue values. The four and eight digit versions append alpha, allowing translucent colors."
    e "[TRADUCIR: Three or six digit colors are opaque, containing red, green, and blue values. The four and eight digit versions append alpha, allowing translucent colors.]"

#   image logo rotated = Transform( "logo base"
    image logo rotated = Transform( "[TRADUCIR: logo base]"

#   e "The Transform displayable takes a displayable and can apply transform properties to it."
    e "[TRADUCIR: The Transform displayable takes a displayable and can apply transform properties to it.]"

#   e "Notice how, since it takes a displayable, it can take another image. In fact, it can take any displayable defined here."
    e "[TRADUCIR: Notice how, since it takes a displayable, it can take another image. In fact, it can take any displayable defined here.]"

#   image logo solidexample = Solid( "#0000cc"
    image logo solidexample = Solid( "[TRADUCIR: #0000cc]"

#   e "There's a more complete form of Solid, that can take style properties. This lets us change the size of the Solid, where normally it fills the screen."
    e "[TRADUCIR: There's a more complete form of Solid, that can take style properties. This lets us change the size of the Solid, where normally it fills the screen.]"

#   image logo text = Text(_( "This is a text displayable."
    image logo text = Text(_( "[TRADUCIR: This is a text displayable.]"

#   e "The Text displayable lets Ren'Py treat text as if it was an image."
    e "[TRADUCIR: The Text displayable lets Ren'Py treat text as if it was an image.]"

#   image logo text rotate = Transform(Text(_( "This is a text displayable."
    image logo text rotate = Transform(Text(_( "[TRADUCIR: This is a text displayable.]"

#   e "This means that we can apply other displayables, like Transform, to Text in the same way we do to images."
    e "[TRADUCIR: This means that we can apply other displayables, like Transform, to Text in the same way we do to images.]"

#   (0, 0), "logo blink"
    (0, 0), "[TRADUCIR: logo blink]"

#   (0, 50), "logo base.png"
    (0, 50), "[TRADUCIR: logo base.png]"

#   (0, 100), "logo base.png"
    (0, 100), "[TRADUCIR: logo base.png]"

#   e "The Composite displayable lets us group multiple displayables together into a single one, from bottom to top."
    e "[TRADUCIR: The Composite displayable lets us group multiple displayables together into a single one, from bottom to top.]"

#   image ninepatch frame = Frame( "ninepatch"
    image ninepatch frame = Frame( "[TRADUCIR: ninepatch]"

#   e "Some displayables are often used to customize the Ren'Py interface, with the Frame displayable being one of them. The frame displayable takes another displayable, and the size of the left, top, right, and bottom borders."
    e "[TRADUCIR: Some displayables are often used to customize the Ren'Py interface, with the Frame displayable being one of them. The frame displayable takes another displayable, and the size of the left, top, right, and bottom borders.]"

#   e "The Frame displayable expands or shrinks to fit the area available to it. It does this by scaling the center in two dimensions and the sides in one, while keeping the corners the same size."
    e "[TRADUCIR: The Frame displayable expands or shrinks to fit the area available to it. It does this by scaling the center in two dimensions and the sides in one, while keeping the corners the same size.]"

#   image ninepatch frame tiled = Frame( "ninepatch"
    image ninepatch frame tiled = Frame( "[TRADUCIR: ninepatch]"

#   e "A Frame can also tile sections of the displayable supplied to it, rather than scaling."
    e "[TRADUCIR: A Frame can also tile sections of the displayable supplied to it, rather than scaling.]"

#   image ninepatch paper tiled = Frame( "ninepatch paper"
    image ninepatch paper tiled = Frame( "[TRADUCIR: ninepatch paper]"

#   e "Frames might look a little weird in the abstract, but when used with a texture, you can see how we create scalable interface components."
    e "[TRADUCIR: Frames might look a little weird in the abstract, but when used with a texture, you can see how we create scalable interface components.]"

#   e "These are just the simplest displayables, the ones you'll use directly the most often."
    e "[TRADUCIR: These are just the simplest displayables, the ones you'll use directly the most often.]"

#   e "You can even write custom displayables for minigames, if you're proficient at Python. But for many visual novels, these will be all you'll need."
    e "[TRADUCIR: You can even write custom displayables for minigames, if you're proficient at Python. But for many visual novels, these will be all you'll need.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\indepth_minigame.rpy DIALOGOS: 28

#   self.paddle = Solid( "#ffffff"
    self.paddle = Solid( "[TRADUCIR: #ffffff]"

#   self.ball = Solid( "#ffffff"
    self.ball = Solid( "[TRADUCIR: #ffffff]"

#   renpy.sound.play( "pong_beep.opus"
    renpy.sound.play( "[TRADUCIR: pong_beep.opus]"

#   renpy.sound.play( "pong_beep.opus"
    renpy.sound.play( "[TRADUCIR: pong_beep.opus]"

#   renpy.sound.play( "pong_boop.opus"
    renpy.sound.play( "[TRADUCIR: pong_boop.opus]"

#   self.winner = "eileen"
    self.winner = "[TRADUCIR: eileen]"

#   self.winner = "player"
    self.winner = "[TRADUCIR: player]"

#   add "bg pong field"
    add "[TRADUCIR: bg pong field]"

#   text _( "Player"
    text _( "[TRADUCIR: Player]"

#   text _( "Eileen"
    text _( "[TRADUCIR: Eileen]"

#   text _( "Click to Begin"
    text _( "[TRADUCIR: Click to Begin]"

#   e "You may want to mix Ren'Py with other forms of gameplay. There are a couple of ways to do this."
    e "[TRADUCIR: You may want to mix Ren'Py with other forms of gameplay. There are a couple of ways to do this.]"

#   e "The first is with the screen system, which can be used to display data and create button and menu based interfaces."
    e "[TRADUCIR: The first is with the screen system, which can be used to display data and create button and menu based interfaces.]"

#   e "Screens will work for many simulation-style games and RPGs."
    e "[TRADUCIR: Screens will work for many simulation-style games and RPGs.]"

#   e "When screens are not enough, you can write a creator-defined displayable to extend Ren'Py itself. A creator-defined displayable can process raw events and draw to the screen."
    e "[TRADUCIR: When screens are not enough, you can write a creator-defined displayable to extend Ren'Py itself. A creator-defined displayable can process raw events and draw to the screen.]"

#   e "That makes it possible to create all kinds of minigames. Would you like to play some pong?"
    e "[TRADUCIR: That makes it possible to create all kinds of minigames. Would you like to play some pong?]"

#   if _return == "eileen"
    if _return == "[TRADUCIR: eileen]"

#   e "I win!"
    e "[TRADUCIR: I win!]"

#   e "You won! Congratulations."
    e "[TRADUCIR: You won! Congratulations.]"

#   e "Would you like to play again?"
    e "[TRADUCIR: Would you like to play again?]"

#   "Sure."
    "[TRADUCIR: Sure.]"

#   "No thanks."
    "[TRADUCIR: No thanks.]"

#   e "Here's the source code for the minigame. It's very complex, and assumes you understand Python well."
    e "[TRADUCIR: Here's the source code for the minigame. It's very complex, and assumes you understand Python well.]"

#   e "I won't go over it in detail here. You can read more about it in the {a=https://www.renpy.org/doc/html/udd.html}Creator-Defined Displayable documentation{/a}."
    e "[TRADUCIR: I won't go over it in detail here. You can read more about it in the {a=https://www.renpy.org/doc/html/udd.html}Creator-Defined Displayable documentation{/a}.]"

#   e "Minigames can spice up your visual novel, but be careful – not every visual novel player wants to be good at arcade games."
    e "[TRADUCIR: Minigames can spice up your visual novel, but be careful – not every visual novel player wants to be good at arcade games.]"

#   e "Part of the reason Ren'Py works well is that it's meant for certain types of games, like visual novels and life simulations."
    e "[TRADUCIR: Part of the reason Ren'Py works well is that it's meant for certain types of games, like visual novels and life simulations.]"

#   e "The further afield you get from those games, the more you'll find yourself fighting Ren'Py. At some point, it makes sense to consider other engines."
    e "[TRADUCIR: The further afield you get from those games, the more you'll find yourself fighting Ren'Py. At some point, it makes sense to consider other engines.]"

#   e "And that's fine with us. We'll always be here for you when you're making visual novels."
    e "[TRADUCIR: And that's fine with us. We'll always be here for you when you're making visual novels.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\indepth_style.rpy DIALOGOS: 273

#   textbutton _( "Button 1"
    textbutton _( "[TRADUCIR: Button 1]"

#   textbutton _( "Button 2"
    textbutton _( "[TRADUCIR: Button 2]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   text_style "empty"
    text_style "[TRADUCIR: empty]"

#   background RoundRect( "#003c78"
    background RoundRect( "[TRADUCIR: #003c78]"

#   hover_background RoundRect( "#0050a0"
    hover_background RoundRect( "[TRADUCIR: #0050a0]"

#   text_color "#c8ffff"
    text_color "[TRADUCIR: #c8ffff]"

#   e "When you create a new project, Ren'Py will automatically create a GUI - a Graphical User Interface - for it."
    e "[TRADUCIR: When you create a new project, Ren'Py will automatically create a GUI - a Graphical User Interface - for it.]"

#   e "It defines the look of both in-game interface, like this text box, and out-of-game interface like the main and game menus."
    e "[TRADUCIR: It defines the look of both in-game interface, like this text box, and out-of-game interface like the main and game menus.]"

#   e "The default GUI is meant to be nice enough for a simple project. With a few small changes, it's what you're seeing in this game."
    e "[TRADUCIR: The default GUI is meant to be nice enough for a simple project. With a few small changes, it's what you're seeing in this game.]"

#   e "The GUI is also meant to be easy for an intermediate creator to customize. Customizing the GUI consists of changing the image files in the gui directory, and changing variables in gui.rpy."
    e "[TRADUCIR: The GUI is also meant to be easy for an intermediate creator to customize. Customizing the GUI consists of changing the image files in the gui directory, and changing variables in gui.rpy.]"

#   e "At the same time, even when customized, the default GUI might be too recognizable for an extremely polished game. That's why we've made it easy to totally replace."
    e "[TRADUCIR: At the same time, even when customized, the default GUI might be too recognizable for an extremely polished game. That's why we've made it easy to totally replace.]"

#   e "We've put an extensive guide to customizing the GUI on the Ren'Py website. So if you want to learn more, visit the {a=https://www.renpy.org/doc/html/gui.html}GUI customization guide{/a}."
    e "[TRADUCIR: We've put an extensive guide to customizing the GUI on the Ren'Py website. So if you want to learn more, visit the {a=https://www.renpy.org/doc/html/gui.html}GUI customization guide{/a}.]"

#   e "Ren'Py has a powerful style system that controls what displayables look like."
    e "[TRADUCIR: Ren'Py has a powerful style system that controls what displayables look like.]"

#   e "While the default GUI uses variables to provide styles with sensible defaults, if you're replacing the GUI or creating your own screens, you'll need to learn about styles yourself."
    e "[TRADUCIR: While the default GUI uses variables to provide styles with sensible defaults, if you're replacing the GUI or creating your own screens, you'll need to learn about styles yourself.]"

#   e "What would you like to know about styles?"
    e "[TRADUCIR: What would you like to know about styles?]"

#   "Style basics."
    "[TRADUCIR: Style basics.]"

#   "General style properties."
    "[TRADUCIR: General style properties.]"

#   "Text style properties."
    "[TRADUCIR: Text style properties.]"

#   "Window and Button style properties."
    "[TRADUCIR: Window and Button style properties.]"

#   "Bar style properties."
    "[TRADUCIR: Bar style properties.]"

#   "Box, Grid, and Fixed style properties."
    "[TRADUCIR: Box, Grid, and Fixed style properties.]"

#   "The Displayable Inspector."
    "[TRADUCIR: The Displayable Inspector.]"

#   "That's all I want to know."
    "[TRADUCIR: That's all I want to know.]"

#   e "Styles let a displayable look different from game to game, or even inside the same game."
    e "[TRADUCIR: Styles let a displayable look different from game to game, or even inside the same game.]"

#   e "Both of these buttons use the same displayables. But since different styles have been applied, the buttons look different from each other."
    e "[TRADUCIR: Both of these buttons use the same displayables. But since different styles have been applied, the buttons look different from each other.]"

#   e "Styles are a combination of information from four different places."
    e "[TRADUCIR: Styles are a combination of information from four different places.]"

#   text _( "This text is colored green."
    text _( "[TRADUCIR: This text is colored green.]"

#   style "my_text"
    style "[TRADUCIR: my_text]"

#   color "#c0ffc0"
    color "[TRADUCIR: #c0ffc0]"

#   e "The first place Ren'Py can get style information from is part of a screen. Each displayable created by a screen can take a style name and style properties."
    e "[TRADUCIR: The first place Ren'Py can get style information from is part of a screen. Each displayable created by a screen can take a style name and style properties.]"

#   textbutton _( "Danger"
    textbutton _( "[TRADUCIR: Danger]"

#   text_color "#c04040"
    text_color "[TRADUCIR: #c04040]"

#   text_hover_color "#ff0000"
    text_hover_color "[TRADUCIR: #ff0000]"

#   e "When a screen displayable contains text, style properties prefixed with text_ apply to that text."
    e "[TRADUCIR: When a screen displayable contains text, style properties prefixed with text_ apply to that text.]"

#   image style2 = Text(_( "This text is colored red."
    image style2 = Text(_( "[TRADUCIR: This text is colored red.]"

#   e "The next is as part of a displayable created in an image statement. Style properties are just arguments to the displayable."
    e "[TRADUCIR: The next is as part of a displayable created in an image statement. Style properties are just arguments to the displayable.]"

#   define egreen = Character( "Eileen"
    define egreen = Character( "[TRADUCIR: Eileen]"

#   egreen "Style properties can also be given as arguments when defining a character."
    egreen "[TRADUCIR: Style properties can also be given as arguments when defining a character.]"

#   egreen "Arguments beginning with who_ are style properties applied to the character's name, while those beginning with what_ are applied to the character's dialogue."
    egreen "[TRADUCIR: Arguments beginning with who_ are style properties applied to the character's name, while those beginning with what_ are applied to the character's dialogue.]"

#   egreen "Style properties that don't have a prefix are also applied to the character's name."
    egreen "[TRADUCIR: Style properties that don't have a prefix are also applied to the character's name.]"

#   color "#c0c0ff"
    color "[TRADUCIR: #c0c0ff]"

#   image style3 = Text(_( "This text is colored blue."
    image style3 = Text(_( "[TRADUCIR: This text is colored blue.]"

#   e "Finally, there is the the style statement, which creates or changes a named style. By giving Text the style argument, we tell it to use the blue_text style."
    e "[TRADUCIR: Finally, there is the the style statement, which creates or changes a named style. By giving Text the style argument, we tell it to use the blue_text style.]"

#   e "A style property can inherit from a parent. If a style property is not given in a style, it comes from the parent of that style."
    e "[TRADUCIR: A style property can inherit from a parent. If a style property is not given in a style, it comes from the parent of that style.]"

#   e "By default the parent of the style has the same name, with the prefix up to the the first underscore removed. If the style does not have an underscore in its name, 'default' is used."
    e "[TRADUCIR: By default the parent of the style has the same name, with the prefix up to the the first underscore removed. If the style does not have an underscore in its name, 'default' is used.]"

#   e "For example, blue_text inherits from text, which in turn inherits from default. The default style defines all properties, so it doesn't inherit from anything."
    e "[TRADUCIR: For example, blue_text inherits from text, which in turn inherits from default. The default style defines all properties, so it doesn't inherit from anything.]"

#   color "#c0c0ff"
    color "[TRADUCIR: #c0c0ff]"

#   e "The parent can be explicitly changed by giving the style statement an 'is' clause. In this case, we're explictly setting the style to the parent of text."
    e "[TRADUCIR: The parent can be explicitly changed by giving the style statement an 'is' clause. In this case, we're explictly setting the style to the parent of text.]"

#   e "Each displayable has a default style name. By default, it's usually the lower-case displayable name, like 'text' for Text, or 'button' for buttons."
    e "[TRADUCIR: Each displayable has a default style name. By default, it's usually the lower-case displayable name, like 'text' for Text, or 'button' for buttons.]"

#   e "In a screen, a displayable can be given the style_prefix property to give a prefix for that displayable and its children."
    e "[TRADUCIR: In a screen, a displayable can be given the style_prefix property to give a prefix for that displayable and its children.]"

#   e "For example, a text displayable with a style_prefix of 'help' will be given the style 'help_text'."
    e "[TRADUCIR: For example, a text displayable with a style_prefix of 'help' will be given the style 'help_text'.]"

#   e "Lastly, when a displayable is a button, or inside a button, it can take style prefixes."
    e "[TRADUCIR: Lastly, when a displayable is a button, or inside a button, it can take style prefixes.]"

#   e "The prefixes idle_, hover_, and insensitive_ are used when the button is unfocused, focused, and unfocusable."
    e "[TRADUCIR: The prefixes idle_, hover_, and insensitive_ are used when the button is unfocused, focused, and unfocusable.]"

#   e "These can be preceded by selected_ to change how the button looks when it represents a selected value or screen."
    e "[TRADUCIR: These can be preceded by selected_ to change how the button looks when it represents a selected value or screen.]"

#   idle_color "#c0c0c0"
    idle_color "[TRADUCIR: #c0c0c0]"

#   hover_color "#ffffff"
    hover_color "[TRADUCIR: #ffffff]"

#   insensitive_color "#303030"
    insensitive_color "[TRADUCIR: #303030]"

#   selected_idle_color "#e0e080"
    selected_idle_color "[TRADUCIR: #e0e080]"

#   selected_hover_color "#ffffc0"
    selected_hover_color "[TRADUCIR: #ffffc0]"

#   style_prefix "styled"
    style_prefix "[TRADUCIR: styled]"

#   textbutton "Button 1"
    textbutton "[TRADUCIR: Button 1]"

#   textbutton "Button 2"
    textbutton "[TRADUCIR: Button 2]"

#   textbutton "Button 3"
    textbutton "[TRADUCIR: Button 3]"

#   e "This screen shows the style prefixes in action. You can click on a button to select it, or click outside to advance."
    e "[TRADUCIR: This screen shows the style prefixes in action. You can click on a button to select it, or click outside to advance.]"

#   e "Those are the basics of styles. If GUI customization isn't enough for you, styles let you customize just about everything in Ren'Py."
    e "[TRADUCIR: Those are the basics of styles. If GUI customization isn't enough for you, styles let you customize just about everything in Ren'Py.]"

#   text _( "Orbiting Earth in the spaceship, I saw how beautiful our planet is.\n–Yuri Gagarin"
    text _( "[TRADUCIR: Orbiting Earth in the spaceship, I saw how beautiful our planet is.\n–Yuri Gagarin]"

#   e "The first group of style properties that we'll go over are the general style properties. These work with every displayable, or at least many different ones."
    e "[TRADUCIR: The first group of style properties that we'll go over are the general style properties. These work with every displayable, or at least many different ones.]"

#   show screen general( "general"
    show screen general( "[TRADUCIR: general]"

#   e "Every displayable takes the position properties, which control where it can be placed on screen. Since I've already mentioned them, I won't repeat them here."
    e "[TRADUCIR: Every displayable takes the position properties, which control where it can be placed on screen. Since I've already mentioned them, I won't repeat them here.]"

#   show screen general( "minmax_general"
    show screen general( "[TRADUCIR: minmax_general]"

#   e "The xmaximum and ymaximum properties set the maximum width and height of the displayable, respectively. This will cause Ren'Py to shrink things, if possible."
    e "[TRADUCIR: The xmaximum and ymaximum properties set the maximum width and height of the displayable, respectively. This will cause Ren'Py to shrink things, if possible.]"

#   e "Sometimes, the shrunken size will be smaller than the size given by xmaximum and ymaximum."
    e "[TRADUCIR: Sometimes, the shrunken size will be smaller than the size given by xmaximum and ymaximum.]"

#   e "Similarly, the xminimum and yminimum properties set the minimum width and height. If the displayable is smaller, Ren'Py will try to make it bigger."
    e "[TRADUCIR: Similarly, the xminimum and yminimum properties set the minimum width and height. If the displayable is smaller, Ren'Py will try to make it bigger.]"

#   show screen general( "xysize_general"
    show screen general( "[TRADUCIR: xysize_general]"

#   e "The xsize and ysize properties set the minimum and maximum size to the same value, fixing the size."
    e "[TRADUCIR: The xsize and ysize properties set the minimum and maximum size to the same value, fixing the size.]"

#   e "These only works for displayables than can be resized. Some displayables, like images, can't be made bigger or smaller."
    e "[TRADUCIR: These only works for displayables than can be resized. Some displayables, like images, can't be made bigger or smaller.]"

#   show screen general( "area_general"
    show screen general( "[TRADUCIR: area_general]"

#   e "The area property takes a tuple - a parenthesis bounded list of four items. The first two give the position, and the second two the size."
    e "[TRADUCIR: The area property takes a tuple - a parenthesis bounded list of four items. The first two give the position, and the second two the size.]"

#   alt _( "\"
    alt _( "[TRADUCIR: \]"

#   show screen general( "alt_general"
    show screen general( "[TRADUCIR: alt_general]"

#   e "Finally, the alt property changes the text used by self-voicing for the hearing impaired."
    e "[TRADUCIR: Finally, the alt property changes the text used by self-voicing for the hearing impaired.]"

#   text _( "Vertical"
    text _( "[TRADUCIR: Vertical]"

#   text _( "Far better it is to dare mighty things, to win glorious triumphs, even though checkered by failure, than to rank with those poor spirits who neither enjoy nor suffer much, because they live in the gray twilight that knows not victory nor defeat.\n\n–Theodore Roosevelt"
    text _( "[TRADUCIR: Far better it is to dare mighty things, to win glorious triumphs, even though checkered by failure, than to rank with those poor spirits who neither enjoy nor suffer much, because they live in the gray twilight that knows not victory nor defeat.\n\n–Theodore Roosevelt]"

#   e "The text style properties apply to text and input displayables."
    e "[TRADUCIR: The text style properties apply to text and input displayables.]"

#   e "Text displayables can be created implicitly or explicitly. For example, a textbutton creates a text displayable with a style ending in button_text."
    e "[TRADUCIR: Text displayables can be created implicitly or explicitly. For example, a textbutton creates a text displayable with a style ending in button_text.]"

#   e "These can also be set in gui.rpy by changing or defining variables with names like gui.button_text_size."
    e "[TRADUCIR: These can also be set in gui.rpy by changing or defining variables with names like gui.button_text_size.]"

#   show screen text( "bold_text"
    show screen text( "[TRADUCIR: bold_text]"

#   e "The bold style property makes the text bold. This can be done using an algorithm, rather than a different version of the font."
    e "[TRADUCIR: The bold style property makes the text bold. This can be done using an algorithm, rather than a different version of the font.]"

#   color "#c0ffc0"
    color "[TRADUCIR: #c0ffc0]"

#   show screen text( "color_text"
    show screen text( "[TRADUCIR: color_text]"

#   e "The color property changes the color of the text. It takes hex color codes, just like everything else in Ren'Py."
    e "[TRADUCIR: The color property changes the color of the text. It takes hex color codes, just like everything else in Ren'Py.]"

#   show screen text( "first_indent_text"
    show screen text( "[TRADUCIR: first_indent_text]"

#   e "The first_indent style property determines how far the first line is indented."
    e "[TRADUCIR: The first_indent style property determines how far the first line is indented.]"

#   font "DejaVuSans-Bold.ttf"
    font "[TRADUCIR: DejaVuSans-Bold.ttf]"

#   show screen text( "font_text"
    show screen text( "[TRADUCIR: font_text]"

#   e "The font style property changes the font the text uses. Ren'Py takes TrueType and OpenType fonts, and you'll have to include the font file as part of your visual novel."
    e "[TRADUCIR: The font style property changes the font the text uses. Ren'Py takes TrueType and OpenType fonts, and you'll have to include the font file as part of your visual novel.]"

#   show screen text( "size_text"
    show screen text( "[TRADUCIR: size_text]"

#   e "The size property changes the size of the text."
    e "[TRADUCIR: The size property changes the size of the text.]"

#   show screen text( "italic_text"
    show screen text( "[TRADUCIR: italic_text]"

#   e "The italic property makes the text italic. Again, this is better done with a font, but for short amounts of text Ren'Py can do it for you."
    e "[TRADUCIR: The italic property makes the text italic. Again, this is better done with a font, but for short amounts of text Ren'Py can do it for you.]"

#   show screen text( "justify_text"
    show screen text( "[TRADUCIR: justify_text]"

#   e "The justify property makes the text justified, lining all but the last line up on the left and the right side."
    e "[TRADUCIR: The justify property makes the text justified, lining all but the last line up on the left and the right side.]"

#   show screen text( "kerning_text"
    show screen text( "[TRADUCIR: kerning_text]"

#   e "The kerning property kerns the text. When it's negative, characters are closer together. When positive, characters are farther apart."
    e "[TRADUCIR: The kerning property kerns the text. When it's negative, characters are closer together. When positive, characters are farther apart.]"

#   show screen text( "leading_spacing_text"
    show screen text( "[TRADUCIR: leading_spacing_text]"

#   e "The line_leading and line_spacing properties put spacing before each line, and between lines, respectively."
    e "[TRADUCIR: The line_leading and line_spacing properties put spacing before each line, and between lines, respectively.]"

#   outlines [ (1, "#408040"
    outlines [ (1, "[TRADUCIR: #408040]"

#   show screen text( "outlines_text"
    show screen text( "[TRADUCIR: outlines_text]"

#   e "The outlines property puts outlines around text. This takes a list of tuples, which is a bit complicated."
    e "[TRADUCIR: The outlines property puts outlines around text. This takes a list of tuples, which is a bit complicated.]"

#   e "But if you ignore the brackets and parenthesis, you have the width of the outline, the color, and then horizontal and vertical offsets."
    e "[TRADUCIR: But if you ignore the brackets and parenthesis, you have the width of the outline, the color, and then horizontal and vertical offsets.]"

#   show screen text( "rest_indent_text"
    show screen text( "[TRADUCIR: rest_indent_text]"

#   e "The rest_indent property controls the indentation of lines after the first one."
    e "[TRADUCIR: The rest_indent property controls the indentation of lines after the first one.]"

#   show screen text( "center_text"
    show screen text( "[TRADUCIR: center_text]"

#   e "The textalign property controls the positioning of multiple lines of text inside the text displayable. For example, 0.5 means centered."
    e "[TRADUCIR: The textalign property controls the positioning of multiple lines of text inside the text displayable. For example, 0.5 means centered.]"

#   e "It doesn't change the position of the text displayable itself. For that, you'll often want to set the textalign and xalign to the same value."
    e "[TRADUCIR: It doesn't change the position of the text displayable itself. For that, you'll often want to set the textalign and xalign to the same value.]"

#   show screen text( "right_text"
    show screen text( "[TRADUCIR: right_text]"

#   e "When both textalign and xalign are set to 1.0, the text is properly right-justified."
    e "[TRADUCIR: When both textalign and xalign are set to 1.0, the text is properly right-justified.]"

#   show screen text( "underline_text"
    show screen text( "[TRADUCIR: underline_text]"

#   e "The underline property underlines the text."
    e "[TRADUCIR: The underline property underlines the text.]"

#   e "Those are the most common text style properties, but not the only ones. Here are a few more that you might need in special circumstances."
    e "[TRADUCIR: Those are the most common text style properties, but not the only ones. Here are a few more that you might need in special circumstances.]"

#   show screen text( "antialias_text"
    show screen text( "[TRADUCIR: antialias_text]"

#   e "By default, text in Ren'Py is antialiased, to smooth the edges. The antialias property can turn that off, and make the text a little more jagged."
    e "[TRADUCIR: By default, text in Ren'Py is antialiased, to smooth the edges. The antialias property can turn that off, and make the text a little more jagged.]"

#   show screen text( "adjust_true_text"
    show screen text( "[TRADUCIR: adjust_true_text]"

#   e "The adjust_spacing property is a very subtle one, that only matters when a player resizes the window. When True, characters will be shifted a bit so the Text has the same relative spacing."
    e "[TRADUCIR: The adjust_spacing property is a very subtle one, that only matters when a player resizes the window. When True, characters will be shifted a bit so the Text has the same relative spacing.]"

#   show screen text( "adjust_false_text"
    show screen text( "[TRADUCIR: adjust_false_text]"

#   e "When False, the text won't jump around as much. But it can be a little wider or narrower based on screen size."
    e "[TRADUCIR: When False, the text won't jump around as much. But it can be a little wider or narrower based on screen size.]"

#   layout "nobreak"
    layout "[TRADUCIR: nobreak]"

#   show screen text( "layout_nobreak_text"
    show screen text( "[TRADUCIR: layout_nobreak_text]"

#   e "The layout property has a few special values that control where lines are broken. The 'nobreak' value disables line breaks entirely, making the text wider."
    e "[TRADUCIR: The layout property has a few special values that control where lines are broken. The 'nobreak' value disables line breaks entirely, making the text wider.]"

#   layout "subtitle"
    layout "[TRADUCIR: subtitle]"

#   show screen text( "layout_subtitle_text"
    show screen text( "[TRADUCIR: layout_subtitle_text]"

#   e "When the layout property is set to 'subtitle', the line breaking algorithm is changed to try to make all lines even in length, as subtitles usually are."
    e "[TRADUCIR: When the layout property is set to 'subtitle', the line breaking algorithm is changed to try to make all lines even in length, as subtitles usually are.]"

#   show screen text( "strikethrough_text"
    show screen text( "[TRADUCIR: strikethrough_text]"

#   e "The strikethrough property draws a line through the text. It seems pretty unlikely you'd want to use this one."
    e "[TRADUCIR: The strikethrough property draws a line through the text. It seems pretty unlikely you'd want to use this one.]"

#   show screen text( "vertical_text"
    show screen text( "[TRADUCIR: vertical_text]"

#   e "The vertical style property places text in a vertical layout. It's meant for Asian languages with special fonts."
    e "[TRADUCIR: The vertical style property places text in a vertical layout. It's meant for Asian languages with special fonts.]"

#   e "And those are the text style properties. There might be a lot of them, but we want to give you a lot of control over how you present text to your players."
    e "[TRADUCIR: And those are the text style properties. There might be a lot of them, but we want to give you a lot of control over how you present text to your players.]"

#   default selected = "top"
    default selected = "[TRADUCIR: top]"

#   background "#0004"
    background "[TRADUCIR: #0004]"

#   textbutton _( "Top Choice"
    textbutton _( "[TRADUCIR: Top Choice]"

#   action SetScreenVariable( "selected"
    action SetScreenVariable( "[TRADUCIR: selected]"

#   text_style "example_button_text"
    text_style "[TRADUCIR: example_button_text]"

#   textbutton _( "Bottom Choice"
    textbutton _( "[TRADUCIR: Bottom Choice]"

#   action SetScreenVariable( "selected"
    action SetScreenVariable( "[TRADUCIR: selected]"

#   text_style "example_button_text"
    text_style "[TRADUCIR: example_button_text]"

#   color "#404040"
    color "[TRADUCIR: #404040]"

#   hover_color "#4040c0"
    hover_color "[TRADUCIR: #4040c0]"

#   e "Next up, we have the window and button style properties. These apply to windows like the text window at the bottom of this screen and frames like the ones we show examples in."
    e "[TRADUCIR: Next up, we have the window and button style properties. These apply to windows like the text window at the bottom of this screen and frames like the ones we show examples in.]"

#   e "These properties also apply to buttons, in-game and out-of-game. To Ren'Py, a button is a window you can click."
    e "[TRADUCIR: These properties also apply to buttons, in-game and out-of-game. To Ren'Py, a button is a window you can click.]"

#   idle_background Frame( "idle_background.png"
    idle_background Frame( "[TRADUCIR: idle_background.png]"

#   hover_background Frame( "hover_background.png"
    hover_background Frame( "[TRADUCIR: hover_background.png]"

#   e "I'll start off with this style, which everything will inherit from. To make our lives easier, it inherits from the default style, rather than the customized buttons in this game's GUI."
    e "[TRADUCIR: I'll start off with this style, which everything will inherit from. To make our lives easier, it inherits from the default style, rather than the customized buttons in this game's GUI.]"

#   e "The first style property is the background property. It adds a background to a button or window. Since this is a button, idle and hover variants choose different backgrounds when focused."
    e "[TRADUCIR: The first style property is the background property. It adds a background to a button or window. Since this is a button, idle and hover variants choose different backgrounds when focused.]"

#   e "We also center the two buttons, using the xalign position property."
    e "[TRADUCIR: We also center the two buttons, using the xalign position property.]"

#   e "We've also customized the style of the button's text, using this style. It centers the text and makes it change color when hovered."
    e "[TRADUCIR: We've also customized the style of the button's text, using this style. It centers the text and makes it change color when hovered.]"

#   e "Without any padding around the text, the button looks odd. Ren'Py has padding properties that add space inside the button's background."
    e "[TRADUCIR: Without any padding around the text, the button looks odd. Ren'Py has padding properties that add space inside the button's background.]"

#   e "More commonly used are the xpadding and ypadding style properties, which add the same padding to the left and right, or the top and bottom, respectively."
    e "[TRADUCIR: More commonly used are the xpadding and ypadding style properties, which add the same padding to the left and right, or the top and bottom, respectively.]"

#   e "The margin style properties work the same way, except they add space outside the background. The full set exists: left_margin, right_margin, top_margin, bottom_margin, xmargin, and ymargin."
    e "[TRADUCIR: The margin style properties work the same way, except they add space outside the background. The full set exists: left_margin, right_margin, top_margin, bottom_margin, xmargin, and ymargin.]"

#   size_group "example"
    size_group "[TRADUCIR: example]"

#   e "The size_group style property takes a string. Ren'Py will make sure that all the windows or buttons with the same size_group string are the same size."
    e "[TRADUCIR: The size_group style property takes a string. Ren'Py will make sure that all the windows or buttons with the same size_group string are the same size.]"

#   e "Alternatively, the xfill and yfill style properties make a button take up all available space in the horizontal or vertical directions."
    e "[TRADUCIR: Alternatively, the xfill and yfill style properties make a button take up all available space in the horizontal or vertical directions.]"

#   foreground "check_foreground.png"
    foreground "[TRADUCIR: check_foreground.png]"

#   selected_foreground "check_selected_foreground.png"
    selected_foreground "[TRADUCIR: check_selected_foreground.png]"

#   e "The foreground property gives a displayable that is placed on top of the contents and background of the window or button."
    e "[TRADUCIR: The foreground property gives a displayable that is placed on top of the contents and background of the window or button.]"

#   e "One way to use it is to provide extra decorations to a button that's serving as a checkbox. Another would be to use it with a Frame to provide a glossy shine that overlays the button's contents."
    e "[TRADUCIR: One way to use it is to provide extra decorations to a button that's serving as a checkbox. Another would be to use it with a Frame to provide a glossy shine that overlays the button's contents.]"

#   hover_sound "pong_beep.opus"
    hover_sound "[TRADUCIR: pong_beep.opus]"

#   activate_sound "pong_boop.opus"
    activate_sound "[TRADUCIR: pong_boop.opus]"

#   e "There are also a few style properties that only apply to buttons. The hover_sound and activate_sound properties play sound files when a button is focused and activated, respectively."
    e "[TRADUCIR: There are also a few style properties that only apply to buttons. The hover_sound and activate_sound properties play sound files when a button is focused and activated, respectively.]"

#   e "Finally, the focus_mask property applies to partially transparent buttons. When it's set to True, only areas of the button that aren't transparent cause a button to focus."
    e "[TRADUCIR: Finally, the focus_mask property applies to partially transparent buttons. When it's set to True, only areas of the button that aren't transparent cause a button to focus.]"

#   value ScreenVariableValue( "measure"
    value ScreenVariableValue( "[TRADUCIR: measure]"

#   text "[measure:.0f]/100"
    text "[TRADUCIR: [measure:.0f]/100]"

#   value ScreenVariableValue( "measure"
    value ScreenVariableValue( "[TRADUCIR: measure]"

#   text "[measure:.0f]/100"
    text "[TRADUCIR: [measure:.0f]/100]"

#   image bar empty idle vertical = Transform( "bar empty idle"
    image bar empty idle vertical = Transform( "[TRADUCIR: bar empty idle]"

#   image bar empty hover vertical  = Transform( "bar empty hover"
    image bar empty hover vertical  = Transform( "[TRADUCIR: bar empty hover]"

#   image bar full idle vertical = Transform( "bar full idle"
    image bar full idle vertical = Transform( "[TRADUCIR: bar full idle]"

#   image bar full hover vertical = Transform( "bar full hover"
    image bar full hover vertical = Transform( "[TRADUCIR: bar full hover]"

#   left_bar Frame( "bar empty idle.png"
    left_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_left_bar Frame( "bar empty hover.png"
    hover_left_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   right_bar Frame( "bar empty idle.png"
    right_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_right_bar Frame( "bar empty hover.png"
    hover_right_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   left_bar Frame( "bar full idle.png"
    left_bar Frame( "[TRADUCIR: bar full idle.png]"

#   hover_left_bar Frame( "bar full hover.png"
    hover_left_bar Frame( "[TRADUCIR: bar full hover.png]"

#   right_bar Frame( "bar full idle.png"
    right_bar Frame( "[TRADUCIR: bar full idle.png]"

#   hover_right_bar Frame( "bar full hover.png"
    hover_right_bar Frame( "[TRADUCIR: bar full hover.png]"

#   show screen bar( "empty_only"
    show screen bar( "[TRADUCIR: empty_only]"

#   e "To demonstrate styles, let me first show two of the images we'll be using. This is the image we're using for parts of the bar that are empty."
    e "[TRADUCIR: To demonstrate styles, let me first show two of the images we'll be using. This is the image we're using for parts of the bar that are empty.]"

#   show screen bar( "full_only"
    show screen bar( "[TRADUCIR: full_only]"

#   e "And here's what we use for parts of the bar that are full."
    e "[TRADUCIR: And here's what we use for parts of the bar that are full.]"

#   left_bar Frame( "bar full idle.png"
    left_bar Frame( "[TRADUCIR: bar full idle.png]"

#   hover_left_bar Frame( "bar full hover.png"
    hover_left_bar Frame( "[TRADUCIR: bar full hover.png]"

#   right_bar Frame( "bar empty idle.png"
    right_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_right_bar Frame( "bar empty hover.png"
    hover_right_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   e "The left_bar and right_bar style properties, and their hover variants, give displayables for the left and right side of the bar. By default, the value is shown on the left."
    e "[TRADUCIR: The left_bar and right_bar style properties, and their hover variants, give displayables for the left and right side of the bar. By default, the value is shown on the left.]"

#   e "Also by default, both the left and right displayables are rendered at the full width of the bar, and then cropped to the appropriate size."
    e "[TRADUCIR: Also by default, both the left and right displayables are rendered at the full width of the bar, and then cropped to the appropriate size.]"

#   e "We give the bar the ysize property to set how tall it is. We could also give it xsize to choose how wide, but here it's limited by the width of the frame it's in."
    e "[TRADUCIR: We give the bar the ysize property to set how tall it is. We could also give it xsize to choose how wide, but here it's limited by the width of the frame it's in.]"

#   left_bar Frame( "bar empty idle.png"
    left_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_left_bar Frame( "bar empty hover.png"
    hover_left_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   right_bar Frame( "bar full idle.png"
    right_bar Frame( "[TRADUCIR: bar full idle.png]"

#   hover_right_bar Frame( "bar full hover.png"
    hover_right_bar Frame( "[TRADUCIR: bar full hover.png]"

#   e "When the bar_invert style property is True, the bar value is displayed on the right side of the bar. The left_bar and right_bar displayables might also need to be swapped."
    e "[TRADUCIR: When the bar_invert style property is True, the bar value is displayed on the right side of the bar. The left_bar and right_bar displayables might also need to be swapped.]"

#   left_bar Frame( "bar full idle.png"
    left_bar Frame( "[TRADUCIR: bar full idle.png]"

#   hover_left_bar Frame( "bar full hover.png"
    hover_left_bar Frame( "[TRADUCIR: bar full hover.png]"

#   right_bar Frame( "bar empty idle.png"
    right_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_right_bar Frame( "bar empty hover.png"
    hover_right_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   e "The bar_resizing style property causes the bar images to be resized to represent the value, rather than being rendered at full size and cropped."
    e "[TRADUCIR: The bar_resizing style property causes the bar images to be resized to represent the value, rather than being rendered at full size and cropped.]"

#   thumb "bar thumb idle.png"
    thumb "[TRADUCIR: bar thumb idle.png]"

#   hover_thumb "bar thumb hover.png"
    hover_thumb "[TRADUCIR: bar thumb hover.png]"

#   base_bar Frame( "bar empty idle.png"
    base_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_base_bar Frame( "bar empty hover.png"
    hover_base_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   e "The thumb style property gives a thumb image, that's placed based on the bar's value. In the case of a scrollbar, it's resized if possible."
    e "[TRADUCIR: The thumb style property gives a thumb image, that's placed based on the bar's value. In the case of a scrollbar, it's resized if possible.]"

#   e "Here, we use it with the base_bar style property, which sets both bar images to the same displayable."
    e "[TRADUCIR: Here, we use it with the base_bar style property, which sets both bar images to the same displayable.]"

#   thumb "bar thumb idle.png"
    thumb "[TRADUCIR: bar thumb idle.png]"

#   hover_thumb "bar thumb hover.png"
    hover_thumb "[TRADUCIR: bar thumb hover.png]"

#   base_bar Frame( "bar empty idle.png"
    base_bar Frame( "[TRADUCIR: bar empty idle.png]"

#   hover_base_bar Frame( "bar empty hover.png"
    hover_base_bar Frame( "[TRADUCIR: bar empty hover.png]"

#   e "The left_gutter and right_gutter properties set a gutter on the left or right size of the bar. The gutter is space the bar can't be dragged into, that can be used for borders."
    e "[TRADUCIR: The left_gutter and right_gutter properties set a gutter on the left or right size of the bar. The gutter is space the bar can't be dragged into, that can be used for borders.]"

#   top_bar Frame( "bar empty idle vertical"
    top_bar Frame( "[TRADUCIR: bar empty idle vertical]"

#   hover_top_bar Frame( "bar empty hover vertical"
    hover_top_bar Frame( "[TRADUCIR: bar empty hover vertical]"

#   bottom_bar Frame( "bar full idle vertical"
    bottom_bar Frame( "[TRADUCIR: bar full idle vertical]"

#   hover_bottom_bar Frame( "bar full hover vertical"
    hover_bottom_bar Frame( "[TRADUCIR: bar full hover vertical]"

#   e "The bar_vertical style property displays a vertically oriented bar. All of the other properties change names - left_bar becomes top_bar, while right_bar becomes bottom_bar."
    e "[TRADUCIR: The bar_vertical style property displays a vertically oriented bar. All of the other properties change names - left_bar becomes top_bar, while right_bar becomes bottom_bar.]"

#   e "Finally, there's one style we can't show here, and it's unscrollable. It controls what happens when a scrollbar can't be moved at all."
    e "[TRADUCIR: Finally, there's one style we can't show here, and it's unscrollable. It controls what happens when a scrollbar can't be moved at all.]"

#   e "By default, it's shown. But if unscrollable is 'insensitive', the bar becomes insensitive. If it's 'hide', the bar is hidden, but still takes up space."
    e "[TRADUCIR: By default, it's shown. But if unscrollable is 'insensitive', the bar becomes insensitive. If it's 'hide', the bar is hidden, but still takes up space.]"

#   e "That's it for the bar properties. By using them, a creator can customize bars, scrollbars, and sliders."
    e "[TRADUCIR: That's it for the bar properties. By using them, a creator can customize bars, scrollbars, and sliders.]"

#   screen hbox(style, wide, highlight= "#fff2"
    screen hbox(style, wide, highlight= "[TRADUCIR: #fff2]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   text _( "First Child"
    text _( "[TRADUCIR: First Child]"

#   text _( "Second Child"
    text _( "[TRADUCIR: Second Child]"

#   text _( "Third Child"
    text _( "[TRADUCIR: Third Child]"

#   text _( "Fourth Child"
    text _( "[TRADUCIR: Fourth Child]"

#   text _( "Fifth Child"
    text _( "[TRADUCIR: Fifth Child]"

#   text _( "Sixth Child"
    text _( "[TRADUCIR: Sixth Child]"

#   screen vbox(style, highlight= "#fff2"
    screen vbox(style, highlight= "[TRADUCIR: #fff2]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   text _( "First Child"
    text _( "[TRADUCIR: First Child]"

#   text _( "Second Child"
    text _( "[TRADUCIR: Second Child]"

#   text _( "Third Child"
    text _( "[TRADUCIR: Third Child]"

#   text _( "First Child"
    text _( "[TRADUCIR: First Child]"

#   text _( "Second Child"
    text _( "[TRADUCIR: Second Child]"

#   text _( "Third Child"
    text _( "[TRADUCIR: Third Child]"

#   text _( "Fourth Child"
    text _( "[TRADUCIR: Fourth Child]"

#   text _( "Fifth Child"
    text _( "[TRADUCIR: Fifth Child]"

#   text _( "Sixth Child"
    text _( "[TRADUCIR: Sixth Child]"

#   style "empty"
    style "[TRADUCIR: empty]"

#   background "#fff2"
    background "[TRADUCIR: #fff2]"

#   add Transform( "logo base"
    add Transform( "[TRADUCIR: logo base]"

#   text "Ren'Py"
    text "[TRADUCIR: Ren'Py]"

#   font "DejaVuSans.ttf"
    font "[TRADUCIR: DejaVuSans.ttf]"

#   outlines [ (2, "#333"
    outlines [ (2, "[TRADUCIR: #333]"

#   e "The hbox displayable is used to lay its children out horizontally. By default, there's no spacing between children, so they run together."
    e "[TRADUCIR: The hbox displayable is used to lay its children out horizontally. By default, there's no spacing between children, so they run together.]"

#   e "Similarly, the vbox displayable is used to lay its children out vertically. Both support style properties that control placement."
    e "[TRADUCIR: Similarly, the vbox displayable is used to lay its children out vertically. Both support style properties that control placement.]"

#   e "To make the size of the box displayable obvious, I'll add a highlight to the box itself, and not the frame containing it."
    e "[TRADUCIR: To make the size of the box displayable obvious, I'll add a highlight to the box itself, and not the frame containing it.]"

#   e "Boxes support the xfill and yfill style properties. These properties make a box expand to fill the available space, rather than the space of the largest child."
    e "[TRADUCIR: Boxes support the xfill and yfill style properties. These properties make a box expand to fill the available space, rather than the space of the largest child.]"

#   e "The spacing style property takes a value in pixels, and adds that much spacing between each child of the box."
    e "[TRADUCIR: The spacing style property takes a value in pixels, and adds that much spacing between each child of the box.]"

#   e "The first_spacing style property is similar, but it only adds space between the first and second children. This is useful when the first child is a title that needs different spacing."
    e "[TRADUCIR: The first_spacing style property is similar, but it only adds space between the first and second children. This is useful when the first child is a title that needs different spacing.]"

#   e "The box_reverse style property reverses the order of entries in the box."
    e "[TRADUCIR: The box_reverse style property reverses the order of entries in the box.]"

#   show screen hbox( "spacing_hbox"
    show screen hbox( "[TRADUCIR: spacing_hbox]"

#   e "We'll switch back to a horizontal box for our next example."
    e "[TRADUCIR: We'll switch back to a horizontal box for our next example.]"

#   show screen hbox( "wrap_hbox"
    show screen hbox( "[TRADUCIR: wrap_hbox]"

#   e "The box_wrap style property fills the box with children until it's full, then starts again on the next line."
    e "[TRADUCIR: The box_wrap style property fills the box with children until it's full, then starts again on the next line.]"

#   e "Grids bring with them two more style properties. The xspacing and yspacing properties control spacing in the horizontal and vertical directions, respectively."
    e "[TRADUCIR: Grids bring with them two more style properties. The xspacing and yspacing properties control spacing in the horizontal and vertical directions, respectively.]"

#   e "Lastly, we have the fixed layout. The fixed layout usually expands to fill all space, and shows its children from back to front."
    e "[TRADUCIR: Lastly, we have the fixed layout. The fixed layout usually expands to fill all space, and shows its children from back to front.]"

#   e "But of course, we have some style properties that can change that."
    e "[TRADUCIR: But of course, we have some style properties that can change that.]"

#   e "When the xfit style property is True, the fixed lays out all its children as if it was full size, and then shrinks in width to fit them. The yfit style works the same way, but in height."
    e "[TRADUCIR: When the xfit style property is True, the fixed lays out all its children as if it was full size, and then shrinks in width to fit them. The yfit style works the same way, but in height.]"

#   e "The order_reverse style property changes the order in which the children are shown. Instead of back-to-front, they're displayed front-to-back."
    e "[TRADUCIR: The order_reverse style property changes the order in which the children are shown. Instead of back-to-front, they're displayed front-to-back.]"

#   e "Sometimes it's hard to figure out what style is being used for a particular displayable. The displayable inspector can help with that."
    e "[TRADUCIR: Sometimes it's hard to figure out what style is being used for a particular displayable. The displayable inspector can help with that.]"

#   e "To use it, place the mouse over a portion of the Ren'Py user interface, and hit shift+I. That's I for inspector."
    e "[TRADUCIR: To use it, place the mouse over a portion of the Ren'Py user interface, and hit shift+I. That's I for inspector.]"

#   e "Ren'Py will pop up a list of displayables the mouse is over. Next to each is the name of the style that displayable uses."
    e "[TRADUCIR: Ren'Py will pop up a list of displayables the mouse is over. Next to each is the name of the style that displayable uses.]"

#   e "You can click on the name of the style to see where it gets its properties from."
    e "[TRADUCIR: You can click on the name of the style to see where it gets its properties from.]"

#   e "By default, the inspector only shows interface elements like screens, and not images. Type shift+alt+I if you'd like to see images as well."
    e "[TRADUCIR: By default, the inspector only shows interface elements like screens, and not images. Type shift+alt+I if you'd like to see images as well.]"

#   e "You can try the inspector right now, by hovering this text and hitting shift+I."
    e "[TRADUCIR: You can try the inspector right now, by hovering this text and hitting shift+I.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\indepth_text.rpy DIALOGOS: 62

#   #     _( "Eileen"
    #     _( "[TRADUCIR: Eileen]"

#   #     color= "#c8ffc8"
    #     color= "[TRADUCIR: #c8ffc8]"

#   e "You just clicked to jump to a label."
    e "[TRADUCIR: You just clicked to jump to a label.]"

#   e "Sometimes, when showing text, we'll want to change the way some of the text is displayed."
    e "[TRADUCIR: Sometimes, when showing text, we'll want to change the way some of the text is displayed.]"

#   e "For example, we might want to have text that is {b}bold{/b}, {i}italic{/i}, {s}struckthrough{/s}, or {u}underlined{/u}."
    e "[TRADUCIR: For example, we might want to have text that is {b}bold{/b}, {i}italic{/i}, {s}struckthrough{/s}, or {u}underlined{/u}.]"

#   e "That's what text tags are for."
    e "[TRADUCIR: That's what text tags are for.]"

#   e "Text tags are contained in braces, like the {{b} tag above. When a text tag takes a closing tag, the closing tag begins with a slash, like {{/b} does."
    e "[TRADUCIR: Text tags are contained in braces, like the {{b} tag above. When a text tag takes a closing tag, the closing tag begins with a slash, like {{/b} does.]"

#   e "We've already seen the b, i, s, and u tags, but there are lot more than those. I'll show you the rest of them."
    e "[TRADUCIR: We've already seen the b, i, s, and u tags, but there are lot more than those. I'll show you the rest of them.]"

#   e "The a text tag can {a=https://www.renpy.org}link to a website{/a} or {a=jump:a_label}jump to a label{/a}."
    e "[TRADUCIR: The a text tag can {a=https://www.renpy.org}link to a website{/a} or {a=jump:a_label}jump to a label{/a}.]"

#   e "The alpha text tag makes text {alpha=.5}translucent{/alpha}."
    e "[TRADUCIR: The alpha text tag makes text {alpha=.5}translucent{/alpha}.]"

#   e "The color text tag changes the {color=#0080c0}color{/color} of the text."
    e "[TRADUCIR: The color text tag changes the {color=#0080c0}color{/color} of the text.]"

#   e "The cps text tag {cps=25}makes text type itself out slowly{/cps}, even if slow text is off."
    e "[TRADUCIR: The cps text tag {cps=25}makes text type itself out slowly{/cps}, even if slow text is off.]"

#   e "The cps tag can also be relative to the default speed, {cps=*2}doubling{/cps} or {cps=*0.5}halving{/cps} it."
    e "[TRADUCIR: The cps tag can also be relative to the default speed, {cps=*2}doubling{/cps} or {cps=*0.5}halving{/cps} it.]"

#   e "The font tag changes the font, for example to {font=DejaVuSans-Bold.ttf}DejaVuSans-Bold.ttf{/font}."
    e "[TRADUCIR: The font tag changes the font, for example to {font=DejaVuSans-Bold.ttf}DejaVuSans-Bold.ttf{/font}.]"

#   e "Sometimes, changing to a bold font looks better than using the {{b} tag."
    e "[TRADUCIR: Sometimes, changing to a bold font looks better than using the {{b} tag.]"

#   e "The k tag changes kerning. It can space the letters of a word {k=-.5}closer together{/k} or {k=.5}farther apart{/k}."
    e "[TRADUCIR: The k tag changes kerning. It can space the letters of a word {k=-.5}closer together{/k} or {k=.5}farther apart{/k}.]"

#   e "The size tag changes the size of text. It can make text {size=+10}bigger{/size} or {size=-10}smaller{/size}, or set it to a {size=30}fixed size{/size}."
    e "[TRADUCIR: The size tag changes the size of text. It can make text {size=+10}bigger{/size} or {size=-10}smaller{/size}, or set it to a {size=30}fixed size{/size}.]"

#   e "The space tag {space=30} adds horizontal space in text.{vspace=30}The vspace tag adds vertical space between lines."
    e "[TRADUCIR: The space tag {space=30} adds horizontal space in text.{vspace=30}The vspace tag adds vertical space between lines.]"

#   e "There are a few text tags that only makes sense in dialogue."
    e "[TRADUCIR: There are a few text tags that only makes sense in dialogue.]"

#   e "The p tag breaks a paragraph,{p}and waits for the player to click."
    e "[TRADUCIR: The p tag breaks a paragraph,{p}and waits for the player to click.]"

#   e "If it is given a number as an argument,{p=1.5}it waits that many seconds."
    e "[TRADUCIR: If it is given a number as an argument,{p=1.5}it waits that many seconds.]"

#   e "The w tag also waits for a click,{w} except it doesn't break lines,{w=.5} the way p does."
    e "[TRADUCIR: The w tag also waits for a click,{w} except it doesn't break lines,{w=.5} the way p does.]"

#   eslow "The nw tag causes Ren'Py to continue past slow text,{nw}"
    eslow "[TRADUCIR: The nw tag causes Ren'Py to continue past slow text,{nw}]"

#   extend "to the next statement."
    extend "[TRADUCIR: to the next statement.]"

#   e "To break a line without pausing,\none can write \\n. \\' and \\\"
    e "[TRADUCIR: To break a line without pausing,\none can write \\n. \\' and \\\]"

#   e "The interpolation feature takes a variable name in square brackets, and inserts it into text."
    e "[TRADUCIR: The interpolation feature takes a variable name in square brackets, and inserts it into text.]"

#   $ variable = _( "{i}variable value{/i}"
    $ variable = _( "[TRADUCIR: {i}variable value{/i}]"

#   e "For example, this displays the [variable!t]."
    e "[TRADUCIR: For example, this displays the [variable!t].]"

#   e "When the variable name is followed by !q, special characters are quoted. This displays the raw [variable!q!t], including the italics tags."
    e "[TRADUCIR: When the variable name is followed by !q, special characters are quoted. This displays the raw [variable!q!t], including the italics tags.]"

#   $ translatable = _( "translatable text"
    $ translatable = _( "[TRADUCIR: translatable text]"

#   e "When the variable name is followed by !t, it is translated to [variable!t]. It could be something else in a different language."
    e "[TRADUCIR: When the variable name is followed by !t, it is translated to [variable!t]. It could be something else in a different language.]"

#   e "Finally, certain characters are special. [[, {{, and \\ need to be doubled if included in text. The %% character should be doubled if used in dialogue."
    e "[TRADUCIR: Finally, certain characters are special. [[, {{, and \\ need to be doubled if included in text. The %% character should be doubled if used in dialogue.]"

#   #     e "Ren'Py gives you quite a bit of control over how text appears."
    #     e "[TRADUCIR: Ren'Py gives you quite a bit of control over how text appears.]"

#   #     e "Text tags let us control the appearance of text that is shown to the user."
    #     e "[TRADUCIR: Text tags let us control the appearance of text that is shown to the user.]"

#   #     e "Text tags can make text {b}bold{/b}, {i}italic{/i}, {s}struckthrough{/s}, or {u}underlined{/u}."
    #     e "[TRADUCIR: Text tags can make text {b}bold{/b}, {i}italic{/i}, {s}struckthrough{/s}, or {u}underlined{/u}.]"

#   #     e "They can make the font size {size=+12}bigger{/size} or {size=-8}smaller{/size}."
    #     e "[TRADUCIR: They can make the font size {size=+12}bigger{/size} or {size=-8}smaller{/size}.]"

#   #     e "They let you pause{w} the display of the text, optionally with{p}line breaks."
    #     e "[TRADUCIR: They let you pause{w} the display of the text, optionally with{p}line breaks.]"

#   #     e "They let you include images inside text{image=exclamation.png} Neat{image=exclamation.png}"
    #     e "[TRADUCIR: They let you include images inside text{image=exclamation.png} Neat{image=exclamation.png}]"

#   #     e "We can pause the text for a short time, and have it auto-advance.{w=1} Just like that."
    #     e "[TRADUCIR: We can pause the text for a short time, and have it auto-advance.{w=1} Just like that.]"

#   #     eslow "We can even have the text auto-advance,{nw}"
    #     eslow "[TRADUCIR: We can even have the text auto-advance,{nw}]"

#   #     extend "when we reach the end of a block of text, in slow text mode."
    #     extend "[TRADUCIR: when we reach the end of a block of text, in slow text mode.]"

#   #     e "They can change the {color=#f00}color{/color} {color=#ff0}of{/color} {color=#0f0}the{/color} {color=#0ff}text{/color}."
    #     e "[TRADUCIR: They can change the {color=#f00}color{/color} {color=#ff0}of{/color} {color=#0f0}the{/color} {color=#0ff}text{/color}.]"

#   #     # e "There are also bold, italic, strikethrough, and underline style properties, which can be styled onto any text."
    #     # e "[TRADUCIR: There are also bold, italic, strikethrough, and underline style properties, which can be styled onto any text.]"

#   #     e "The kerning tag lets you adjust the spacing between characters.\n{k=.5}The spacing between characters can be increased.{/k}\n{k=-.5}The spacing between characters can be decreased.{/k}"
    #     e "[TRADUCIR: The kerning tag lets you adjust the spacing between characters.\n{k=.5}The spacing between characters can be increased.{/k}\n{k=-.5}The spacing between characters can be decreased.{/k}]"

#   #     eruby "You are able to write ruby text, which can help clarify how to pronounce words, like {rb}Ren'Py{/rb}{rt}ren-pie{/rt}."
    #     eruby "[TRADUCIR: You are able to write ruby text, which can help clarify how to pronounce words, like {rb}Ren'Py{/rb}{rt}ren-pie{/rt}.]"

#   #     e "{a=define_hyperlink}Hyperlinks{/a} let buttons be defined using text tags."
    #     e "[TRADUCIR: {a=define_hyperlink}Hyperlinks{/a} let buttons be defined using text tags.]"

#   #     e "The space and vspace tags add {space=30} horizontal and {vspace=20}vertical space, respectively."
    #     e "[TRADUCIR: The space and vspace tags add {space=30} horizontal and {vspace=20}vertical space, respectively.]"

#   #     e "You can define your own text tags, {=pink}that use a style you define.{/=pink}"
    #     e "[TRADUCIR: You can define your own text tags, {=pink}that use a style you define.{/=pink}]"

#   #     e "If you find yourself using text tags on every line, you should probably look at style properties instead."
    #     e "[TRADUCIR: If you find yourself using text tags on every line, you should probably look at style properties instead.]"

#   #     e "Used with care, text tags can enhance {b}your{/b} game."
    #     e "[TRADUCIR: Used with care, text tags can enhance {b}your{/b} game.]"

#   #     e "{u}Used{/u} with {i}abandon,{/i} they {b}can{/b} make {b}your{/b} game {color=#333}hard{/color} {color=#888}to{/color} {color=#ccc}read{/color}."
    #     e "[TRADUCIR: {u}Used{/u} with {i}abandon,{/i} they {b}can{/b} make {b}your{/b} game {color=#333}hard{/color} {color=#888}to{/color} {color=#ccc}read{/color}.]"

#   #     e "With great power comes great responsibility, after all."
    #     e "[TRADUCIR: With great power comes great responsibility, after all.]"

#   #     e "And we want to give you all the power you need."
    #     e "[TRADUCIR: And we want to give you all the power you need.]"

#   #     e "There are a couple of text adjustments that don't correspond to text tags."
    #     e "[TRADUCIR: There are a couple of text adjustments that don't correspond to text tags.]"

#   #     eoutline "The outlines setting lets you put outlines around the text."
    #     eoutline "[TRADUCIR: The outlines setting lets you put outlines around the text.]"

#   #     eoutline "You can have more than one outline, and each has its own color and offset."
    #     eoutline "[TRADUCIR: You can have more than one outline, and each has its own color and offset.]"

#   #     esubtitle "Here, we have two outlines around the white text."
    #     esubtitle "[TRADUCIR: Here, we have two outlines around the white text.]"

#   #     esubtitle "The bottom one is a translucent black that's offset a little, while the top one is green."
    #     esubtitle "[TRADUCIR: The bottom one is a translucent black that's offset a little, while the top one is green.]"

#   #     esubtitle "By hiding the window and adjusting the layout method, we are able to create reasonable subtitles."
    #     esubtitle "[TRADUCIR: By hiding the window and adjusting the layout method, we are able to create reasonable subtitles.]"

#   #     esubtitle "This might be an interesting look for a game."
    #     esubtitle "[TRADUCIR: This might be an interesting look for a game.]"

#   #     e "Well, that's it for fonts and text tags."
    #     e "[TRADUCIR: Well, that's it for fonts and text tags.]"

#   #     definition "A hyperlink is a button that is defined inside text, using text tags. They're ideal for including definitions of words used in the script, but they shouldn't be used in place of menus."
    #     definition "[TRADUCIR: A hyperlink is a button that is defined inside text, using text tags. They're ideal for including definitions of words used in the script, but they shouldn't be used in place of menus.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\indepth_transitions.rpy DIALOGOS: 97

#   define circleirisout = ImageDissolve( "imagedissolve circleiris.png"
    define circleirisout = ImageDissolve( "[TRADUCIR: imagedissolve circleiris.png]"

#   define circleirisin = ImageDissolve( "imagedissolve circleiris.png"
    define circleirisin = ImageDissolve( "[TRADUCIR: imagedissolve circleiris.png]"

#   define circlewipe = ImageDissolve( "imagedissolve circlewipe.png"
    define circlewipe = ImageDissolve( "[TRADUCIR: imagedissolve circlewipe.png]"

#   define dream = ImageDissolve( "imagedissolve dream.png"
    define dream = ImageDissolve( "[TRADUCIR: imagedissolve dream.png]"

#   define teleport = ImageDissolve( "imagedissolve teleport.png"
    define teleport = ImageDissolve( "[TRADUCIR: imagedissolve teleport.png]"

#   image bg circleiris = "imagedissolve circleiris"
    image bg circleiris = "[TRADUCIR: imagedissolve circleiris]"

#   image bg teleport = "imagedissolve teleport"
    image bg teleport = "[TRADUCIR: imagedissolve teleport]"

#   "spotlight.png"
    "[TRADUCIR: spotlight.png]"

#   define alpha_example = AlphaDissolve( "alpha_control"
    define alpha_example = AlphaDissolve( "[TRADUCIR: alpha_control]"

#   e "Ren'Py ships with a large number of built-in transitions, and also includes classes that let you define your own."
    e "[TRADUCIR: Ren'Py ships with a large number of built-in transitions, and also includes classes that let you define your own.]"

#   e "What kind of transitions would you like demonstrated?"
    e "[TRADUCIR: What kind of transitions would you like demonstrated?]"

#   "Simple Transitions"
    "[TRADUCIR: Simple Transitions]"

#   "ImageDissolve Transitions"
    "[TRADUCIR: ImageDissolve Transitions]"

#   "MoveTransition Transitions"
    "[TRADUCIR: MoveTransition Transitions]"

#   "CropMove Transitions"
    "[TRADUCIR: CropMove Transitions]"

#   "PushMove Transitions"
    "[TRADUCIR: PushMove Transitions]"

#   "AlphaDissolve Transitions"
    "[TRADUCIR: AlphaDissolve Transitions]"

#   "How about something else?"
    "[TRADUCIR: How about something else?]"

#   e "Okay, I can tell you about simple transitions. We call them simple because they don't take much in the way of configuration."
    e "[TRADUCIR: Okay, I can tell you about simple transitions. We call them simple because they don't take much in the way of configuration.]"

#   e "But don't let that get you down, since they're the transitions you'll probably use the most in a game."
    e "[TRADUCIR: But don't let that get you down, since they're the transitions you'll probably use the most in a game.]"

#   e "The 'dissolve' transition is probably the most useful, blending one scene into another."
    e "[TRADUCIR: The 'dissolve' transition is probably the most useful, blending one scene into another.]"

#   e "The 'Dissolve' function lets you create your own dissolves, taking a different amount of time."
    e "[TRADUCIR: The 'Dissolve' function lets you create your own dissolves, taking a different amount of time.]"

#   e "The 'fade' transition fades to black, and then fades back in to the new scene."
    e "[TRADUCIR: The 'fade' transition fades to black, and then fades back in to the new scene.]"

#   e "If you're going to stay at a black screen, you'll probably want to use 'dissolve' rather than 'fade'."
    e "[TRADUCIR: If you're going to stay at a black screen, you'll probably want to use 'dissolve' rather than 'fade'.]"

#   e "You can use 'Fade' to define your own fades. By changing the timing and the color faded to, you can use this for special effects, like flashbulbs."
    e "[TRADUCIR: You can use 'Fade' to define your own fades. By changing the timing and the color faded to, you can use this for special effects, like flashbulbs.]"

#   e "The 'pixellate' transition pixellates out the old scene, switches to the new scene, and then unpixellates that."
    e "[TRADUCIR: The 'pixellate' transition pixellates out the old scene, switches to the new scene, and then unpixellates that.]"

#   e "You can use 'Pixellate' to change the details of the pixellation."
    e "[TRADUCIR: You can use 'Pixellate' to change the details of the pixellation.]"

#   e "Motions can also be used as transitions."
    e "[TRADUCIR: Motions can also be used as transitions.]"

#   "..."
    "[TRADUCIR: ...]"

#   "......"
    "[TRADUCIR: ......]"

#   play audio "punch.opus"
    play audio "[TRADUCIR: punch.opus]"

#   e "Hey! Pay attention."
    e "[TRADUCIR: Hey! Pay attention.]"

#   e "I was about to demonstrate 'vpunch'... well, I guess I just did."
    e "[TRADUCIR: I was about to demonstrate 'vpunch'... well, I guess I just did.]"

#   play audio "punch.opus"
    play audio "[TRADUCIR: punch.opus]"

#   e "We can also shake the screen horizontally, with 'hpunch'. These were defined using the 'Move' function."
    e "[TRADUCIR: We can also shake the screen horizontally, with 'hpunch'. These were defined using the 'Move' function.]"

#   e "There's also the 'move' transition, which is confusingly enough defined using the 'MoveTransition' function."
    e "[TRADUCIR: There's also the 'move' transition, which is confusingly enough defined using the 'MoveTransition' function.]"

#   e "The 'move' transition finds images that have changed placement, and slides them to their new place. It's an easy way to get motion in your game."
    e "[TRADUCIR: The 'move' transition finds images that have changed placement, and slides them to their new place. It's an easy way to get motion in your game.]"

#   e "That's it for the simple transitions."
    e "[TRADUCIR: That's it for the simple transitions.]"

#   e "Perhaps the most flexible kind of transition is the ImageDissolve, which lets you use an image to control a dissolve."
    e "[TRADUCIR: Perhaps the most flexible kind of transition is the ImageDissolve, which lets you use an image to control a dissolve.]"

#   e "This lets us specify very complex transitions, fairly simply. Let's try some, and then I'll show you how they work."
    e "[TRADUCIR: This lets us specify very complex transitions, fairly simply. Let's try some, and then I'll show you how they work.]"

#   e "There are two ImageDissolve transitions built into Ren'Py."
    e "[TRADUCIR: There are two ImageDissolve transitions built into Ren'Py.]"

#   e "The 'blinds' transition opens and closes what looks like vertical blinds."
    e "[TRADUCIR: The 'blinds' transition opens and closes what looks like vertical blinds.]"

#   e "The 'squares' transition uses these squares to show things."
    e "[TRADUCIR: The 'squares' transition uses these squares to show things.]"

#   e "I'm not sure why anyone would want to use it, but it was used in some translated games, so we added it."
    e "[TRADUCIR: I'm not sure why anyone would want to use it, but it was used in some translated games, so we added it.]"

#   e "The most interesting transitions aren't in the standard library."
    e "[TRADUCIR: The most interesting transitions aren't in the standard library.]"

#   e "These ones require an image the size of the screen, and so we couldn't include them as the size of the screen can change from game to game."
    e "[TRADUCIR: These ones require an image the size of the screen, and so we couldn't include them as the size of the screen can change from game to game.]"

#   e "We can hide things with a 'circleirisin'..."
    e "[TRADUCIR: We can hide things with a 'circleirisin'...]"

#   e "... and show them again with a 'circleirisout'."
    e "[TRADUCIR: ... and show them again with a 'circleirisout'.]"

#   e "The 'circlewipe' transitions changes screens using a circular wipe effect."
    e "[TRADUCIR: The 'circlewipe' transitions changes screens using a circular wipe effect.]"

#   e "The 'dream' transition does this weird wavy dissolve, and does it relatively slowly."
    e "[TRADUCIR: The 'dream' transition does this weird wavy dissolve, and does it relatively slowly.]"

#   e "The 'teleport' transition reveals the new scene one line at a time."
    e "[TRADUCIR: The 'teleport' transition reveals the new scene one line at a time.]"

#   e "This is the background picture used with the circleirisout transition."
    e "[TRADUCIR: This is the background picture used with the circleirisout transition.]"

#   e "When we use an ImageDissolve, the white will dissolve in first, followed by progressively darker colors. Let's try it."
    e "[TRADUCIR: When we use an ImageDissolve, the white will dissolve in first, followed by progressively darker colors. Let's try it.]"

#   e "If we give ImageDissolve the 'reverse' parameter, black areas will dissolve in first."
    e "[TRADUCIR: If we give ImageDissolve the 'reverse' parameter, black areas will dissolve in first.]"

#   e "This lets circleirisin and circleirisout use the same image."
    e "[TRADUCIR: This lets circleirisin and circleirisout use the same image.]"

#   e "The teleport transition uses a different image, one that dissolves things in one line at a time."
    e "[TRADUCIR: The teleport transition uses a different image, one that dissolves things in one line at a time.]"

#   e "A dissolve only seems to affect parts of the scene that have changed..."
    e "[TRADUCIR: A dissolve only seems to affect parts of the scene that have changed...]"

#   e "... which is how we apply the teleport effect to a single character."
    e "[TRADUCIR: ... which is how we apply the teleport effect to a single character.]"

#   e "The CropMove transition class provides a wide range of transition effects. It's not used very much in practice, though."
    e "[TRADUCIR: The CropMove transition class provides a wide range of transition effects. It's not used very much in practice, though.]"

#   e "I'll stand offscreen, so you can see some of its modes. I'll read out the mode name after each transition."
    e "[TRADUCIR: I'll stand offscreen, so you can see some of its modes. I'll read out the mode name after each transition.]"

#   e "We first have wiperight..."
    e "[TRADUCIR: We first have wiperight...]"

#   e "...followed by wipeleft..."
    e "[TRADUCIR: ...followed by wipeleft...]"

#   e "...wipeup..."
    e "[TRADUCIR: ...wipeup...]"

#   e "...and wipedown."
    e "[TRADUCIR: ...and wipedown.]"

#   e "Next, the slides."
    e "[TRADUCIR: Next, the slides.]"

#   e "Slideright..."
    e "[TRADUCIR: Slideright...]"

#   e "...slideleft..."
    e "[TRADUCIR: ...slideleft...]"

#   e "...slideup..."
    e "[TRADUCIR: ...slideup...]"

#   e "and slidedown."
    e "[TRADUCIR: and slidedown.]"

#   e "Slideawayright..."
    e "[TRADUCIR: Slideawayright...]"

#   e "...slideawayleft..."
    e "[TRADUCIR: ...slideawayleft...]"

#   e "...slideawayup..."
    e "[TRADUCIR: ...slideawayup...]"

#   e "and slideawaydown."
    e "[TRADUCIR: and slideawaydown.]"

#   e "There's irisout..."
    e "[TRADUCIR: There's irisout...]"

#   e "... and irisin."
    e "[TRADUCIR: ... and irisin.]"

#   e "It's enough to make you feel a bit dizzy."
    e "[TRADUCIR: It's enough to make you feel a bit dizzy.]"

#   e "The PushMove transitions use the new scene to push the old one out. Let's take a look."
    e "[TRADUCIR: The PushMove transitions use the new scene to push the old one out. Let's take a look.]"

#   "There's pushright..."
    "[TRADUCIR: There's pushright...]"

#   "...pushleft..."
    "[TRADUCIR: ...pushleft...]"

#   "...pushdown..."
    "[TRADUCIR: ...pushdown...]"

#   "... and pushup. And that's it the for the PushMove-based transitions."
    "[TRADUCIR: ... and pushup. And that's it the for the PushMove-based transitions.]"

#   e "The most common MoveTransition is move, which slides around images that have changed position on the screen."
    e "[TRADUCIR: The most common MoveTransition is move, which slides around images that have changed position on the screen.]"

#   e "Just like that."
    e "[TRADUCIR: Just like that.]"

#   e "There are also the moveout and movein transitions."
    e "[TRADUCIR: There are also the moveout and movein transitions.]"

#   e "The moveout transitions (moveoutleft, moveoutright, moveouttop, and moveoutbottom) slide hidden images off the appropriate side of the screen."
    e "[TRADUCIR: The moveout transitions (moveoutleft, moveoutright, moveouttop, and moveoutbottom) slide hidden images off the appropriate side of the screen.]"

#   e "The movein transitions (moveinleft, moveinright, moveintop, and moveinbottom) slide in new images."
    e "[TRADUCIR: The movein transitions (moveinleft, moveinright, moveintop, and moveinbottom) slide in new images.]"

#   e "Let's see them all in action."
    e "[TRADUCIR: Let's see them all in action.]"

#   e "That's it for the moveins and moveouts."
    e "[TRADUCIR: That's it for the moveins and moveouts.]"

#   e "Finally, there are the zoomin and zoomout transitions, which show and hide things using a zoom."
    e "[TRADUCIR: Finally, there are the zoomin and zoomout transitions, which show and hide things using a zoom.]"

#   e "And that's all there is."
    e "[TRADUCIR: And that's all there is.]"

#   e "The AlphaDissolve transition lets you use one displayable to combine two others. Click, and I'll show you an example."
    e "[TRADUCIR: The AlphaDissolve transition lets you use one displayable to combine two others. Click, and I'll show you an example.]"

#   e "The AlphaDissolve displayable takes a control displayable, usually an ATL transform."
    e "[TRADUCIR: The AlphaDissolve displayable takes a control displayable, usually an ATL transform.]"

#   e "To be useful, the control displayable should be partially transparent."
    e "[TRADUCIR: To be useful, the control displayable should be partially transparent.]"

#   e "During an AlphaDissolve, the old screen is used to fill the transparent areas of the image, while the new screen fills the opaque areas."
    e "[TRADUCIR: During an AlphaDissolve, the old screen is used to fill the transparent areas of the image, while the new screen fills the opaque areas.]"

#   e "For our spotlight example, the old screen is this all-black image."
    e "[TRADUCIR: For our spotlight example, the old screen is this all-black image.]"

#   e "The new screen is me just standing here."
    e "[TRADUCIR: The new screen is me just standing here.]"

#   e "By combining them using AlphaDissolve, we can build a complicated effect out of simpler parts."
    e "[TRADUCIR: By combining them using AlphaDissolve, we can build a complicated effect out of simpler parts.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\indepth_translations.rpy DIALOGOS: 22

#   gui.text_font = "SourceHanSansLite.ttf"
    gui.text_font = "[TRADUCIR: SourceHanSansLite.ttf]"

#   gui.name_text_font = "SourceHanSansLite.ttf"
    gui.name_text_font = "[TRADUCIR: SourceHanSansLite.ttf]"

#   gui.interface_text_font = "SourceHanSansLite.ttf"
    gui.interface_text_font = "[TRADUCIR: SourceHanSansLite.ttf]"

#   language "japanese-strict"
    language "[TRADUCIR: japanese-strict]"

#   e "Ren'Py includes support for translating your game into languages other than the one it was originally written in."
    e "[TRADUCIR: Ren'Py includes support for translating your game into languages other than the one it was originally written in.]"

#   e "This includes the translation of every string in the game, including dialogue, menu choice, and interface strings, and of images and other assets."
    e "[TRADUCIR: This includes the translation of every string in the game, including dialogue, menu choice, and interface strings, and of images and other assets.]"

#   e "While Ren'Py can find dialogue and menu choice strings for you, you'll have to indicate which other strings need translation."
    e "[TRADUCIR: While Ren'Py can find dialogue and menu choice strings for you, you'll have to indicate which other strings need translation.]"

#   e "For example, here is how we define a character and her name."
    e "[TRADUCIR: For example, here is how we define a character and her name.]"

#   e "To mark Lucy's name as translatable, we surround it by parentheses preceded by a single underscore."
    e "[TRADUCIR: To mark Lucy's name as translatable, we surround it by parentheses preceded by a single underscore.]"

#   e "Notice how we don't translate the reddish color that we use for her name. That stays the same for all languages."
    e "[TRADUCIR: Notice how we don't translate the reddish color that we use for her name. That stays the same for all languages.]"

#   e "Once that's done, you can generate the translation files. That's done by going to the launcher, and clicking translate."
    e "[TRADUCIR: Once that's done, you can generate the translation files. That's done by going to the launcher, and clicking translate.]"

#   e "After you type in the name of the language you'll be translating to, choosing Generate Translations will scan your game and create translation files."
    e "[TRADUCIR: After you type in the name of the language you'll be translating to, choosing Generate Translations will scan your game and create translation files.]"

#   e "The files will be generated in game/tl/language, where language is the name of the language you typed in."
    e "[TRADUCIR: The files will be generated in game/tl/language, where language is the name of the language you typed in.]"

#   e "You'll need to edit those files to include translations for everything in your game."
    e "[TRADUCIR: You'll need to edit those files to include translations for everything in your game.]"

#   e "If you want to localize image files, you can also place them in game/tl/language."
    e "[TRADUCIR: If you want to localize image files, you can also place them in game/tl/language.]"

#   e "If the default fonts used by the game do not support the language you are translating to, you will have to change them."
    e "[TRADUCIR: If the default fonts used by the game do not support the language you are translating to, you will have to change them.]"

#   e "The translate python statement can be used to set the values of gui variables to change the font."
    e "[TRADUCIR: The translate python statement can be used to set the values of gui variables to change the font.]"

#   e "The translate style statement sets style properties more directly."
    e "[TRADUCIR: The translate style statement sets style properties more directly.]"

#   e "If you need to add new files, such as font files, you can place them into the game/tl/language directory where Ren'Py will find them."
    e "[TRADUCIR: If you need to add new files, such as font files, you can place them into the game/tl/language directory where Ren'Py will find them.]"

#   e "Finally, you'll have to add support for picking the language of the game. That usually goes into the preferences screen, found in screens.rpy."
    e "[TRADUCIR: Finally, you'll have to add support for picking the language of the game. That usually goes into the preferences screen, found in screens.rpy.]"

#   e "Here's an excerpt of the preferences screen of this tutorial. The Language action tells Ren'Py to change the language. It takes a string giving a language name, or None."
    e "[TRADUCIR: Here's an excerpt of the preferences screen of this tutorial. The Language action tells Ren'Py to change the language. It takes a string giving a language name, or None.]"

#   e "The None language is special, as it's the default language that the visual novel was written in. Since this tutorial was written in English, Language(None) selects English."
    e "[TRADUCIR: The None language is special, as it's the default language that the visual novel was written in. Since this tutorial was written in English, Language(None) selects English.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\options.rpy DIALOGOS: 25

#   define config.name = _( "Ren'Py Tutorial Game"
    define config.name = _( "[TRADUCIR: Ren'Py Tutorial Game]"

#   define build.name = "tutorial_7"
    define build.name = "[TRADUCIR: tutorial_7]"

#   # define config.sample_sound = "sample-sound.ogg"
    # define config.sample_sound = "[TRADUCIR: sample-sound.ogg]"

#   # define config.sample_voice = "sample-voice.ogg"
    # define config.sample_voice = "[TRADUCIR: sample-voice.ogg]"

#   # define config.main_menu_music = "main-menu-theme.ogg"
    # define config.main_menu_music = "[TRADUCIR: main-menu-theme.ogg]"

#   ## This controls when the dialogue window is displayed. If "show"
    ## This controls when the dialogue window is displayed. If "[TRADUCIR: show]"

#   ## displayed. If "hide"
    ## displayed. If "[TRADUCIR: hide]"

#   ## "auto"
    ## "[TRADUCIR: auto]"

#   ## After the game has started, this can be changed with the "window show"
    ## After the game has started, this can be changed with the "[TRADUCIR: window show]"

#   ## "window hide"
    ## "[TRADUCIR: window hide]"

#   define config.window = "auto"
    define config.window = "[TRADUCIR: auto]"

#   define config.save_directory = "tutorial-7"
    define config.save_directory = "[TRADUCIR: tutorial-7]"

#   define config.window_icon = "gui/window_icon.png"
    define config.window_icon = "[TRADUCIR: gui/window_icon.png]"

#   config.searchpath.append(config.renpy_base + "/sdk-fonts"
    config.searchpath.append(config.renpy_base + "[TRADUCIR: /sdk-fonts]"

#   build.classify_renpy( "sdk-fonts/**"
    build.classify_renpy( "[TRADUCIR: sdk-fonts/**]"

#   ## For example, "*.txt"
    ## For example, "[TRADUCIR: *.txt]"

#   ## subdirectories, and "**.psd"
    ## subdirectories, and "[TRADUCIR: **.psd]"

#   ## in-app purchases. It can be found on the "Services & APIs"
    ## in-app purchases. It can be found on the "[TRADUCIR: Services & APIs]"

#   # define build.google_play_key = "..."
    # define build.google_play_key = "[TRADUCIR: ...]"

#   # define build.itch_project = "renpytom/test-project"
    # define build.itch_project = "[TRADUCIR: renpytom/test-project]"

#   ( "gui/mouse0.png"
    ( "[TRADUCIR: gui/mouse0.png]"

#   ( "gui/mouse1.png"
    ( "[TRADUCIR: gui/mouse1.png]"

#   ( "gui/mouse2.png"
    ( "[TRADUCIR: gui/mouse2.png]"

#   ( "gui/mouse1.png"
    ( "[TRADUCIR: gui/mouse1.png]"

#   ( "gui/mouse0.png"
    ( "[TRADUCIR: gui/mouse0.png]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\screens.rpy DIALOGOS: 285

#   properties gui.text_properties( "input"
    properties gui.text_properties( "[TRADUCIR: input]"

#   properties gui.text_properties( "hyperlink"
    properties gui.text_properties( "[TRADUCIR: hyperlink]"

#   properties gui.text_properties( "interface"
    properties gui.text_properties( "[TRADUCIR: interface]"

#   properties gui.button_properties( "button"
    properties gui.button_properties( "[TRADUCIR: button]"

#   properties gui.text_properties( "button"
    properties gui.text_properties( "[TRADUCIR: button]"

#   properties gui.text_properties( "label"
    properties gui.text_properties( "[TRADUCIR: label]"

#   properties gui.text_properties( "prompt"
    properties gui.text_properties( "[TRADUCIR: prompt]"

#   left_bar Frame( "gui/bar/left.png"
    left_bar Frame( "[TRADUCIR: gui/bar/left.png]"

#   right_bar Frame( "gui/bar/right.png"
    right_bar Frame( "[TRADUCIR: gui/bar/right.png]"

#   top_bar Frame( "gui/bar/top.png"
    top_bar Frame( "[TRADUCIR: gui/bar/top.png]"

#   bottom_bar Frame( "gui/bar/bottom.png"
    bottom_bar Frame( "[TRADUCIR: gui/bar/bottom.png]"

#   base_bar Frame( "gui/scrollbar/horizontal_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/scrollbar/horizontal_[prefix_]bar.png]"

#   thumb Frame( "gui/scrollbar/horizontal_[prefix_]thumb.png"
    thumb Frame( "[TRADUCIR: gui/scrollbar/horizontal_[prefix_]thumb.png]"

#   base_bar Frame( "gui/scrollbar/vertical_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/scrollbar/vertical_[prefix_]bar.png]"

#   thumb Frame( "gui/scrollbar/vertical_[prefix_]thumb.png"
    thumb Frame( "[TRADUCIR: gui/scrollbar/vertical_[prefix_]thumb.png]"

#   base_bar Frame( "gui/slider/horizontal_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/slider/horizontal_[prefix_]bar.png]"

#   thumb "gui/slider/horizontal_[prefix_]thumb.png"
    thumb "[TRADUCIR: gui/slider/horizontal_[prefix_]thumb.png]"

#   base_bar Frame( "gui/slider/vertical_[prefix_]bar.png"
    base_bar Frame( "[TRADUCIR: gui/slider/vertical_[prefix_]bar.png]"

#   thumb "gui/slider/vertical_[prefix_]thumb.png"
    thumb "[TRADUCIR: gui/slider/vertical_[prefix_]thumb.png]"

#   background Frame( "gui/frame.png"
    background Frame( "[TRADUCIR: gui/frame.png]"

#   ## This screen must create a text displayable with id "what"
    ## This screen must create a text displayable with id "[TRADUCIR: what]"

#   ## this to manage text display. It can also create displayables with id "who"
    ## this to manage text display. It can also create displayables with id "[TRADUCIR: who]"

#   ## and id "window"
    ## and id "[TRADUCIR: window]"

#   id "window"
    id "[TRADUCIR: window]"

#   text who id "who"
    text who id "[TRADUCIR: who]"

#   text what id "what"
    text what id "[TRADUCIR: what]"

#   style_prefix "say"
    style_prefix "[TRADUCIR: say]"

#   id "window"
    id "[TRADUCIR: window]"

#   style "namebox"
    style "[TRADUCIR: namebox]"

#   text who id "who"
    text who id "[TRADUCIR: who]"

#   text what id "what"
    text what id "[TRADUCIR: what]"

#   if not renpy.variant( "small"
    if not renpy.variant( "[TRADUCIR: small]"

#   background Image( "gui/textbox.png"
    background Image( "[TRADUCIR: gui/textbox.png]"

#   background Frame( "gui/namebox.png"
    background Frame( "[TRADUCIR: gui/namebox.png]"

#   properties gui.text_properties( "name"
    properties gui.text_properties( "[TRADUCIR: name]"

#   properties gui.text_properties( "dialogue"
    properties gui.text_properties( "[TRADUCIR: dialogue]"

#   ## This screen must create an input displayable with id "input"
    ## This screen must create an input displayable with id "[TRADUCIR: input]"

#   style_prefix "input"
    style_prefix "[TRADUCIR: input]"

#   text prompt style "input_prompt"
    text prompt style "[TRADUCIR: input_prompt]"

#   input id "input"
    input id "[TRADUCIR: input]"

#   properties gui.text_properties( "input_prompt"
    properties gui.text_properties( "[TRADUCIR: input_prompt]"

#   style_prefix "choice"
    style_prefix "[TRADUCIR: choice]"

#   properties gui.button_properties( "choice_button"
    properties gui.button_properties( "[TRADUCIR: choice_button]"

#   properties gui.text_properties( "choice_button"
    properties gui.text_properties( "[TRADUCIR: choice_button]"

#   style_prefix "quick"
    style_prefix "[TRADUCIR: quick]"

#   textbutton _( "Back"
    textbutton _( "[TRADUCIR: Back]"

#   textbutton _( "History"
    textbutton _( "[TRADUCIR: History]"

#   textbutton _( "Skip"
    textbutton _( "[TRADUCIR: Skip]"

#   textbutton _( "Auto"
    textbutton _( "[TRADUCIR: Auto]"

#   textbutton _( "Save"
    textbutton _( "[TRADUCIR: Save]"

#   textbutton _( "Q.Save"
    textbutton _( "[TRADUCIR: Q.Save]"

#   textbutton _( "Q.Load"
    textbutton _( "[TRADUCIR: Q.Load]"

#   textbutton _( "Prefs"
    textbutton _( "[TRADUCIR: Prefs]"

#   config.overlay_screens.append( "quick_menu"
    config.overlay_screens.append( "[TRADUCIR: quick_menu]"

#   properties gui.button_properties( "quick_button"
    properties gui.button_properties( "[TRADUCIR: quick_button]"

#   properties gui.text_properties( "quick_button"
    properties gui.text_properties( "[TRADUCIR: quick_button]"

#   style_prefix "navigation"
    style_prefix "[TRADUCIR: navigation]"

#   textbutton _( "Start"
    textbutton _( "[TRADUCIR: Start]"

#   textbutton _( "History"
    textbutton _( "[TRADUCIR: History]"

#   textbutton _( "Save"
    textbutton _( "[TRADUCIR: Save]"

#   textbutton _( "Load"
    textbutton _( "[TRADUCIR: Load]"

#   textbutton _( "Preferences"
    textbutton _( "[TRADUCIR: Preferences]"

#   textbutton _( "End Replay"
    textbutton _( "[TRADUCIR: End Replay]"

#   textbutton _( "Main Menu"
    textbutton _( "[TRADUCIR: Main Menu]"

#   textbutton _( "About"
    textbutton _( "[TRADUCIR: About]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   textbutton _( "Help"
    textbutton _( "[TRADUCIR: Help]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   textbutton _( "Quit"
    textbutton _( "[TRADUCIR: Quit]"

#   size_group "navigation"
    size_group "[TRADUCIR: navigation]"

#   properties gui.button_properties( "navigation_button"
    properties gui.button_properties( "[TRADUCIR: navigation_button]"

#   properties gui.text_properties( "navigation_button"
    properties gui.text_properties( "[TRADUCIR: navigation_button]"

#   style_prefix "main_menu"
    style_prefix "[TRADUCIR: main_menu]"

#   text "[renpy.version_string] \"
    text "[TRADUCIR: [renpy.version_string] \]"

#   background "gui/overlay/main_menu.png"
    background "[TRADUCIR: gui/overlay/main_menu.png]"

#   properties gui.text_properties( "main_menu"
    properties gui.text_properties( "[TRADUCIR: main_menu]"

#   properties gui.text_properties( "title"
    properties gui.text_properties( "[TRADUCIR: title]"

#   color "#fff"
    color "[TRADUCIR: #fff]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   ## The scroll parameter can be None, or one of "viewport"
    ## The scroll parameter can be None, or one of "[TRADUCIR: viewport]"

#   style_prefix "game_menu"
    style_prefix "[TRADUCIR: game_menu]"

#   style "game_menu_outer_frame"
    style "[TRADUCIR: game_menu_outer_frame]"

#   style "game_menu_navigation_frame"
    style "[TRADUCIR: game_menu_navigation_frame]"

#   style "game_menu_content_frame"
    style "[TRADUCIR: game_menu_content_frame]"

#   if scroll == "viewport"
    if scroll == "[TRADUCIR: viewport]"

#   scrollbars "vertical"
    scrollbars "[TRADUCIR: vertical]"

#   elif scroll == "vpgrid"
    elif scroll == "[TRADUCIR: vpgrid]"

#   scrollbars "vertical"
    scrollbars "[TRADUCIR: vertical]"

#   textbutton _( "Return"
    textbutton _( "[TRADUCIR: Return]"

#   style "return_button"
    style "[TRADUCIR: return_button]"

#   key "game_menu"
    key "[TRADUCIR: game_menu]"

#   background "gui/overlay/game_menu.png"
    background "[TRADUCIR: gui/overlay/game_menu.png]"

#   use game_menu(_( "About"
    use game_menu(_( "[TRADUCIR: About]"

#   style_prefix "about"
    style_prefix "[TRADUCIR: about]"

#   label "[config.name!t]"
    label "[TRADUCIR: [config.name!t]]"

#   text _( "Version [config.version!t]\n"
    text _( "[TRADUCIR: Version [config.version!t]\n]"

#   text "[gui.about!t]\n"
    text "[TRADUCIR: [gui.about!t]\n]"

#   text _( "Made with {a=https://www.renpy.org/}Ren'Py{/a} [renpy.version_only].\n\n[renpy.license!t]"
    text _( "[TRADUCIR: Made with {a=https://www.renpy.org/}Ren'Py{/a} [renpy.version_only].\n\n[renpy.license!t]]"

#   use file_slots(_( "Save"
    use file_slots(_( "[TRADUCIR: Save]"

#   use file_slots(_( "Load"
    use file_slots(_( "[TRADUCIR: Load]"

#   default page_name_value = FilePageNameInputValue(pattern=_( "Page {}"
    default page_name_value = FilePageNameInputValue(pattern=_( "[TRADUCIR: Page {}]"

#   style "page_label"
    style "[TRADUCIR: page_label]"

#   style "page_label_text"
    style "[TRADUCIR: page_label_text]"

#   style_prefix "slot"
    style_prefix "[TRADUCIR: slot]"

#   text FileTime(slot, format=_( "{#file_time}%A, %B %d %Y, %H:%M"
    text FileTime(slot, format=_( "[TRADUCIR: {#file_time}%A, %B %d %Y, %H:%M]"

#   style "slot_time_text"
    style "[TRADUCIR: slot_time_text]"

#   style "slot_name_text"
    style "[TRADUCIR: slot_name_text]"

#   key "save_delete"
    key "[TRADUCIR: save_delete]"

#   style_prefix "page"
    style_prefix "[TRADUCIR: page]"

#   textbutton _( "<"
    textbutton _( "[TRADUCIR: <]"

#   textbutton _( "{#auto_page}A"
    textbutton _( "[TRADUCIR: {#auto_page}A]"

#   textbutton _( "{#quick_page}Q"
    textbutton _( "[TRADUCIR: {#quick_page}Q]"

#   textbutton "[page]"
    textbutton "[TRADUCIR: [page]]"

#   textbutton _( ">"
    textbutton _( "[TRADUCIR: >]"

#   layout "subtitle"
    layout "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "page_button"
    properties gui.button_properties( "[TRADUCIR: page_button]"

#   properties gui.text_properties( "page_button"
    properties gui.text_properties( "[TRADUCIR: page_button]"

#   properties gui.button_properties( "slot_button"
    properties gui.button_properties( "[TRADUCIR: slot_button]"

#   properties gui.text_properties( "slot_button"
    properties gui.text_properties( "[TRADUCIR: slot_button]"

#   use game_menu(_( "Preferences"
    use game_menu(_( "[TRADUCIR: Preferences]"

#   if renpy.variant( "pc"
    if renpy.variant( "[TRADUCIR: pc]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   label _( "Display"
    label _( "[TRADUCIR: Display]"

#   textbutton _( "Window"
    textbutton _( "[TRADUCIR: Window]"

#   textbutton _( "Fullscreen"
    textbutton _( "[TRADUCIR: Fullscreen]"

#   style_prefix "check"
    style_prefix "[TRADUCIR: check]"

#   label _( "Examples"
    label _( "[TRADUCIR: Examples]"

#   textbutton _( "Translations"
    textbutton _( "[TRADUCIR: Translations]"

#   style_prefix "check"
    style_prefix "[TRADUCIR: check]"

#   label _( "Skip"
    label _( "[TRADUCIR: Skip]"

#   textbutton _( "Unseen Text"
    textbutton _( "[TRADUCIR: Unseen Text]"

#   textbutton _( "After Choices"
    textbutton _( "[TRADUCIR: After Choices]"

#   textbutton _( "Transitions"
    textbutton _( "[TRADUCIR: Transitions]"

#   ## Additional vboxes of type "radio_pref"
    ## Additional vboxes of type "[TRADUCIR: radio_pref]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   label _( "Language"
    label _( "[TRADUCIR: Language]"

#   textbutton "English"
    textbutton "[TRADUCIR: English]"

#   textbutton "Français"
    textbutton "[TRADUCIR: Français]"

#   textbutton "Русский"
    textbutton "[TRADUCIR: Русский]"

#   textbutton "Español"
    textbutton "[TRADUCIR: Español]"

#   textbutton "Українська"
    textbutton "[TRADUCIR: Українська]"

#   style_prefix "radio"
    style_prefix "[TRADUCIR: radio]"

#   textbutton "한국어"
    textbutton "[TRADUCIR: 한국어]"

#   textbutton "日本語"
    textbutton "[TRADUCIR: 日本語]"

#   textbutton "简体中文"
    textbutton "[TRADUCIR: 简体中文]"

#   textbutton "Pig Latin"
    textbutton "[TRADUCIR: Pig Latin]"

#   style_prefix "slider"
    style_prefix "[TRADUCIR: slider]"

#   label _( "Text Speed"
    label _( "[TRADUCIR: Text Speed]"

#   bar value Preference( "text speed"
    bar value Preference( "[TRADUCIR: text speed]"

#   label _( "Auto-Forward Time"
    label _( "[TRADUCIR: Auto-Forward Time]"

#   bar value Preference( "auto-forward time"
    bar value Preference( "[TRADUCIR: auto-forward time]"

#   label _( "Music Volume"
    label _( "[TRADUCIR: Music Volume]"

#   bar value Preference( "music volume"
    bar value Preference( "[TRADUCIR: music volume]"

#   label _( "Sound Volume"
    label _( "[TRADUCIR: Sound Volume]"

#   bar value Preference( "sound volume"
    bar value Preference( "[TRADUCIR: sound volume]"

#   textbutton _( "Test"
    textbutton _( "[TRADUCIR: Test]"

#   label _( "Voice Volume"
    label _( "[TRADUCIR: Voice Volume]"

#   bar value Preference( "voice volume"
    bar value Preference( "[TRADUCIR: voice volume]"

#   textbutton _( "Test"
    textbutton _( "[TRADUCIR: Test]"

#   textbutton _( "Mute All"
    textbutton _( "[TRADUCIR: Mute All]"

#   action Preference( "all mute"
    action Preference( "[TRADUCIR: all mute]"

#   style "mute_all_button"
    style "[TRADUCIR: mute_all_button]"

#   properties gui.button_properties( "radio_button"
    properties gui.button_properties( "[TRADUCIR: radio_button]"

#   foreground "gui/button/radio_[prefix_]foreground.png"
    foreground "[TRADUCIR: gui/button/radio_[prefix_]foreground.png]"

#   properties gui.text_properties( "radio_button"
    properties gui.text_properties( "[TRADUCIR: radio_button]"

#   properties gui.button_properties( "check_button"
    properties gui.button_properties( "[TRADUCIR: check_button]"

#   foreground "gui/button/check_[prefix_]foreground.png"
    foreground "[TRADUCIR: gui/button/check_[prefix_]foreground.png]"

#   properties gui.text_properties( "check_button"
    properties gui.text_properties( "[TRADUCIR: check_button]"

#   properties gui.button_properties( "slider_button"
    properties gui.button_properties( "[TRADUCIR: slider_button]"

#   properties gui.text_properties( "slider_button"
    properties gui.text_properties( "[TRADUCIR: slider_button]"

#   use game_menu(_( "History"
    use game_menu(_( "[TRADUCIR: History]"

#   style_prefix "history"
    style_prefix "[TRADUCIR: history]"

#   style "history_name"
    style "[TRADUCIR: history_name]"

#   if "color"
    if "[TRADUCIR: color]"

#   text_color h.who_args[ "color"
    text_color h.who_args[ "[TRADUCIR: color]"

#   label _( "The dialogue history is empty."
    label _( "[TRADUCIR: The dialogue history is empty.]"

#   define gui.history_allow_tags = { "alt"
    define gui.history_allow_tags = { "[TRADUCIR: alt]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   default device = "keyboard"
    default device = "[TRADUCIR: keyboard]"

#   use game_menu(_( "Help"
    use game_menu(_( "[TRADUCIR: Help]"

#   style_prefix "help"
    style_prefix "[TRADUCIR: help]"

#   textbutton _( "Keyboard"
    textbutton _( "[TRADUCIR: Keyboard]"

#   textbutton _( "Mouse"
    textbutton _( "[TRADUCIR: Mouse]"

#   textbutton _( "Gamepad"
    textbutton _( "[TRADUCIR: Gamepad]"

#   if device == "keyboard"
    if device == "[TRADUCIR: keyboard]"

#   elif device == "mouse"
    elif device == "[TRADUCIR: mouse]"

#   elif device == "gamepad"
    elif device == "[TRADUCIR: gamepad]"

#   label _( "Enter"
    label _( "[TRADUCIR: Enter]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Space"
    label _( "[TRADUCIR: Space]"

#   text _( "Advances dialogue without selecting choices."
    text _( "[TRADUCIR: Advances dialogue without selecting choices.]"

#   label _( "Arrow Keys"
    label _( "[TRADUCIR: Arrow Keys]"

#   text _( "Navigate the interface."
    text _( "[TRADUCIR: Navigate the interface.]"

#   label _( "Escape"
    label _( "[TRADUCIR: Escape]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Ctrl"
    label _( "[TRADUCIR: Ctrl]"

#   text _( "Skips dialogue while held down."
    text _( "[TRADUCIR: Skips dialogue while held down.]"

#   label _( "Tab"
    label _( "[TRADUCIR: Tab]"

#   text _( "Toggles dialogue skipping."
    text _( "[TRADUCIR: Toggles dialogue skipping.]"

#   label _( "Page Up"
    label _( "[TRADUCIR: Page Up]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Page Down"
    label _( "[TRADUCIR: Page Down]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label "H"
    label "[TRADUCIR: H]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   label "S"
    label "[TRADUCIR: S]"

#   text _( "Takes a screenshot."
    text _( "[TRADUCIR: Takes a screenshot.]"

#   label "V"
    label "[TRADUCIR: V]"

#   text _( "Toggles assistive {a=https://www.renpy.org/l/voicing}self-voicing{/a}."
    text _( "[TRADUCIR: Toggles assistive {a=https://www.renpy.org/l/voicing}self-voicing{/a}.]"

#   label "Shift+A"
    label "[TRADUCIR: Shift+A]"

#   text _( "Opens the accessibility menu."
    text _( "[TRADUCIR: Opens the accessibility menu.]"

#   label _( "Left Click"
    label _( "[TRADUCIR: Left Click]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Middle Click"
    label _( "[TRADUCIR: Middle Click]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   label _( "Right Click"
    label _( "[TRADUCIR: Right Click]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Mouse Wheel Up"
    label _( "[TRADUCIR: Mouse Wheel Up]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Mouse Wheel Down"
    label _( "[TRADUCIR: Mouse Wheel Down]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label _( "Right Trigger\nA/Bottom Button"
    label _( "[TRADUCIR: Right Trigger\nA/Bottom Button]"

#   text _( "Advances dialogue and activates the interface."
    text _( "[TRADUCIR: Advances dialogue and activates the interface.]"

#   label _( "Left Trigger\nLeft Shoulder"
    label _( "[TRADUCIR: Left Trigger\nLeft Shoulder]"

#   text _( "Rolls back to earlier dialogue."
    text _( "[TRADUCIR: Rolls back to earlier dialogue.]"

#   label _( "Right Shoulder"
    label _( "[TRADUCIR: Right Shoulder]"

#   text _( "Rolls forward to later dialogue."
    text _( "[TRADUCIR: Rolls forward to later dialogue.]"

#   label _( "D-Pad, Sticks"
    label _( "[TRADUCIR: D-Pad, Sticks]"

#   text _( "Navigate the interface."
    text _( "[TRADUCIR: Navigate the interface.]"

#   label _( "Start, Guide"
    label _( "[TRADUCIR: Start, Guide]"

#   text _( "Accesses the game menu."
    text _( "[TRADUCIR: Accesses the game menu.]"

#   label _( "Y/Top Button"
    label _( "[TRADUCIR: Y/Top Button]"

#   text _( "Hides the user interface."
    text _( "[TRADUCIR: Hides the user interface.]"

#   textbutton _( "Calibrate"
    textbutton _( "[TRADUCIR: Calibrate]"

#   properties gui.button_properties( "help_button"
    properties gui.button_properties( "[TRADUCIR: help_button]"

#   properties gui.text_properties( "help_button"
    properties gui.text_properties( "[TRADUCIR: help_button]"

#   style_prefix "confirm"
    style_prefix "[TRADUCIR: confirm]"

#   add "gui/overlay/confirm.png"
    add "[TRADUCIR: gui/overlay/confirm.png]"

#   style "confirm_prompt"
    style "[TRADUCIR: confirm_prompt]"

#   textbutton _( "Yes"
    textbutton _( "[TRADUCIR: Yes]"

#   textbutton _( "No"
    textbutton _( "[TRADUCIR: No]"

#   ## Right-click and escape answer "no"
    ## Right-click and escape answer "[TRADUCIR: no]"

#   key "game_menu"
    key "[TRADUCIR: game_menu]"

#   background Frame([ "gui/confirm_frame.png"
    background Frame([ "[TRADUCIR: gui/confirm_frame.png]"

#   layout "subtitle"
    layout "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "confirm_button"
    properties gui.button_properties( "[TRADUCIR: confirm_button]"

#   properties gui.text_properties( "confirm_button"
    properties gui.text_properties( "[TRADUCIR: confirm_button]"

#   style_prefix "skip"
    style_prefix "[TRADUCIR: skip]"

#   text _( "Skipping"
    text _( "[TRADUCIR: Skipping]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   text "▸"
    text "[TRADUCIR: ▸]"

#   background Frame( "gui/skip.png"
    background Frame( "[TRADUCIR: gui/skip.png]"

#   font "DejaVuSans.ttf"
    font "[TRADUCIR: DejaVuSans.ttf]"

#   style_prefix "notify"
    style_prefix "[TRADUCIR: notify]"

#   text "[message!tq]"
    text "[TRADUCIR: [message!tq]]"

#   background Frame( "gui/notify.png"
    background Frame( "[TRADUCIR: gui/notify.png]"

#   properties gui.text_properties( "notify"
    properties gui.text_properties( "[TRADUCIR: notify]"

#   style "nvl_window"
    style "[TRADUCIR: nvl_window]"

#   style "nvl_button"
    style "[TRADUCIR: nvl_button]"

#   background "gui/nvl.png"
    background "[TRADUCIR: gui/nvl.png]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   layout ( "subtitle"
    layout ( "[TRADUCIR: subtitle]"

#   properties gui.button_properties( "nvl_button"
    properties gui.button_properties( "[TRADUCIR: nvl_button]"

#   properties gui.text_properties( "nvl_button"
    properties gui.text_properties( "[TRADUCIR: nvl_button]"

#   variant "medium"
    variant "[TRADUCIR: medium]"

#   variant "touch"
    variant "[TRADUCIR: touch]"

#   style_prefix "quick"
    style_prefix "[TRADUCIR: quick]"

#   textbutton _( "Back"
    textbutton _( "[TRADUCIR: Back]"

#   textbutton _( "Skip"
    textbutton _( "[TRADUCIR: Skip]"

#   textbutton _( "Auto"
    textbutton _( "[TRADUCIR: Auto]"

#   textbutton _( "Menu"
    textbutton _( "[TRADUCIR: Menu]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/textbox.png"
    background "[TRADUCIR: gui/phone/textbox.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/nvl.png"
    background "[TRADUCIR: gui/phone/nvl.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/overlay/main_menu.png"
    background "[TRADUCIR: gui/phone/overlay/main_menu.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   background "gui/phone/overlay/game_menu.png"
    background "[TRADUCIR: gui/phone/overlay/game_menu.png]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   variant "small"
    variant "[TRADUCIR: small]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\script.rpy DIALOGOS: 48

#   define e = Character(_('Eileen'), color= "#c8ffc8"
    define e = Character(_('Eileen'), color= "[TRADUCIR: #c8ffc8]"

#   self.kind = "section"
    self.kind = "[TRADUCIR: section]"

#   self.kind = "tutorial"
    self.kind = "[TRADUCIR: tutorial]"

#   if move and (move != "after"
    if move and (move != "[TRADUCIR: after]"

#   if move and (move != "before"
    if move and (move != "[TRADUCIR: before]"

#   Section(_( "Quickstart"
    Section(_( "[TRADUCIR: Quickstart]"

#   Tutorial( "tutorial_playing"
    Tutorial( "[TRADUCIR: tutorial_playing]"

#   Tutorial( "tutorial_create"
    Tutorial( "[TRADUCIR: tutorial_create]"

#   Tutorial( "tutorial_dialogue"
    Tutorial( "[TRADUCIR: tutorial_dialogue]"

#   Tutorial( "tutorial_images"
    Tutorial( "[TRADUCIR: tutorial_images]"

#   Tutorial( "tutorial_simple_positions"
    Tutorial( "[TRADUCIR: tutorial_simple_positions]"

#   Tutorial( "tutorial_transitions"
    Tutorial( "[TRADUCIR: tutorial_transitions]"

#   Tutorial( "tutorial_music"
    Tutorial( "[TRADUCIR: tutorial_music]"

#   Tutorial( "tutorial_menus"
    Tutorial( "[TRADUCIR: tutorial_menus]"

#   Tutorial( "tutorial_input"
    Tutorial( "[TRADUCIR: tutorial_input]"

#   Tutorial( "tutorial_video"
    Tutorial( "[TRADUCIR: tutorial_video]"

#   Tutorial( "tutorial_nvlmode"
    Tutorial( "[TRADUCIR: tutorial_nvlmode]"

#   Tutorial( "director"
    Tutorial( "[TRADUCIR: director]"

#   Tutorial( "distribute"
    Tutorial( "[TRADUCIR: distribute]"

#   Section(_( "In Depth"
    Section(_( "[TRADUCIR: In Depth]"

#   Tutorial( "text"
    Tutorial( "[TRADUCIR: text]"

#   Tutorial( "demo_character"
    Tutorial( "[TRADUCIR: demo_character]"

#   Tutorial( "simple_displayables"
    Tutorial( "[TRADUCIR: simple_displayables]"

#   Tutorial( "demo_transitions"
    Tutorial( "[TRADUCIR: demo_transitions]"

#   Tutorial( "tutorial_positions"
    Tutorial( "[TRADUCIR: tutorial_positions]"

#   Tutorial( "tutorial_atl"
    Tutorial( "[TRADUCIR: tutorial_atl]"

#   Tutorial( "transform_properties"
    Tutorial( "[TRADUCIR: transform_properties]"

#   Tutorial( "new_gui"
    Tutorial( "[TRADUCIR: new_gui]"

#   Tutorial( "styles"
    Tutorial( "[TRADUCIR: styles]"

#   Tutorial( "tutorial_screens"
    Tutorial( "[TRADUCIR: tutorial_screens]"

#   Tutorial( "screen_displayables"
    Tutorial( "[TRADUCIR: screen_displayables]"

#   Tutorial( "demo_minigame"
    Tutorial( "[TRADUCIR: demo_minigame]"

#   Tutorial( "translations"
    Tutorial( "[TRADUCIR: translations]"

#   has side "c r b"
    has side "[TRADUCIR: c r b]"

#   if i.kind == "tutorial"
    if i.kind == "[TRADUCIR: tutorial]"

#   bar adjustment adj style "vscrollbar"
    bar adjustment adj style "[TRADUCIR: vscrollbar]"

#   textbutton _( "That's enough for now."
    textbutton _( "[TRADUCIR: That's enough for now.]"

#   play music "sunflower-slow-drag.ogg"
    play music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "Hi! My name is Eileen, and I'd like to welcome you to the Ren'Py tutorial."
    e "[TRADUCIR: Hi! My name is Eileen, and I'd like to welcome you to the Ren'Py tutorial.]"

#   e "In this tutorial, we'll teach you the basics of Ren'Py, so you can make games of your own. We'll also demonstrate many features, so you can see what Ren'Py is capable of."
    e "[TRADUCIR: In this tutorial, we'll teach you the basics of Ren'Py, so you can make games of your own. We'll also demonstrate many features, so you can see what Ren'Py is capable of.]"

#   $ e(_( "What would you like to see?"
    $ e(_( "[TRADUCIR: What would you like to see?]"

#   $ e(_( "Is there anything else you'd like to see?"
    $ e(_( "[TRADUCIR: Is there anything else you'd like to see?]"

#   e "Thank you for viewing this tutorial."
    e "[TRADUCIR: Thank you for viewing this tutorial.]"

#   e "If you'd like to see a full Ren'Py game, select \"
    e "[TRADUCIR: If you'd like to see a full Ren'Py game, select \]"

#   e "You can download new versions of Ren'Py from {a=https://www.renpy.org/}https://www.renpy.org/{/a}. For help and discussion, check out the {a=https://lemmasoft.renai.us/forums/}Lemma Soft Forums{/a}."
    e "[TRADUCIR: You can download new versions of Ren'Py from {a=https://www.renpy.org/}https://www.renpy.org/{/a}. For help and discussion, check out the {a=https://lemmasoft.renai.us/forums/}Lemma Soft Forums{/a}.]"

#   e "We'd like to thank Piroshki for contributing my sprites; Mugenjohncel for Lucy, the band, and drawn backgrounds; and Jake for the magic circle."
    e "[TRADUCIR: We'd like to thank Piroshki for contributing my sprites; Mugenjohncel for Lucy, the band, and drawn backgrounds; and Jake for the magic circle.]"

#   e "The background music is \"
    e "[TRADUCIR: The background music is \]"

#   e "We look forward to seeing what you create with Ren'Py. Have fun!"
    e "[TRADUCIR: We look forward to seeing what you create with Ren'Py. Have fun!]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\testcases.rpy DIALOGOS: 99

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Yes."
    click until "[TRADUCIR: Yes.]"

#   "No."
    "[TRADUCIR: No.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Yes, I do."
    click until "[TRADUCIR: Yes, I do.]"

#   click until "Yes."
    click until "[TRADUCIR: Yes.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Some games might prompt the player for input."
    click until "[TRADUCIR: Some games might prompt the player for input.]"

#   type "Tom"
    type "[TRADUCIR: Tom]"

#   type "m"
    type "[TRADUCIR: m]"

#   type "\n"
    type "[TRADUCIR: \n]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Yes."
    click until "[TRADUCIR: Yes.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Simple"
    click until "[TRADUCIR: Simple]"

#   click until "ImageDissolve"
    click until "[TRADUCIR: ImageDissolve]"

#   click until "MoveTransition"
    click until "[TRADUCIR: MoveTransition]"

#   click until "CropMove"
    click until "[TRADUCIR: CropMove]"

#   click until "PushMove"
    click until "[TRADUCIR: PushMove]"

#   click until "AlphaDissolve"
    click until "[TRADUCIR: AlphaDissolve]"

#   click until "something else"
    click until "[TRADUCIR: something else]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "xpos .75 ypos .25"
    click until "[TRADUCIR: xpos .75 ypos .25]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Style basics."
    click until "[TRADUCIR: Style basics.]"

#   click until "General style properties."
    click until "[TRADUCIR: General style properties.]"

#   click until "Text style properties."
    click until "[TRADUCIR: Text style properties.]"

#   click until "Window and Button style properties."
    click until "[TRADUCIR: Window and Button style properties.]"

#   click until "Bar style properties."
    click until "[TRADUCIR: Bar style properties.]"

#   click until "Box, Grid, and Fixed style properties."
    click until "[TRADUCIR: Box, Grid, and Fixed style properties.]"

#   click until "The Displayable Inspector."
    click until "[TRADUCIR: The Displayable Inspector.]"

#   click until "That's all I want to know."
    click until "[TRADUCIR: That's all I want to know.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "What screens can do."
    click until "[TRADUCIR: What screens can do.]"

#   click until "Yes."
    click until "[TRADUCIR: Yes.]"

#   click until "How to show screens."
    click until "[TRADUCIR: How to show screens.]"

#   click until "you'll have to click"
    click until "[TRADUCIR: you'll have to click]"

#   "Okay"
    "[TRADUCIR: Okay]"

#   click until "Passing parameters to screens."
    click until "[TRADUCIR: Passing parameters to screens.]"

#   click until "the call screen statement"
    click until "[TRADUCIR: the call screen statement]"

#   "Okay"
    "[TRADUCIR: Okay]"

#   click until "Screen properties."
    click until "[TRADUCIR: Screen properties.]"

#   click until "Close This Screen"
    click until "[TRADUCIR: Close This Screen]"

#   "Close This Screen"
    "[TRADUCIR: Close This Screen]"

#   click until "Special screen statements."
    click until "[TRADUCIR: Special screen statements.]"

#   click until "Using other screens."
    click until "[TRADUCIR: Using other screens.]"

#   click until "That's it."
    click until "[TRADUCIR: That's it.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   click until "Common properties"
    click until "[TRADUCIR: Common properties]"

#   click until "Adding images"
    click until "[TRADUCIR: Adding images]"

#   click until "Text"
    click until "[TRADUCIR: Text]"

#   click until "Buttons"
    click until "[TRADUCIR: Buttons]"

#   click until "Bars"
    click until "[TRADUCIR: Bars]"

#   click until "Viewports"
    click until "[TRADUCIR: Viewports]"

#   click until "Imagemaps"
    click until "[TRADUCIR: Imagemaps]"

#   click until "Science"
    click until "[TRADUCIR: Science]"

#   click until "That's all"
    click until "[TRADUCIR: That's all]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   "Back"
    "[TRADUCIR: Back]"

#   "Back"
    "[TRADUCIR: Back]"

#   "Skip"
    "[TRADUCIR: Skip]"

#   "Back"
    "[TRADUCIR: Back]"

#   "Auto"
    "[TRADUCIR: Auto]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   "Auto"
    "[TRADUCIR: Auto]"

#   "History"
    "[TRADUCIR: History]"

#   "Save"
    "[TRADUCIR: Save]"

#   "Save Slot 1"
    "[TRADUCIR: Save Slot 1]"

#   "Yes"
    "[TRADUCIR: Yes]"

#   "Load"
    "[TRADUCIR: Load]"

#   "Load Slot 1"
    "[TRADUCIR: Load Slot 1]"

#   "Yes"
    "[TRADUCIR: Yes]"

#   "Prefs"
    "[TRADUCIR: Prefs]"

#   "About"
    "[TRADUCIR: About]"

#   "Help"
    "[TRADUCIR: Help]"

#   "Main Menu"
    "[TRADUCIR: Main Menu]"

#   "Yes"
    "[TRADUCIR: Yes]"

#   "Load"
    "[TRADUCIR: Load]"

#   "Load Slot 1"
    "[TRADUCIR: Load Slot 1]"

#   click until "Yes."
    click until "[TRADUCIR: Yes.]"

#   scroll "Bar"
    scroll "[TRADUCIR: Bar]"

#   "Start"
    "[TRADUCIR: Start]"

#   "That's enough for now."
    "[TRADUCIR: That's enough for now.]"

#   click until "Quit"
    click until "[TRADUCIR: Quit]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\tutorial_atl.rpy DIALOGOS: 129

#   ﻿image bg band = Transform( "concert1"
    ﻿image bg band = Transform( "[TRADUCIR: concert1]"

#   image logo small = Transform( "logo base"
    image logo small = Transform( "[TRADUCIR: logo base]"

#   "concert2"
    "[TRADUCIR: concert2]"

#   "concert1"
    "[TRADUCIR: concert1]"

#   "concert2"
    "[TRADUCIR: concert2]"

#   "concert3"
    "[TRADUCIR: concert3]"

#   "concert2"
    "[TRADUCIR: concert2]"

#   "target1.png"
    "[TRADUCIR: target1.png]"

#   "target2.png"
    "[TRADUCIR: target2.png]"

#   "eileen vhappy"
    "[TRADUCIR: eileen vhappy]"

#   "eileen happy"
    "[TRADUCIR: eileen happy]"

#   "eileen vhappy"
    "[TRADUCIR: eileen vhappy]"

#   "eileen happy"
    "[TRADUCIR: eileen happy]"

#   "eileen vhappy"
    "[TRADUCIR: eileen vhappy]"

#   "eileen happy"
    "[TRADUCIR: eileen happy]"

#   "bg washington"
    "[TRADUCIR: bg washington]"

#   "bg whitehouse"
    "[TRADUCIR: bg whitehouse]"

#   "bg washington"
    "[TRADUCIR: bg washington]"

#   e "In this tutorial, I'll teach you how Ren'Py positions things on the screen. But before that, let's learn a little bit about how Python handles numbers."
    e "[TRADUCIR: In this tutorial, I'll teach you how Ren'Py positions things on the screen. But before that, let's learn a little bit about how Python handles numbers.]"

#   e "There are two main kinds of numbers in Python: integers and floating point numbers. An integer consists entirely of digits, while a floating point number has a decimal point."
    e "[TRADUCIR: There are two main kinds of numbers in Python: integers and floating point numbers. An integer consists entirely of digits, while a floating point number has a decimal point.]"

#   e "For example, 100 is an integer, while 0.5 is a floating point number, or float for short. In this system, there are two zeros: 0 is an integer, and 0.0 is a float."
    e "[TRADUCIR: For example, 100 is an integer, while 0.5 is a floating point number, or float for short. In this system, there are two zeros: 0 is an integer, and 0.0 is a float.]"

#   e "Ren'Py uses integers to represent absolute coordinates, and floats to represent fractions of an area with known size."
    e "[TRADUCIR: Ren'Py uses integers to represent absolute coordinates, and floats to represent fractions of an area with known size.]"

#   e "When we're positioning something, the area is usually the entire screen."
    e "[TRADUCIR: When we're positioning something, the area is usually the entire screen.]"

#   e "Let me get out of the way, and I'll show you where some positions are."
    e "[TRADUCIR: Let me get out of the way, and I'll show you where some positions are.]"

#   e "The origin is the upper-left corner of the screen. That's where the x position (xpos) and the y position (ypos) are both zero."
    e "[TRADUCIR: The origin is the upper-left corner of the screen. That's where the x position (xpos) and the y position (ypos) are both zero.]"

#   e "When we increase xpos, we move to the right. So here's an xpos of .5, meaning half the width across the screen."
    e "[TRADUCIR: When we increase xpos, we move to the right. So here's an xpos of .5, meaning half the width across the screen.]"

#   e "Increasing xpos to 1.0 moves us to the right-hand border of the screen."
    e "[TRADUCIR: Increasing xpos to 1.0 moves us to the right-hand border of the screen.]"

#   e "We can also use an absolute xpos, which is given in an absolute number of pixels from the left side of the screen. For example, since this window is 1280 pixels across, using an xpos of 640 will return the target to the center of the top row."
    e "[TRADUCIR: We can also use an absolute xpos, which is given in an absolute number of pixels from the left side of the screen. For example, since this window is 1280 pixels across, using an xpos of 640 will return the target to the center of the top row.]"

#   e "The y-axis position, or ypos works the same way. Right now, we have a ypos of 0.0."
    e "[TRADUCIR: The y-axis position, or ypos works the same way. Right now, we have a ypos of 0.0.]"

#   e "Here's a ypos of 0.5."
    e "[TRADUCIR: Here's a ypos of 0.5.]"

#   e "A ypos of 1.0 specifies a position at the bottom of the screen. If you look carefully, you can see the position indicator spinning below the text window."
    e "[TRADUCIR: A ypos of 1.0 specifies a position at the bottom of the screen. If you look carefully, you can see the position indicator spinning below the text window.]"

#   e "Like xpos, ypos can also be an integer. In this case, ypos would give the total number of pixels from the top of the screen."
    e "[TRADUCIR: Like xpos, ypos can also be an integer. In this case, ypos would give the total number of pixels from the top of the screen.]"

#   e "Can you guess where this position is, relative to the screen?"
    e "[TRADUCIR: Can you guess where this position is, relative to the screen?]"

#   "xpos 1.0 ypos .5"
    "[TRADUCIR: xpos 1.0 ypos .5]"

#   e "Sorry, that's wrong. The xpos is .75, and the ypos is .25."
    e "[TRADUCIR: Sorry, that's wrong. The xpos is .75, and the ypos is .25.]"

#   e "In other words, it's 75%% of the way from the left side, and 25%% of the way from the top."
    e "[TRADUCIR: In other words, it's 75%% of the way from the left side, and 25%% of the way from the top.]"

#   "xpos .75 ypos .25"
    "[TRADUCIR: xpos .75 ypos .25]"

#   e "Good job! You got that position right."
    e "[TRADUCIR: Good job! You got that position right.]"

#   "xpos .25 ypos .33"
    "[TRADUCIR: xpos .25 ypos .33]"

#   e "Sorry, that's wrong. The xpos is .75, and the ypos is .25."
    e "[TRADUCIR: Sorry, that's wrong. The xpos is .75, and the ypos is .25.]"

#   e "In other words, it's 75%% of the way from the left side, and 25%% of the way from the top."
    e "[TRADUCIR: In other words, it's 75%% of the way from the left side, and 25%% of the way from the top.]"

#   e "The second position we care about is the anchor. The anchor is a spot on the thing being positioned."
    e "[TRADUCIR: The second position we care about is the anchor. The anchor is a spot on the thing being positioned.]"

#   e "For example, here we have an xanchor of 0.0 and a yanchor of 0.0. It's in the upper-left corner of the logo image."
    e "[TRADUCIR: For example, here we have an xanchor of 0.0 and a yanchor of 0.0. It's in the upper-left corner of the logo image.]"

#   e "When we increase the xanchor to 1.0, the anchor moves to the right corner of the image."
    e "[TRADUCIR: When we increase the xanchor to 1.0, the anchor moves to the right corner of the image.]"

#   e "Similarly, when both xanchor and yanchor are 1.0, the anchor is the bottom-right corner."
    e "[TRADUCIR: Similarly, when both xanchor and yanchor are 1.0, the anchor is the bottom-right corner.]"

#   e "To place an image on the screen, we need both the position and the anchor."
    e "[TRADUCIR: To place an image on the screen, we need both the position and the anchor.]"

#   e "We then line them up, so that both the position and anchor are at the same point on the screen."
    e "[TRADUCIR: We then line them up, so that both the position and anchor are at the same point on the screen.]"

#   e "When we place both in the upper-left corner, the image moves to the upper-left corner of the screen."
    e "[TRADUCIR: When we place both in the upper-left corner, the image moves to the upper-left corner of the screen.]"

#   e "With the right combination of position and anchor, any place on the screen can be specified, without even knowing the size of the image."
    e "[TRADUCIR: With the right combination of position and anchor, any place on the screen can be specified, without even knowing the size of the image.]"

#   e "It's often useful to set xpos and xanchor to the same value. We call that xalign, and it gives a fractional position on the screen."
    e "[TRADUCIR: It's often useful to set xpos and xanchor to the same value. We call that xalign, and it gives a fractional position on the screen.]"

#   e "For example, when we set xalign to 0.0, things are aligned to the left side of the screen."
    e "[TRADUCIR: For example, when we set xalign to 0.0, things are aligned to the left side of the screen.]"

#   e "When we set it to 1.0, then we're aligned to the right side of the screen."
    e "[TRADUCIR: When we set it to 1.0, then we're aligned to the right side of the screen.]"

#   e "And when we set it to 0.5, we're back to the center of the screen."
    e "[TRADUCIR: And when we set it to 0.5, we're back to the center of the screen.]"

#   e "Setting yalign is similar, except along the y-axis."
    e "[TRADUCIR: Setting yalign is similar, except along the y-axis.]"

#   e "Remember that xalign is just setting xpos and xanchor to the same value, and yalign is just setting ypos and yanchor to the same value."
    e "[TRADUCIR: Remember that xalign is just setting xpos and xanchor to the same value, and yalign is just setting ypos and yanchor to the same value.]"

#   e "The xcenter and ycenter properties position the center of the image.  Here, with xcenter set to .75, the center of the image is three-quarters of the way to the right side of the screen."
    e "[TRADUCIR: The xcenter and ycenter properties position the center of the image.  Here, with xcenter set to .75, the center of the image is three-quarters of the way to the right side of the screen.]"

#   e "The difference between xalign and xcenter is more obvious when xcenter is 1.0, and the image is halfway off the right side of the screen."
    e "[TRADUCIR: The difference between xalign and xcenter is more obvious when xcenter is 1.0, and the image is halfway off the right side of the screen.]"

#   e "There are the xoffset and yoffset properties, which are applied after everything else, and offset things to the right or bottom, respectively."
    e "[TRADUCIR: There are the xoffset and yoffset properties, which are applied after everything else, and offset things to the right or bottom, respectively.]"

#   e "Of course, you can use negative numbers to offset things to the left and top."
    e "[TRADUCIR: Of course, you can use negative numbers to offset things to the left and top.]"

#   e "Lastly, I'll mention that there are combined properties like align, pos, anchor, and center. Align takes a pair of numbers, and sets xalign to the first and yalign to the second. The others are similar."
    e "[TRADUCIR: Lastly, I'll mention that there are combined properties like align, pos, anchor, and center. Align takes a pair of numbers, and sets xalign to the first and yalign to the second. The others are similar.]"

#   e "Once you understand positions, you can use transformations to move things around the Ren'Py screen."
    e "[TRADUCIR: Once you understand positions, you can use transformations to move things around the Ren'Py screen.]"

#   e "Ren'Py uses transforms to animate, manipulate, and place images. We've already seen the very simplest of transforms in use:"
    e "[TRADUCIR: Ren'Py uses transforms to animate, manipulate, and place images. We've already seen the very simplest of transforms in use:]"

#   e "Transforms can be very simple affairs that place the image somewhere on the screen, like the right transform."
    e "[TRADUCIR: Transforms can be very simple affairs that place the image somewhere on the screen, like the right transform.]"

#   e "But transforms can also be far more complicated affairs, that introduce animation and effects into the mix. To demonstrate, let's have a Gratuitous Rock Concert!"
    e "[TRADUCIR: But transforms can also be far more complicated affairs, that introduce animation and effects into the mix. To demonstrate, let's have a Gratuitous Rock Concert!]"

#   play music "renpyallstars.ogg"
    play music "[TRADUCIR: renpyallstars.ogg]"

#   e "But first, let's have... a Gratuitous Rock Concert!"
    e "[TRADUCIR: But first, let's have... a Gratuitous Rock Concert!]"

#   play music "sunflower-slow-drag.ogg"
    play music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "That was a lot of work, but it was built out of small parts."
    e "[TRADUCIR: That was a lot of work, but it was built out of small parts.]"

#   e "Most transforms in Ren'Py are built using the Animation and Transform Language, or ATL for short."
    e "[TRADUCIR: Most transforms in Ren'Py are built using the Animation and Transform Language, or ATL for short.]"

#   e "There are currently three places where ATL can be used in Ren'Py."
    e "[TRADUCIR: There are currently three places where ATL can be used in Ren'Py.]"

#   e "The first place ATL can be used is as part of an image statement. Instead of a displayable, an image may be defined as a block of ATL code."
    e "[TRADUCIR: The first place ATL can be used is as part of an image statement. Instead of a displayable, an image may be defined as a block of ATL code.]"

#   e "When used in this way, we have to be sure that ATL includes one or more displayables to actually show."
    e "[TRADUCIR: When used in this way, we have to be sure that ATL includes one or more displayables to actually show.]"

#   e "The second way is through the use of the transform statement. This assigns the ATL block to a python variable, allowing it to be used in at clauses and inside other transforms."
    e "[TRADUCIR: The second way is through the use of the transform statement. This assigns the ATL block to a python variable, allowing it to be used in at clauses and inside other transforms.]"

#   e "Finally, an ATL block can be used as part of a show statement, instead of the at clause."
    e "[TRADUCIR: Finally, an ATL block can be used as part of a show statement, instead of the at clause.]"

#   e "When ATL is used as part of a show statement, values of properties exist even when the transform is changed. So even though your click stopped the motion, the image remains in the same place."
    e "[TRADUCIR: When ATL is used as part of a show statement, values of properties exist even when the transform is changed. So even though your click stopped the motion, the image remains in the same place.]"

#   e "The key to ATL is what we call composability. ATL is made up of relatively simple commands, which can be combined together to create complicated transforms."
    e "[TRADUCIR: The key to ATL is what we call composability. ATL is made up of relatively simple commands, which can be combined together to create complicated transforms.]"

#   e "Before I explain how ATL works, let me explain what animation and transformation are."
    e "[TRADUCIR: Before I explain how ATL works, let me explain what animation and transformation are.]"

#   e "Animation is when the displayable being shown changes. For example, right now I am changing my expression."
    e "[TRADUCIR: Animation is when the displayable being shown changes. For example, right now I am changing my expression.]"

#   e "Transformation involves moving or distorting an image. This includes placing it on the screen, zooming it in and out, rotating it, and changing its opacity."
    e "[TRADUCIR: Transformation involves moving or distorting an image. This includes placing it on the screen, zooming it in and out, rotating it, and changing its opacity.]"

#   e "To introduce ATL, let's start by looking at a simple animation. Here's one that consists of five lines of ATL code, contained within an image statement."
    e "[TRADUCIR: To introduce ATL, let's start by looking at a simple animation. Here's one that consists of five lines of ATL code, contained within an image statement.]"

#   e "To change a displayable, simply mention it on a line of ATL. Here, we're switching back and forth between two images."
    e "[TRADUCIR: To change a displayable, simply mention it on a line of ATL. Here, we're switching back and forth between two images.]"

#   e "Since we're defining an image, the first line of ATL must give a displayable. Otherwise, there would be nothing to show."
    e "[TRADUCIR: Since we're defining an image, the first line of ATL must give a displayable. Otherwise, there would be nothing to show.]"

#   e "The second and fourth lines are pause statements, which cause ATL to wait half a second each before continuing. That's how we give the delay between images."
    e "[TRADUCIR: The second and fourth lines are pause statements, which cause ATL to wait half a second each before continuing. That's how we give the delay between images.]"

#   e "The final line is a repeat statement. This causes the current block of ATL to be restarted. You can only have one repeat statement per block."
    e "[TRADUCIR: The final line is a repeat statement. This causes the current block of ATL to be restarted. You can only have one repeat statement per block.]"

#   e "If we were to write repeat 2 instead, the animation would loop twice, then stop."
    e "[TRADUCIR: If we were to write repeat 2 instead, the animation would loop twice, then stop.]"

#   e "Omitting the repeat statement means that the animation stops once we reach the end of the block of ATL code."
    e "[TRADUCIR: Omitting the repeat statement means that the animation stops once we reach the end of the block of ATL code.]"

#   e "By default, displayables are replaced instantaneously. We can also use a with clause to give a transition between displayables."
    e "[TRADUCIR: By default, displayables are replaced instantaneously. We can also use a with clause to give a transition between displayables.]"

#   e "With animation done, we'll see how we can use ATL to transform images, starting with positioning an image on the screen."
    e "[TRADUCIR: With animation done, we'll see how we can use ATL to transform images, starting with positioning an image on the screen.]"

#   e "The simplest thing we can do is to statically position an image. This is done by giving the names of the position properties, followed by the property values."
    e "[TRADUCIR: The simplest thing we can do is to statically position an image. This is done by giving the names of the position properties, followed by the property values.]"

#   e "With a few more statements, we can move things around on the screen."
    e "[TRADUCIR: With a few more statements, we can move things around on the screen.]"

#   e "This example starts the image off at the top-right of the screen, and waits a second. It then moves it to the left side, waits another second, and repeats."
    e "[TRADUCIR: This example starts the image off at the top-right of the screen, and waits a second. It then moves it to the left side, waits another second, and repeats.]"

#   e "The pause and repeat statements are the same statements we used in our animations. They work throughout ATL code."
    e "[TRADUCIR: The pause and repeat statements are the same statements we used in our animations. They work throughout ATL code.]"

#   e "Having the image jump around on the screen isn't all that useful. That's why ATL has the interpolation statement."
    e "[TRADUCIR: Having the image jump around on the screen isn't all that useful. That's why ATL has the interpolation statement.]"

#   e "The interpolation statement allows you to smoothly vary the value of a transform property, from an old to a new value."
    e "[TRADUCIR: The interpolation statement allows you to smoothly vary the value of a transform property, from an old to a new value.]"

#   e "Here, we have an interpolation statement on the second ATL line. It starts off with the name of a time function, in this case linear."
    e "[TRADUCIR: Here, we have an interpolation statement on the second ATL line. It starts off with the name of a time function, in this case linear.]"

#   e "That's followed by an amount of time, in this case three seconds. It ends with a list of properties, each followed by its new value."
    e "[TRADUCIR: That's followed by an amount of time, in this case three seconds. It ends with a list of properties, each followed by its new value.]"

#   e "The value of each property is interpolated from its value when the statement starts to the value at the end of the statement. This is done once per frame, allowing smooth animation."
    e "[TRADUCIR: The value of each property is interpolated from its value when the statement starts to the value at the end of the statement. This is done once per frame, allowing smooth animation.]"

#   e "ATL supports more complicated move types, like circle and spline motion. But I won't be showing those here."
    e "[TRADUCIR: ATL supports more complicated move types, like circle and spline motion. But I won't be showing those here.]"

#   e "Apart from displayables, pause, interpolation, and repeat, there are a few other statements we can use as part of ATL."
    e "[TRADUCIR: Apart from displayables, pause, interpolation, and repeat, there are a few other statements we can use as part of ATL.]"

#   e "ATL transforms created using the statement become ATL statements themselves. Since the default positions are also transforms, this means that we can use left, right, and center inside of an ATL block."
    e "[TRADUCIR: ATL transforms created using the statement become ATL statements themselves. Since the default positions are also transforms, this means that we can use left, right, and center inside of an ATL block.]"

#   e "Here, we have two new statements. The block statement allows you to include a block of ATL code. Since the repeat statement applies to blocks, this lets you repeat only part of an ATL transform."
    e "[TRADUCIR: Here, we have two new statements. The block statement allows you to include a block of ATL code. Since the repeat statement applies to blocks, this lets you repeat only part of an ATL transform.]"

#   e "We also have the time statement, which runs after the given number of seconds have elapsed from the start of the block. It will run even if another statement is running, stopping the other statement."
    e "[TRADUCIR: We also have the time statement, which runs after the given number of seconds have elapsed from the start of the block. It will run even if another statement is running, stopping the other statement.]"

#   e "So this example bounces the image back and forth for eleven and a half seconds, and then moves it to the right side of the screen."
    e "[TRADUCIR: So this example bounces the image back and forth for eleven and a half seconds, and then moves it to the right side of the screen.]"

#   e "The parallel statement lets us run two blocks of ATL code at the same time."
    e "[TRADUCIR: The parallel statement lets us run two blocks of ATL code at the same time.]"

#   e "Here, the top block move the image in the horizontal direction, and the bottom block moves it in the vertical direction. Since they're moving at different speeds, it looks like the image is bouncing on the screen."
    e "[TRADUCIR: Here, the top block move the image in the horizontal direction, and the bottom block moves it in the vertical direction. Since they're moving at different speeds, it looks like the image is bouncing on the screen.]"

#   e "Finally, the choice statement makes Ren'Py randomly pick a block of ATL code. This allows you to add some variation as to what Ren'Py shows."
    e "[TRADUCIR: Finally, the choice statement makes Ren'Py randomly pick a block of ATL code. This allows you to add some variation as to what Ren'Py shows.]"

#   e "This tutorial game has only scratched the surface of what you can do with ATL. For example, we haven't even covered the on and event statements. For more information, you might want to check out {a=https://renpy.org/doc/html/atl.html}the ATL chapter in the reference manual{/a}."
    e "[TRADUCIR: This tutorial game has only scratched the surface of what you can do with ATL. For example, we haven't even covered the on and event statements. For more information, you might want to check out {a=https://renpy.org/doc/html/atl.html}the ATL chapter in the reference manual{/a}.]"

#   e "Ren'Py has quite a few transform properties that can be used with ATL, the Transform displayable, and the add Screen Language statement."
    e "[TRADUCIR: Ren'Py has quite a few transform properties that can be used with ATL, the Transform displayable, and the add Screen Language statement.]"

#   e "Here, we'll show them off so you can see them in action and get used to what each does."
    e "[TRADUCIR: Here, we'll show them off so you can see them in action and get used to what each does.]"

#   e "First off, all of the position properties are also transform properties. These include the pos, anchor, align, center, and offset properties."
    e "[TRADUCIR: First off, all of the position properties are also transform properties. These include the pos, anchor, align, center, and offset properties.]"

#   e "The position properties can also be used to pan over a displayable larger than the screen, by giving xpos and ypos negative values."
    e "[TRADUCIR: The position properties can also be used to pan over a displayable larger than the screen, by giving xpos and ypos negative values.]"

#   "The subpixel property controls how things are lined up with the screen. When False, images can be pixel-perfect, but there can be pixel jumping."
    "[TRADUCIR: The subpixel property controls how things are lined up with the screen. When False, images can be pixel-perfect, but there can be pixel jumping.]"

#   "When it's set to True, movement is smoother at the cost of blurring images a little."
    "[TRADUCIR: When it's set to True, movement is smoother at the cost of blurring images a little.]"

#   e "Transforms also support polar coordinates. The around property sets the center of the coordinate system to coordinates given in pixels."
    e "[TRADUCIR: Transforms also support polar coordinates. The around property sets the center of the coordinate system to coordinates given in pixels.]"

#   e "The angle property gives the angle in degrees. Angles run clockwise, with the zero angle at the top of the screen."
    e "[TRADUCIR: The angle property gives the angle in degrees. Angles run clockwise, with the zero angle at the top of the screen.]"

#   e "The radius property gives the distance in pixels from the anchor of the displayable to the center of the coordinate system."
    e "[TRADUCIR: The radius property gives the distance in pixels from the anchor of the displayable to the center of the coordinate system.]"

#   e "There are several ways to resize a displayable. The zoom property lets us scale a displayable by a factor, making it bigger and smaller."
    e "[TRADUCIR: There are several ways to resize a displayable. The zoom property lets us scale a displayable by a factor, making it bigger and smaller.]"

#   e "The xzoom and yzoom properties allow the displayable to be scaled in the X and Y directions independently."
    e "[TRADUCIR: The xzoom and yzoom properties allow the displayable to be scaled in the X and Y directions independently.]"

#   e "By making xzoom or yzoom a negative number, we can flip the image horizontally or vertically."
    e "[TRADUCIR: By making xzoom or yzoom a negative number, we can flip the image horizontally or vertically.]"

#   e "Instead of zooming by a scale factor, the size transform property can be used to scale a displayable to a size in pixels."
    e "[TRADUCIR: Instead of zooming by a scale factor, the size transform property can be used to scale a displayable to a size in pixels.]"

#   e "The alpha property is used to change the opacity of a displayable. This can make it appear and disappear."
    e "[TRADUCIR: The alpha property is used to change the opacity of a displayable. This can make it appear and disappear.]"

#   e "The rotate property rotates a displayable."
    e "[TRADUCIR: The rotate property rotates a displayable.]"

#   e "By default, when a displayable is rotated, Ren'Py will include extra space on all four sides, so the size doesn't change as it rotates. Here, you can see the extra space on the left and top, and it's also there on the right and bottom."
    e "[TRADUCIR: By default, when a displayable is rotated, Ren'Py will include extra space on all four sides, so the size doesn't change as it rotates. Here, you can see the extra space on the left and top, and it's also there on the right and bottom.]"

#   e "By setting rotate_pad to False, we can get rid of the space, at the cost of the size of the displayable changing as it rotates."
    e "[TRADUCIR: By setting rotate_pad to False, we can get rid of the space, at the cost of the size of the displayable changing as it rotates.]"

#   e "The tile transform properties, xtile and ytile, repeat the displayable multiple times."
    e "[TRADUCIR: The tile transform properties, xtile and ytile, repeat the displayable multiple times.]"

#   e "The crop property crops a rectangle out of a displayable, showing only part of it."
    e "[TRADUCIR: The crop property crops a rectangle out of a displayable, showing only part of it.]"

#   e "When used together, crop and size can be used to focus in on specific parts of an image."
    e "[TRADUCIR: When used together, crop and size can be used to focus in on specific parts of an image.]"

#   e "The xpan and ypan properties can be used to pan over a displayable, given an angle in degrees, with 0 being the center."
    e "[TRADUCIR: The xpan and ypan properties can be used to pan over a displayable, given an angle in degrees, with 0 being the center.]"

#   e "Those are all the transform properties we have to work with. By putting them together in the right order, you can create complex things."
    e "[TRADUCIR: Those are all the transform properties we have to work with. By putting them together in the right order, you can create complex things.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\tutorial_director.rpy DIALOGOS: 24

#   define director.show_tags = { "eileen"
    define director.show_tags = { "[TRADUCIR: eileen]"

#   e "There are a few tools you can access by pressing the right commands on the keyboard."
    e "[TRADUCIR: There are a few tools you can access by pressing the right commands on the keyboard.]"

#   e "Typing Shift+R turns on autoreload mode. When it's enabled, your game will automatically reload when you edit a script file."
    e "[TRADUCIR: Typing Shift+R turns on autoreload mode. When it's enabled, your game will automatically reload when you edit a script file.]"

#   e "Shift+O brings you to the console, which lets you enter Ren'Py and Python commands to try them out."
    e "[TRADUCIR: Shift+O brings you to the console, which lets you enter Ren'Py and Python commands to try them out.]"

#   e "Shift+D pops up a developer menu with access to these and other functions."
    e "[TRADUCIR: Shift+D pops up a developer menu with access to these and other functions.]"

#   e "The most powerful tool is the interactive director that lets you add images, music, and voice lines to your game from inside Ren'Py."
    e "[TRADUCIR: The most powerful tool is the interactive director that lets you add images, music, and voice lines to your game from inside Ren'Py.]"

#   e "The idea is that you can use an editor to write the script and logic of your visual novel, and then interactively add images in the right places."
    e "[TRADUCIR: The idea is that you can use an editor to write the script and logic of your visual novel, and then interactively add images in the right places.]"

#   e "It looks like Ren'Py is installed read-only on your system, so you won't be able to try out the interactive director now."
    e "[TRADUCIR: It looks like Ren'Py is installed read-only on your system, so you won't be able to try out the interactive director now.]"

#   e "You'll need to make your own project, and try it out there. But I can tell you how to use it."
    e "[TRADUCIR: You'll need to make your own project, and try it out there. But I can tell you how to use it.]"

#   e "You can try the interactive director out right now, by using it to change this tutorial game."
    e "[TRADUCIR: You can try the interactive director out right now, by using it to change this tutorial game.]"

#   e "Be sure to click my dialogue at the bottom of the screen to advance the tutorial."
    e "[TRADUCIR: Be sure to click my dialogue at the bottom of the screen to advance the tutorial.]"

#   e "If something goes wrong, don't worry. Quitting and restarting this tutorial will remove your changes and bring everything back to normal."
    e "[TRADUCIR: If something goes wrong, don't worry. Quitting and restarting this tutorial will remove your changes and bring everything back to normal.]"

#   e "To get started, let's go back to a blank slate, with no images on the screen."
    e "[TRADUCIR: To get started, let's go back to a blank slate, with no images on the screen.]"

#   e "You can show the director at any time by pressing the 'D' key on your keyboard. Ren'Py will reload, and you'll come back here. Try it now."
    e "[TRADUCIR: You can show the director at any time by pressing the 'D' key on your keyboard. Ren'Py will reload, and you'll come back here. Try it now.]"

#   e "Let's add a background. Click the '+' to pick where to add it, then the 'scene' statement and 'washington' for the image. Finally, click 'Add' to add it."
    e "[TRADUCIR: Let's add a background. Click the '+' to pick where to add it, then the 'scene' statement and 'washington' for the image. Finally, click 'Add' to add it.]"

#   e "Next, add a sprite. Click '+', then 'show', 'eileen', 'happy', and 'Add'. Once you've added it, dissolve it in by clicking the second '+', then 'with', 'dissolve', and 'Add'."
    e "[TRADUCIR: Next, add a sprite. Click '+', then 'show', 'eileen', 'happy', and 'Add'. Once you've added it, dissolve it in by clicking the second '+', then 'with', 'dissolve', and 'Add'.]"

#   e "You can edit or remove statements with the pencil icon. You can move me to the right by editing the show statement, then clicking '(transform)', 'right', and 'Change'."
    e "[TRADUCIR: You can edit or remove statements with the pencil icon. You can move me to the right by editing the show statement, then clicking '(transform)', 'right', and 'Change'.]"

#   e "Finally, you can use the play, queue, stop, and voice statements to manage audio. Try adding 'play', 'music', 'sunflower-slow-drag.ogg'."
    e "[TRADUCIR: Finally, you can use the play, queue, stop, and voice statements to manage audio. Try adding 'play', 'music', 'sunflower-slow-drag.ogg'.]"

#   if renpy.showing( "lucy"
    if renpy.showing( "[TRADUCIR: lucy]"

#   l "Finally, I get some more screen time!"
    l "[TRADUCIR: Finally, I get some more screen time!]"

#   queue music "sunflower-slow-drag.ogg"
    queue music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "The changes you make with the director are permanent. They're saved to the script, and you can rollback or repeat this section to see them."
    e "[TRADUCIR: The changes you make with the director are permanent. They're saved to the script, and you can rollback or repeat this section to see them.]"

#   e "However, we reset this tutorial when the game restarts, so you can try again from a clean slate. That won't happen with your own visual novel."
    e "[TRADUCIR: However, we reset this tutorial when the game restarts, so you can try again from a clean slate. That won't happen with your own visual novel.]"

#   e "I hope these tools make developing your visual novel that much easier."
    e "[TRADUCIR: I hope these tools make developing your visual novel that much easier.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\tutorial_distribute.rpy DIALOGOS: 12

#   e "One thing Ren'Py makes easy is building distributions of your visual novel so you can give it to players."
    e "[TRADUCIR: One thing Ren'Py makes easy is building distributions of your visual novel so you can give it to players.]"

#   e "Before you build distributions, you should use the Lint command to check your game for problems."
    e "[TRADUCIR: Before you build distributions, you should use the Lint command to check your game for problems.]"

#   e "While not every potential problem lint reports is a real issue, they generally are, and you should try to understand what might be wrong."
    e "[TRADUCIR: While not every potential problem lint reports is a real issue, they generally are, and you should try to understand what might be wrong.]"

#   e "After lint has finished, you can choose Build Distributions to build the Windows, Linux, and Mac distributions of your game."
    e "[TRADUCIR: After lint has finished, you can choose Build Distributions to build the Windows, Linux, and Mac distributions of your game.]"

#   e "This can be as simple as clicking the Build button, when you're not on a Mac."
    e "[TRADUCIR: This can be as simple as clicking the Build button, when you're not on a Mac.]"

#   e "If you are on a Macintosh, you can have Ren'Py sign the Mac application, which makes it easier for players to run. To enable this, you need to set build.mac_identity in options.rpy."
    e "[TRADUCIR: If you are on a Macintosh, you can have Ren'Py sign the Mac application, which makes it easier for players to run. To enable this, you need to set build.mac_identity in options.rpy.]"

#   e "Ren'Py supports the mobile platforms, Android and iOS. We also support ChromeOS, through its ability to run Android apps."
    e "[TRADUCIR: Ren'Py supports the mobile platforms, Android and iOS. We also support ChromeOS, through its ability to run Android apps.]"

#   e "These mobile platforms can be a bit more complicated. While Android apps can be built everywhere, iOS requires a Mac."
    e "[TRADUCIR: These mobile platforms can be a bit more complicated. While Android apps can be built everywhere, iOS requires a Mac.]"

#   e "Mobile platforms might also require you to change your visual novel a little, due to the smaller limited devices. For example, buttons need to be made large enough for a person to touch."
    e "[TRADUCIR: Mobile platforms might also require you to change your visual novel a little, due to the smaller limited devices. For example, buttons need to be made large enough for a person to touch.]"

#   e "Rather than cover mobile here, I'll point you to the {a=https://www.renpy.org/doc/html/android.html}Android{/a} and {a=https://www.renpy.org/doc/html/ios.html}iOS{/a} documentation, where you can read more."
    e "[TRADUCIR: Rather than cover mobile here, I'll point you to the {a=https://www.renpy.org/doc/html/android.html}Android{/a} and {a=https://www.renpy.org/doc/html/ios.html}iOS{/a} documentation, where you can read more.]"

#   e "Thanks to the distribution tools Ren'Py ships with, there are thousands of visual novels available."
    e "[TRADUCIR: Thanks to the distribution tools Ren'Py ships with, there are thousands of visual novels available.]"

#   e "I hope that soon, yours will be one of them!"
    e "[TRADUCIR: I hope that soon, yours will be one of them!]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\tutorial_nvlmode.rpy DIALOGOS: 18

#   define nvle = Character(_( "Eileen"
    define nvle = Character(_( "[TRADUCIR: Eileen]"

#   define config.lint_ignore_redefine += [ "store.menu"
    define config.lint_ignore_redefine += [ "[TRADUCIR: store.menu]"

#   nvle "NVL-style games are games that cover the full screen with text, rather then placing it in a window at the bottom of the screen. Like this."
    nvle "[TRADUCIR: NVL-style games are games that cover the full screen with text, rather then placing it in a window at the bottom of the screen. Like this.]"

#   nvle "To use NVL-mode, you need to define Characters with a kind=nvl."
    nvle "[TRADUCIR: To use NVL-mode, you need to define Characters with a kind=nvl.]"

#   nvle "Then just use that character in a say statement."
    nvle "[TRADUCIR: Then just use that character in a say statement.]"

#   nvle "You use 'nvl clear' to clear the screen when that becomes necessary."
    nvle "[TRADUCIR: You use 'nvl clear' to clear the screen when that becomes necessary.]"

#   nvle "The 'nvl show' and 'nvl hide' statements use transitions to show and hide the NVL window."
    nvle "[TRADUCIR: The 'nvl show' and 'nvl hide' statements use transitions to show and hide the NVL window.]"

#   nvle "NVL-mode also supports showing menus to the player, providing it's the last thing on the screen. Understand?"
    nvle "[TRADUCIR: NVL-mode also supports showing menus to the player, providing it's the last thing on the screen. Understand?]"

#   "Yes."
    "[TRADUCIR: Yes.]"

#   nvle "Good!"
    nvle "[TRADUCIR: Good!]"

#   "No."
    "[TRADUCIR: No.]"

#   nvle "Well, hopefully the code below makes it a little more clear."
    nvle "[TRADUCIR: Well, hopefully the code below makes it a little more clear.]"

#   nvle "Games can mix NVL-mode and the normal ADV-mode by having some characters that have kind=nvl, and some that do not."
    nvle "[TRADUCIR: Games can mix NVL-mode and the normal ADV-mode by having some characters that have kind=nvl, and some that do not.]"

#   e "You can specify transitions that occur when going from NVL-mode to ADV-mode."
    e "[TRADUCIR: You can specify transitions that occur when going from NVL-mode to ADV-mode.]"

#   nvle "As well as when going from ADV-mode to NVL-mode."
    nvle "[TRADUCIR: As well as when going from ADV-mode to NVL-mode.]"

#   nvle "Text tags like {{w}{w} work in NVL-mode."
    nvle "[TRADUCIR: Text tags like {{w}{w} work in NVL-mode.]"

#   extend "As does the \"
    extend "[TRADUCIR: As does the \]"

#   nvle "And that's it for NVL-mode."
    nvle "[TRADUCIR: And that's it for NVL-mode.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\tutorial_playing.rpy DIALOGOS: 34

#   e "As someone who has played more than a few visual novels, there are many features that I expect all games to have."
    e "[TRADUCIR: As someone who has played more than a few visual novels, there are many features that I expect all games to have.]"

#   e "Features like saving, loading, changing preferences, and so on."
    e "[TRADUCIR: Features like saving, loading, changing preferences, and so on.]"

#   e "One of the nice things about Ren'Py is that the engine provides many of these features for you. You can spend your time creating your game, and let us provide these things."
    e "[TRADUCIR: One of the nice things about Ren'Py is that the engine provides many of these features for you. You can spend your time creating your game, and let us provide these things.]"

#   e "While you're in the game, you can access the game menu by right clicking or hitting the escape key."
    e "[TRADUCIR: While you're in the game, you can access the game menu by right clicking or hitting the escape key.]"

#   e "You can also access the game menu through some of the quick menu buttons at the bottom of this screen."
    e "[TRADUCIR: You can also access the game menu through some of the quick menu buttons at the bottom of this screen.]"

#   e "When you first enter the game menu, you'll see the save screen. Clicking on a numbered slot will save the game."
    e "[TRADUCIR: When you first enter the game menu, you'll see the save screen. Clicking on a numbered slot will save the game.]"

#   e "Unlike other engines, Ren'Py doesn't limit the number of save slots that you can use. You can keep hitting next until you reach the page you want."
    e "[TRADUCIR: Unlike other engines, Ren'Py doesn't limit the number of save slots that you can use. You can keep hitting next until you reach the page you want.]"

#   e "Clicking on the title of the page allows you to start typing to change the page name."
    e "[TRADUCIR: Clicking on the title of the page allows you to start typing to change the page name.]"

#   e "The load screen looks quite similar to the save screen, and lets you load a game from a save slot."
    e "[TRADUCIR: The load screen looks quite similar to the save screen, and lets you load a game from a save slot.]"

#   e "It also lets you load one of the auto-saves that Ren'Py makes for you."
    e "[TRADUCIR: It also lets you load one of the auto-saves that Ren'Py makes for you.]"

#   e "The game menu also has the preferences screen."
    e "[TRADUCIR: The game menu also has the preferences screen.]"

#   e "This screen lets you decide how Ren'Py displays, pick what Ren'Py skips, control text speed and auto-click speed, and adjust sound, music, and voice volumes."
    e "[TRADUCIR: This screen lets you decide how Ren'Py displays, pick what Ren'Py skips, control text speed and auto-click speed, and adjust sound, music, and voice volumes.]"

#   e "The game menu also lets you end the game and return to the main menu, or quit Ren'Py entirely."
    e "[TRADUCIR: The game menu also lets you end the game and return to the main menu, or quit Ren'Py entirely.]"

#   e "While the default game menus look a bit generic, with a little work they can be customized or even entirely replaced, allowing you to create menus as unique as your game."
    e "[TRADUCIR: While the default game menus look a bit generic, with a little work they can be customized or even entirely replaced, allowing you to create menus as unique as your game.]"

#   e "While inside the game, there are a few more things you can do."
    e "[TRADUCIR: While inside the game, there are a few more things you can do.]"

#   e "When I'm liking a visual novel, I want to see all the endings. Ren'Py's skip function lets me easily do this, by skipping text that I've already seen."
    e "[TRADUCIR: When I'm liking a visual novel, I want to see all the endings. Ren'Py's skip function lets me easily do this, by skipping text that I've already seen.]"

#   e "I can skip a few lines by holding down Control, or I can toggle skip mode by clicking the skip button at the bottom of the screen."
    e "[TRADUCIR: I can skip a few lines by holding down Control, or I can toggle skip mode by clicking the skip button at the bottom of the screen.]"

#   e "By default, we only skip read text, so this won't do anything the first time through the game."
    e "[TRADUCIR: By default, we only skip read text, so this won't do anything the first time through the game.]"

#   e "Clicking the auto button toggles auto-forward mode, which makes the game advance without you clicking."
    e "[TRADUCIR: Clicking the auto button toggles auto-forward mode, which makes the game advance without you clicking.]"

#   e "The Q.Save and Q.Load buttons provide a single-click way to make a save, and a fast way to load that save again."
    e "[TRADUCIR: The Q.Save and Q.Load buttons provide a single-click way to make a save, and a fast way to load that save again.]"

#   e "Pressing the 's' key saves a screenshot to disk, so I can upload pictures of the game to websites like {a=https://www.renpy.org}renpy.org{/a}."
    e "[TRADUCIR: Pressing the 's' key saves a screenshot to disk, so I can upload pictures of the game to websites like {a=https://www.renpy.org}renpy.org{/a}.]"

#   e "The history button displays a history of read text - but you can also use rollback, which is usually better."
    e "[TRADUCIR: The history button displays a history of read text - but you can also use rollback, which is usually better.]"

#   e "Would you like to hear about rollback?"
    e "[TRADUCIR: Would you like to hear about rollback?]"

#   "Yes."
    "[TRADUCIR: Yes.]"

#   "No."
    "[TRADUCIR: No.]"

#   e "You can invoke a rollback by clicking the 'Back' button, scrolling the mouse wheel up, or by pushing the page up key. That'll bring you back to the previous screen."
    e "[TRADUCIR: You can invoke a rollback by clicking the 'Back' button, scrolling the mouse wheel up, or by pushing the page up key. That'll bring you back to the previous screen.]"

#   e "While at a previous screen, you can roll forward by scrolling the mouse wheel down, or pushing the page down key."
    e "[TRADUCIR: While at a previous screen, you can roll forward by scrolling the mouse wheel down, or pushing the page down key.]"

#   e "Rolling forward through a menu will make the same choice you did last time. But you don't have to do that - Ren'Py's rollback system allows you to make a different choice."
    e "[TRADUCIR: Rolling forward through a menu will make the same choice you did last time. But you don't have to do that - Ren'Py's rollback system allows you to make a different choice.]"

#   e "You can try it by rolling back through the last menu, and saying 'No'."
    e "[TRADUCIR: You can try it by rolling back through the last menu, and saying 'No'.]"

#   e "Click back a few times, press page up, or scroll up the mouse wheel."
    e "[TRADUCIR: Click back a few times, press page up, or scroll up the mouse wheel.]"

#   e "Well, are you going to try it?"
    e "[TRADUCIR: Well, are you going to try it?]"

#   e "Your loss."
    e "[TRADUCIR: Your loss.]"

#   e "Moving on."
    e "[TRADUCIR: Moving on.]"

#   e "By allowing Ren'Py to take care of out-of-game issues like loading and saving, you can focus on making your game, while still giving players the experience they've come to expect when playing visual novels."
    e "[TRADUCIR: By allowing Ren'Py to take care of out-of-game issues like loading and saving, you can focus on making your game, while still giving players the experience they've come to expect when playing visual novels.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\tutorial_quickstart.rpy DIALOGOS: 158

#   define l = Character(_( "Lucy"
    define l = Character(_( "[TRADUCIR: Lucy]"

#   default name = "Player"
    default name = "[TRADUCIR: Player]"

#   e "When you're ready to use Ren'Py to create your visual novel, the first step is to create a new project."
    e "[TRADUCIR: When you're ready to use Ren'Py to create your visual novel, the first step is to create a new project.]"

#   e "You can create a new project by clicking 'Create New Project' on the front screen of the launcher."
    e "[TRADUCIR: You can create a new project by clicking 'Create New Project' on the front screen of the launcher.]"

#   e "If this is your first time using Ren'Py, it'll ask you for the place you want to keep your projects. The best place is always somewhere that's frequently backed up."
    e "[TRADUCIR: If this is your first time using Ren'Py, it'll ask you for the place you want to keep your projects. The best place is always somewhere that's frequently backed up.]"

#   e "After that, Ren'Py will ask for a name for your project. You'll have to stick to English letters and numbers, as zip files can't handle anything more than that."
    e "[TRADUCIR: After that, Ren'Py will ask for a name for your project. You'll have to stick to English letters and numbers, as zip files can't handle anything more than that.]"

#   e "The next thing Ren'Py will ask for is the resolution the visual novel will run at. This controls how large or small you'll have to make your game's artwork."
    e "[TRADUCIR: The next thing Ren'Py will ask for is the resolution the visual novel will run at. This controls how large or small you'll have to make your game's artwork.]"

#   e "Finally, Ren'Py will ask you to select a color scheme. You can change this after the game has been created, so just pick a color that's pleasing."
    e "[TRADUCIR: Finally, Ren'Py will ask you to select a color scheme. You can change this after the game has been created, so just pick a color that's pleasing.]"

#   e "Once that's done, Ren'Py will work for a bit and return you to the main menu with the new project selected. Now, when you click Launch, Ren'Py will start your new game."
    e "[TRADUCIR: Once that's done, Ren'Py will work for a bit and return you to the main menu with the new project selected. Now, when you click Launch, Ren'Py will start your new game.]"

#   e "To get back here, you can choose 'Tutorial' to switch to this tutorial game."
    e "[TRADUCIR: To get back here, you can choose 'Tutorial' to switch to this tutorial game.]"

#   e "You'll also need to edit the games script to make changes. To do that, click 'script.rpy' on the front page of the launcher."
    e "[TRADUCIR: You'll also need to edit the games script to make changes. To do that, click 'script.rpy' on the front page of the launcher.]"

#   e "If it's your first time doing so, Ren'Py will ask you to select a text editor. Atom might be a safe choice, but read the descriptions to be sure."
    e "[TRADUCIR: If it's your first time doing so, Ren'Py will ask you to select a text editor. Atom might be a safe choice, but read the descriptions to be sure.]"

#   e "After the text editor is downloaded, the script will open up and you can start to change what characters are saying."
    e "[TRADUCIR: After the text editor is downloaded, the script will open up and you can start to change what characters are saying.]"

#   e "Probably the most common thing a creator does with Ren'Py is to write dialogue for the player to read."
    e "[TRADUCIR: Probably the most common thing a creator does with Ren'Py is to write dialogue for the player to read.]"

#   e "But before I can show you how to write dialogue, let me show you how we present script examples."
    e "[TRADUCIR: But before I can show you how to write dialogue, let me show you how we present script examples.]"

#   "Eileen"
    "[TRADUCIR: Eileen]"

#   "Eileen"
    "[TRADUCIR: Eileen]"

#   "Eileen"
    "[TRADUCIR: Eileen]"

#   e "Let's see the simplest possible Ren'Py game."
    e "[TRADUCIR: Let's see the simplest possible Ren'Py game.]"

#   "Wow, It's really really dark in here."
    "[TRADUCIR: Wow, It's really really dark in here.]"

#   "Lucy"
    "[TRADUCIR: Lucy]"

#   e "I'll show you the script of that example."
    e "[TRADUCIR: I'll show you the script of that example.]"

#   e "This script demonstrates two kinds of Ren'Py statements, labels and say statements."
    e "[TRADUCIR: This script demonstrates two kinds of Ren'Py statements, labels and say statements.]"

#   e "The first line is a label statement. The label statement is used to give a name to a place in the program."
    e "[TRADUCIR: The first line is a label statement. The label statement is used to give a name to a place in the program.]"

#   e "In this case, we're naming a place \"
    e "[TRADUCIR: In this case, we're naming a place \]"

#   e "The next line is a simple say statement. It consists of a string beginning with a double-quote, and ending at the next double-quote."
    e "[TRADUCIR: The next line is a simple say statement. It consists of a string beginning with a double-quote, and ending at the next double-quote.]"

#   e "Special characters in strings can be escaped with a backslash. To include \"
    e "[TRADUCIR: Special characters in strings can be escaped with a backslash. To include \]"

#   "Wow, It's really really dark in here."
    "[TRADUCIR: Wow, It's really really dark in here.]"

#   e "When Ren'Py sees a single string on a line by itself, it uses the narrator to say that string. So a single string can be used to express a character's thoughts."
    e "[TRADUCIR: When Ren'Py sees a single string on a line by itself, it uses the narrator to say that string. So a single string can be used to express a character's thoughts.]"

#   "Lucy"
    "[TRADUCIR: Lucy]"

#   e "When we have two strings separated by a space, the first is used as the character's name, and the second is what the character is saying."
    e "[TRADUCIR: When we have two strings separated by a space, the first is used as the character's name, and the second is what the character is saying.]"

#   e "This two-argument form of the say statement is used for dialogue, where a character is speaking out loud."
    e "[TRADUCIR: This two-argument form of the say statement is used for dialogue, where a character is speaking out loud.]"

#   e "If you'd like, you can run this game yourself by erasing everything in your project's script.rpy file, and replacing it with the code in the box above."
    e "[TRADUCIR: If you'd like, you can run this game yourself by erasing everything in your project's script.rpy file, and replacing it with the code in the box above.]"

#   e "Be sure to preserve the spacing before lines. That's known as indentation, and it's used to help Ren'Py group lines of script into blocks."
    e "[TRADUCIR: Be sure to preserve the spacing before lines. That's known as indentation, and it's used to help Ren'Py group lines of script into blocks.]"

#   e "Using a string for a character's name is inconvenient, for two reasons."
    e "[TRADUCIR: Using a string for a character's name is inconvenient, for two reasons.]"

#   e "The first is that's it's a bit verbose. While typing \"
    e "[TRADUCIR: The first is that's it's a bit verbose. While typing \]"

#   e "The second is that it doesn't leave any place to put styling, which can change the look of a character."
    e "[TRADUCIR: The second is that it doesn't leave any place to put styling, which can change the look of a character.]"

#   e "To solve these problems, Ren'Py lets you define Characters."
    e "[TRADUCIR: To solve these problems, Ren'Py lets you define Characters.]"

#   e "Here's an example Character definition. It begins with the word \"
    e "[TRADUCIR: Here's an example Character definition. It begins with the word \]"

#   e "Define is followed by a short name for the character, like \"
    e "[TRADUCIR: Define is followed by a short name for the character, like \]"

#   e "This is followed by an equals sign, and the thing that we're defining. In this case, it's a Character."
    e "[TRADUCIR: This is followed by an equals sign, and the thing that we're defining. In this case, it's a Character.]"

#   e "On the first line, the character's name is given to be \"
    e "[TRADUCIR: On the first line, the character's name is given to be \]"

#   e "These short names are case-sensitive. Capital L is a different name from lower-case l, so you'll need to be careful about that."
    e "[TRADUCIR: These short names are case-sensitive. Capital L is a different name from lower-case l, so you'll need to be careful about that.]"

#   e "Now that we have a character defined, we can use it to say dialogue."
    e "[TRADUCIR: Now that we have a character defined, we can use it to say dialogue.]"

#   l "Why are you trying to put words into my mouth? And who are you calling \"
    l "[TRADUCIR: Why are you trying to put words into my mouth? And who are you calling \]"

#   l "What's more, what are you going to do about the Grue problem? Are you just going to leave me here?"
    l "[TRADUCIR: What's more, what are you going to do about the Grue problem? Are you just going to leave me here?]"

#   e "Here's the full game, including the two new lines of dialogue, both of which use the Character we defined to say dialogue."
    e "[TRADUCIR: Here's the full game, including the two new lines of dialogue, both of which use the Character we defined to say dialogue.]"

#   e "The one-argument form of the say statement is unchanged, but in the two-argument form, instead of the first string we can use a short name."
    e "[TRADUCIR: The one-argument form of the say statement is unchanged, but in the two-argument form, instead of the first string we can use a short name.]"

#   e "When this say statement is run, Ren'Py will look up the short name, which is really a Python variable. It will then use the associated Character to show the dialogue."
    e "[TRADUCIR: When this say statement is run, Ren'Py will look up the short name, which is really a Python variable. It will then use the associated Character to show the dialogue.]"

#   e "The Character object controls who is speaking, the color of their name, and many other properties of the dialogue."
    e "[TRADUCIR: The Character object controls who is speaking, the color of their name, and many other properties of the dialogue.]"

#   e "Since the bulk of a visual novel is dialogue, we've tried to make it as easy to write as possible."
    e "[TRADUCIR: Since the bulk of a visual novel is dialogue, we've tried to make it as easy to write as possible.]"

#   e "Hopefully, by allowing the use of short names for characters, we've succeeded."
    e "[TRADUCIR: Hopefully, by allowing the use of short names for characters, we've succeeded.]"

#   e "A visual novel isn't much without images. So let's add some images to our little game."
    e "[TRADUCIR: A visual novel isn't much without images. So let's add some images to our little game.]"

#   e "Before we can show images, we must first choose image names, then place the image files into the images directory."
    e "[TRADUCIR: Before we can show images, we must first choose image names, then place the image files into the images directory.]"

#   e "An image name is something like 'bg cave' or 'lucy happy', with one or more parts separated by spaces."
    e "[TRADUCIR: An image name is something like 'bg cave' or 'lucy happy', with one or more parts separated by spaces.]"

#   e "Each part should start with a lower-case letter, and then contain lower-case letters, numbers, and underscores."
    e "[TRADUCIR: Each part should start with a lower-case letter, and then contain lower-case letters, numbers, and underscores.]"

#   e "The first part of an image is called the tag. For 'bg cave' the tag is 'bg', while for 'lucy happy' the tag is 'lucy'."
    e "[TRADUCIR: The first part of an image is called the tag. For 'bg cave' the tag is 'bg', while for 'lucy happy' the tag is 'lucy'.]"

#   e "You can open the images directory by clicking the appropriate button in the Ren'Py launcher."
    e "[TRADUCIR: You can open the images directory by clicking the appropriate button in the Ren'Py launcher.]"

#   e "The files in the images directory should have the same name as the image, followed by an extension like .jpg, .png, or .webp."
    e "[TRADUCIR: The files in the images directory should have the same name as the image, followed by an extension like .jpg, .png, or .webp.]"

#   e "Our example uses 'bg cave.jpg', 'lucy happy.png', and 'lucy mad.png'."
    e "[TRADUCIR: Our example uses 'bg cave.jpg', 'lucy happy.png', and 'lucy mad.png'.]"

#   e "Let's see what those look like in the game."
    e "[TRADUCIR: Let's see what those look like in the game.]"

#   l "Now that the lights are on, we don't have to worry about Grues anymore."
    l "[TRADUCIR: Now that the lights are on, we don't have to worry about Grues anymore.]"

#   l "But what's the deal with me being in a cave? Eileen gets to be out in the sun, and I'm stuck here!"
    l "[TRADUCIR: But what's the deal with me being in a cave? Eileen gets to be out in the sun, and I'm stuck here!]"

#   e "Here's the script for that scene. Notice how it includes two new statements, the scene and show statement."
    e "[TRADUCIR: Here's the script for that scene. Notice how it includes two new statements, the scene and show statement.]"

#   e "The scene statement clears the screen, and then adds a background image."
    e "[TRADUCIR: The scene statement clears the screen, and then adds a background image.]"

#   e "The show statement adds a new image on top of all the other images on the screen."
    e "[TRADUCIR: The show statement adds a new image on top of all the other images on the screen.]"

#   e "If there is already an image with the same tag, the new image is used to replace the old one."
    e "[TRADUCIR: If there is already an image with the same tag, the new image is used to replace the old one.]"

#   e "Changes to the list of shown images take place instantly, so in the example, the user won't see the background by itself."
    e "[TRADUCIR: Changes to the list of shown images take place instantly, so in the example, the user won't see the background by itself.]"

#   e "The second show statement has an at clause, which gives a location on the screen. Common locations are left, right, and center, but you can define many more."
    e "[TRADUCIR: The second show statement has an at clause, which gives a location on the screen. Common locations are left, right, and center, but you can define many more.]"

#   e "In this example, we show an image named logo base, and we show it at a creator-defined position, rightish."
    e "[TRADUCIR: In this example, we show an image named logo base, and we show it at a creator-defined position, rightish.]"

#   e "We also specify that it should be shown behind another image, in this case eileen. That's me."
    e "[TRADUCIR: We also specify that it should be shown behind another image, in this case eileen. That's me.]"

#   e "Finally, there's the hide statement, which hides the image with the given tag."
    e "[TRADUCIR: Finally, there's the hide statement, which hides the image with the given tag.]"

#   e "Since the show statement replaces an image, and the scene statement clears the scene, it's pretty rare to hide an image."
    e "[TRADUCIR: Since the show statement replaces an image, and the scene statement clears the scene, it's pretty rare to hide an image.]"

#   e "The main use is for when a character or prop leaves before the scene is over."
    e "[TRADUCIR: The main use is for when a character or prop leaves before the scene is over.]"

#   e "When the standard positions that come with Ren'Py aren't enough for you, you can create your own. Here, I'll show you the easy way to do it."
    e "[TRADUCIR: When the standard positions that come with Ren'Py aren't enough for you, you can create your own. Here, I'll show you the easy way to do it.]"

#   e "The first way to do it is to show an image followed by a colon. Then indented on the next couple of lines are the xalign and yalign transform properties."
    e "[TRADUCIR: The first way to do it is to show an image followed by a colon. Then indented on the next couple of lines are the xalign and yalign transform properties.]"

#   e "Each of the transform properties is a name followed by a value. For xalign and yalign, the values are numbers."
    e "[TRADUCIR: Each of the transform properties is a name followed by a value. For xalign and yalign, the values are numbers.]"

#   e "The xalign transform property is the important one, as it controls where the image is placed horizontally on the screen."
    e "[TRADUCIR: The xalign transform property is the important one, as it controls where the image is placed horizontally on the screen.]"

#   e "An xalign of 0.0 is the left side."
    e "[TRADUCIR: An xalign of 0.0 is the left side.]"

#   e "0.5 is the center."
    e "[TRADUCIR: 0.5 is the center.]"

#   e "And 1.0 is the right. The decimal place is important and has to be there. Just 1 by itself won't work the same."
    e "[TRADUCIR: And 1.0 is the right. The decimal place is important and has to be there. Just 1 by itself won't work the same.]"

#   e "Of course, you can pick any position in between."
    e "[TRADUCIR: Of course, you can pick any position in between.]"

#   e "The yalign property is the same way, with 0.0 being the top of the screen and 1.0 being the bottom. Since most sprites stick to the bottom, it's almost always 1.0."
    e "[TRADUCIR: The yalign property is the same way, with 0.0 being the top of the screen and 1.0 being the bottom. Since most sprites stick to the bottom, it's almost always 1.0.]"

#   e "While being able to write positions like this is useful, having to repeatedly do so isn't. So Ren'Py lets you define a transform once, and reuse it."
    e "[TRADUCIR: While being able to write positions like this is useful, having to repeatedly do so isn't. So Ren'Py lets you define a transform once, and reuse it.]"

#   e "Usually transforms are defined at the top of a file, right after the characters. But it doesn't matter to Ren'Py where you define them."
    e "[TRADUCIR: Usually transforms are defined at the top of a file, right after the characters. But it doesn't matter to Ren'Py where you define them.]"

#   e "The transform is given a name, slightleft, and then the xalign and yalign properties."
    e "[TRADUCIR: The transform is given a name, slightleft, and then the xalign and yalign properties.]"

#   e "Once a transform has been defined, you can use it in the at clause of the show statement."
    e "[TRADUCIR: Once a transform has been defined, you can use it in the at clause of the show statement.]"

#   e "Transforms are sticky. If you replace an image without using a transform, Ren'Py will keep the same transforms it had been using."
    e "[TRADUCIR: Transforms are sticky. If you replace an image without using a transform, Ren'Py will keep the same transforms it had been using.]"

#   e "Of course, there's a lot more to transforms than this. If you want to learn more, you can read the sections on Position Properties, Transforms and Animation, and Transform Properties."
    e "[TRADUCIR: Of course, there's a lot more to transforms than this. If you want to learn more, you can read the sections on Position Properties, Transforms and Animation, and Transform Properties.]"

#   e "But for many visual novels, xalign and yalign are the only properties that matter."
    e "[TRADUCIR: But for many visual novels, xalign and yalign are the only properties that matter.]"

#   e "It can be somewhat jarring for the game to jump from place to place."
    e "[TRADUCIR: It can be somewhat jarring for the game to jump from place to place.]"

#   e "To help take some of edge off a change in scene, Ren'Py supports the use of transitions. Let's try that scene change again, but this time we'll use transitions."
    e "[TRADUCIR: To help take some of edge off a change in scene, Ren'Py supports the use of transitions. Let's try that scene change again, but this time we'll use transitions.]"

#   e "That's much smoother. Here's some example code showing how we include transitions in our game."
    e "[TRADUCIR: That's much smoother. Here's some example code showing how we include transitions in our game.]"

#   e "It uses the with statement. The with statement causes the scene to transition from the last things shown to the things currently being shown."
    e "[TRADUCIR: It uses the with statement. The with statement causes the scene to transition from the last things shown to the things currently being shown.]"

#   e "It takes a transition as an argument. In this case, we're using the Dissolve transition. This transition takes as an argument the amount of time the dissolve should take."
    e "[TRADUCIR: It takes a transition as an argument. In this case, we're using the Dissolve transition. This transition takes as an argument the amount of time the dissolve should take.]"

#   e "In this case, each transition takes half a second."
    e "[TRADUCIR: In this case, each transition takes half a second.]"

#   e "We can define a short name for a transition, using the define statement. Here, we're defining slowdissolve to be a dissolve that takes a whole second."
    e "[TRADUCIR: We can define a short name for a transition, using the define statement. Here, we're defining slowdissolve to be a dissolve that takes a whole second.]"

#   e "Once a transition has been given a short name, we can use it in our game."
    e "[TRADUCIR: Once a transition has been given a short name, we can use it in our game.]"

#   e "Ren'Py defines some transitions for you, like dissolve, fade, and move. For more complex or customized transitions, you'll have to define your own."
    e "[TRADUCIR: Ren'Py defines some transitions for you, like dissolve, fade, and move. For more complex or customized transitions, you'll have to define your own.]"

#   e "If you're interested, check out the Transitions Gallery section of this tutorial."
    e "[TRADUCIR: If you're interested, check out the Transitions Gallery section of this tutorial.]"

#   e "Another important part of a visual novel or simulation game is the soundtrack."
    e "[TRADUCIR: Another important part of a visual novel or simulation game is the soundtrack.]"

#   e "Ren'Py breaks sound up into channels. The channel a sound is played on determines if the sound loops, and if it is saved and restored with the game."
    e "[TRADUCIR: Ren'Py breaks sound up into channels. The channel a sound is played on determines if the sound loops, and if it is saved and restored with the game.]"

#   e "When a sound is played on the music channel, it is looped, and it is saved when the game is saved."
    e "[TRADUCIR: When a sound is played on the music channel, it is looped, and it is saved when the game is saved.]"

#   e "When the channel named sound is used, the sound is played once and then stopped. It isn't saved."
    e "[TRADUCIR: When the channel named sound is used, the sound is played once and then stopped. It isn't saved.]"

#   e "The sounds themselves are stored in audio files. Ren'Py supports the Opus, Ogg Vorbis, and mp3 formats."
    e "[TRADUCIR: The sounds themselves are stored in audio files. Ren'Py supports the Opus, Ogg Vorbis, and mp3 formats.]"

#   e "Let's check out some of the commands that can affect the music channel."
    e "[TRADUCIR: Let's check out some of the commands that can affect the music channel.]"

#   play music "sunflower-slow-drag.ogg"
    play music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "The play music command replaces the currently playing music, and replaces it with the named filename."
    e "[TRADUCIR: The play music command replaces the currently playing music, and replaces it with the named filename.]"

#   e "If you specify the currently-playing song, it will restart it."
    e "[TRADUCIR: If you specify the currently-playing song, it will restart it.]"

#   e "If the optional fadeout clause is given, it will fade out the currently playing music before starting the new music."
    e "[TRADUCIR: If the optional fadeout clause is given, it will fade out the currently playing music before starting the new music.]"

#   queue music "sunflower-slow-drag.ogg"
    queue music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "The queue statement also adds music to the named channel, but it waits until the currently-playing song is finished before playing the new music."
    e "[TRADUCIR: The queue statement also adds music to the named channel, but it waits until the currently-playing song is finished before playing the new music.]"

#   e "The third statement is the stop statement. It stops the music playing on a channel. It too takes the fadeout clause."
    e "[TRADUCIR: The third statement is the stop statement. It stops the music playing on a channel. It too takes the fadeout clause.]"

#   play sound "tower_clock.ogg"
    play sound "[TRADUCIR: tower_clock.ogg]"

#   e "Unlike the music channel, playing a sound on the sound channel causes it to play only once."
    e "[TRADUCIR: Unlike the music channel, playing a sound on the sound channel causes it to play only once.]"

#   queue sound "tower_clock.ogg"
    queue sound "[TRADUCIR: tower_clock.ogg]"

#   queue sound "tower_clock.ogg"
    queue sound "[TRADUCIR: tower_clock.ogg]"

#   queue sound "tower_clock.ogg"
    queue sound "[TRADUCIR: tower_clock.ogg]"

#   e "You can queue up multiple sounds on the sound channel, but the sounds will only play one at a time."
    e "[TRADUCIR: You can queue up multiple sounds on the sound channel, but the sounds will only play one at a time.]"

#   play music "sunflower-slow-drag.ogg"
    play music "[TRADUCIR: sunflower-slow-drag.ogg]"

#   e "Ren'Py has separate mixers for sound, music, and voices, so the player can adjust them as they like."
    e "[TRADUCIR: Ren'Py has separate mixers for sound, music, and voices, so the player can adjust them as they like.]"

#   e "Many visual novels require the player to make choices from in-game menus. These choices can add some challenge to the game, or adjust it to the player's preferences."
    e "[TRADUCIR: Many visual novels require the player to make choices from in-game menus. These choices can add some challenge to the game, or adjust it to the player's preferences.]"

#   e "Do you like to play visual novels with choices in them?"
    e "[TRADUCIR: Do you like to play visual novels with choices in them?]"

#   "Yes, I do."
    "[TRADUCIR: Yes, I do.]"

#   "No, I don't."
    "[TRADUCIR: No, I don't.]"

#   e "While creating a multi-path visual novel can be a bit more work, it can yield a unique experience."
    e "[TRADUCIR: While creating a multi-path visual novel can be a bit more work, it can yield a unique experience.]"

#   e "Games without menus are called kinetic novels, and there are dozens of them available to play."
    e "[TRADUCIR: Games without menus are called kinetic novels, and there are dozens of them available to play.]"

#   e "Here, you can see the code for that menu. If you scroll down, you can see the code we run after the menu."
    e "[TRADUCIR: Here, you can see the code for that menu. If you scroll down, you can see the code we run after the menu.]"

#   e "Menus are introduced by the menu statement. The menu statement takes an indented block, in which there can be one line of dialogue and multiple choices."
    e "[TRADUCIR: Menus are introduced by the menu statement. The menu statement takes an indented block, in which there can be one line of dialogue and multiple choices.]"

#   e "Each choice must end with a colon, as each choice has its own block of Ren'Py code, that is run when that choice is selected."
    e "[TRADUCIR: Each choice must end with a colon, as each choice has its own block of Ren'Py code, that is run when that choice is selected.]"

#   e "Here, each block jumps to a label. While you could put small amounts of Ren'Py code inside a menu label, it's probably good practice to usually jump to a bigger block of code."
    e "[TRADUCIR: Here, each block jumps to a label. While you could put small amounts of Ren'Py code inside a menu label, it's probably good practice to usually jump to a bigger block of code.]"

#   e "Scrolling down past the menu, you can see the labels that the menu jumps to. There are three labels here, named choice1_yes, choice1_no, and choice1_done."
    e "[TRADUCIR: Scrolling down past the menu, you can see the labels that the menu jumps to. There are three labels here, named choice1_yes, choice1_no, and choice1_done.]"

#   e "When the first menu choice is picked, we jump to the choice1_yes, which runs two lines of script before jumping to choice1_done."
    e "[TRADUCIR: When the first menu choice is picked, we jump to the choice1_yes, which runs two lines of script before jumping to choice1_done.]"

#   e "Similarly, picking the second choice jumps us to choice1_no, which also runs two lines of script."
    e "[TRADUCIR: Similarly, picking the second choice jumps us to choice1_no, which also runs two lines of script.]"

#   e "The lines beginning with the dollar sign are lines of python code, which are used to set a flag based on the user's choice."
    e "[TRADUCIR: The lines beginning with the dollar sign are lines of python code, which are used to set a flag based on the user's choice.]"

#   e "The flag is named menu_flag, and it's set to True or False based on the user's choice. The if statement can be used to test a flag, so the game can remember the user's choices."
    e "[TRADUCIR: The flag is named menu_flag, and it's set to True or False based on the user's choice. The if statement can be used to test a flag, so the game can remember the user's choices.]"

#   e "For example, I remember that you plan to use menus in your game."
    e "[TRADUCIR: For example, I remember that you plan to use menus in your game.]"

#   e "For example, I remember that you're planning to make a kinetic novel, without menus."
    e "[TRADUCIR: For example, I remember that you're planning to make a kinetic novel, without menus.]"

#   e "Here's an example that shows how we can test a flag, and do different things if it is true or not."
    e "[TRADUCIR: Here's an example that shows how we can test a flag, and do different things if it is true or not.]"

#   e "Finally, this shows how you can show dialogue and menus at the same time. Understand?"
    e "[TRADUCIR: Finally, this shows how you can show dialogue and menus at the same time. Understand?]"

#   "Yes."
    "[TRADUCIR: Yes.]"

#   e "Great."
    e "[TRADUCIR: Great.]"

#   "No."
    "[TRADUCIR: No.]"

#   e "If you look at the example, before the first choice, there's an indented say statement."
    e "[TRADUCIR: If you look at the example, before the first choice, there's an indented say statement.]"

#   e "Although we won't demonstrate it here, Ren'Py supports making decisions based on a combinations of points, flags, and other factors."
    e "[TRADUCIR: Although we won't demonstrate it here, Ren'Py supports making decisions based on a combinations of points, flags, and other factors.]"

#   e "One of Ren'Py's big advantages is the flexibility using a scripting language like Python provides us. It lets us easily scale from kinetic novels to complex simulation games."
    e "[TRADUCIR: One of Ren'Py's big advantages is the flexibility using a scripting language like Python provides us. It lets us easily scale from kinetic novels to complex simulation games.]"

#   define g = Character( "[name]"
    define g = Character( "[TRADUCIR: [name]]"

#   e "Some games might prompt the player for input."
    e "[TRADUCIR: Some games might prompt the player for input.]"

#   name = renpy.input(_( "What's your name?"
    name = renpy.input(_( "[TRADUCIR: What's your name?]"

#   name = name.strip() or __( "Guy Shy"
    name = name.strip() or __( "[TRADUCIR: Guy Shy]"

#   if name.lower() == "shiro"
    if name.lower() == "[TRADUCIR: shiro]"

#   renpy.run(OpenURL( "https://shiro-heartcat.tumblr.com/"
    renpy.run(OpenURL( "[TRADUCIR: https://shiro-heartcat.tumblr.com/]"

#   e "That's done with Python, and especially the renpy.input function. The first line of this example prompts the player for some texts, and sticks it in the name variable."
    e "[TRADUCIR: That's done with Python, and especially the renpy.input function. The first line of this example prompts the player for some texts, and sticks it in the name variable.]"

#   e "Often times, you'll want to clean the name up before you use it. The last line does that, by calling the strip method to remove whitespace, and replacing the name with a default if it's missing."
    e "[TRADUCIR: Often times, you'll want to clean the name up before you use it. The last line does that, by calling the strip method to remove whitespace, and replacing the name with a default if it's missing.]"

#   e "To interpolate a variable, write it in square brackets. Isn't that right, [name]?"
    e "[TRADUCIR: To interpolate a variable, write it in square brackets. Isn't that right, [name]?]"

#   e "Variable names can also be shown in character names. To do that, just include the variable in square brackets in the character's name. Got it?"
    e "[TRADUCIR: Variable names can also be shown in character names. To do that, just include the variable in square brackets in the character's name. Got it?]"

#   g "I think I do."
    g "[TRADUCIR: I think I do.]"

#   e "Variable interpolation also works with other variables. Here, the answer is [answer] and the flag is [flag]."
    e "[TRADUCIR: Variable interpolation also works with other variables. Here, the answer is [answer] and the flag is [flag].]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\tutorial_screens.rpy DIALOGOS: 132

#   text "[name!t]"
    text "[TRADUCIR: [name!t]]"

#   text _( "Lv. [lv]"
    text _( "[TRADUCIR: Lv. [lv]]"

#   text _( "HP"
    text _( "[TRADUCIR: HP]"

#   text "[hp]/[hp_max]"
    text "[TRADUCIR: [hp]/[hp_max]]"

#   use single_stat(_( "Player"
    use single_stat(_( "[TRADUCIR: Player]"

#   use single_stat(_( "Eileen"
    use single_stat(_( "[TRADUCIR: Eileen]"

#   style_prefix "stat"
    style_prefix "[TRADUCIR: stat]"

#   text _( "Strength"
    text _( "[TRADUCIR: Strength]"

#   text _( "Intelligence"
    text _( "[TRADUCIR: Intelligence]"

#   text _( "Moxie"
    text _( "[TRADUCIR: Moxie]"

#   text _( "Chutzpah"
    text _( "[TRADUCIR: Chutzpah]"

#   textbutton _( "Done"
    textbutton _( "[TRADUCIR: Done]"

#   e "Screens are the most powerful part of Ren'Py. Screens let you customize the out-of-game interface, and create new in-game interface components."
    e "[TRADUCIR: Screens are the most powerful part of Ren'Py. Screens let you customize the out-of-game interface, and create new in-game interface components.]"

#   e "What would you like to know about screens?"
    e "[TRADUCIR: What would you like to know about screens?]"

#   "What screens can do."
    "[TRADUCIR: What screens can do.]"

#   "How to show screens."
    "[TRADUCIR: How to show screens.]"

#   "Passing parameters to screens."
    "[TRADUCIR: Passing parameters to screens.]"

#   "Screen properties."
    "[TRADUCIR: Screen properties.]"

#   "Special screen statements."
    "[TRADUCIR: Special screen statements.]"

#   "Using other screens."
    "[TRADUCIR: Using other screens.]"

#   "That's it."
    "[TRADUCIR: That's it.]"

#   e "Screens are how we create the user interface in Ren'Py. With the exception of images and transitions, everything you see comes from a screen."
    e "[TRADUCIR: Screens are how we create the user interface in Ren'Py. With the exception of images and transitions, everything you see comes from a screen.]"

#   e "When I'm speaking to you, I'm using the 'say' screen. It's responsible for taking dialogue and presenting it to the player."
    e "[TRADUCIR: When I'm speaking to you, I'm using the 'say' screen. It's responsible for taking dialogue and presenting it to the player.]"

#   e "And when the menu statement displays an in-game choice, the 'choice' screen is used. Got it?"
    e "[TRADUCIR: And when the menu statement displays an in-game choice, the 'choice' screen is used. Got it?]"

#   "Yes."
    "[TRADUCIR: Yes.]"

#   "I do."
    "[TRADUCIR: I do.]"

#   e "Text input uses the 'input' screen, NVL mode uses the 'nvl' screen, and so on."
    e "[TRADUCIR: Text input uses the 'input' screen, NVL mode uses the 'nvl' screen, and so on.]"

#   e "More than one screen can be displayed at once. For example, the buttons at the bottom - Back, History, Skip, and so on - are all displayed by a quick_menu screen that's shown all of the time."
    e "[TRADUCIR: More than one screen can be displayed at once. For example, the buttons at the bottom - Back, History, Skip, and so on - are all displayed by a quick_menu screen that's shown all of the time.]"

#   e "There are a lot of special screens, like 'main_menu', 'load', 'save', and 'preferences'. Rather than list them all here, I'll {a=https://www.renpy.org/doc/html/screen_special.html}send you to the documentation{/a}."
    e "[TRADUCIR: There are a lot of special screens, like 'main_menu', 'load', 'save', and 'preferences'. Rather than list them all here, I'll {a=https://www.renpy.org/doc/html/screen_special.html}send you to the documentation{/a}.]"

#   e "In a newly created project, all these screens live in screens.rpy. You can edit that file in order to change them."
    e "[TRADUCIR: In a newly created project, all these screens live in screens.rpy. You can edit that file in order to change them.]"

#   e "You aren't limited to these screens either. In Ren'Py, you can make your own screens, and use them for your game's interface."
    e "[TRADUCIR: You aren't limited to these screens either. In Ren'Py, you can make your own screens, and use them for your game's interface.]"

#   e "For example, in an RPG like visual novel, a screen can display the player's statistics."
    e "[TRADUCIR: For example, in an RPG like visual novel, a screen can display the player's statistics.]"

#   e "Which reminds me, I should probably heal you."
    e "[TRADUCIR: Which reminds me, I should probably heal you.]"

#   e "Complex screens can be the basis of whole game mechanics. A stats screen like this can be the basis of dating and life-sims."
    e "[TRADUCIR: Complex screens can be the basis of whole game mechanics. A stats screen like this can be the basis of dating and life-sims.]"

#   e "While screens might be complex, they're really just the result of a lot of simple parts working together to make something larger than all of them."
    e "[TRADUCIR: While screens might be complex, they're really just the result of a lot of simple parts working together to make something larger than all of them.]"

#   text _( "This is a screen."
    text _( "[TRADUCIR: This is a screen.]"

#   textbutton _( "Okay"
    textbutton _( "[TRADUCIR: Okay]"

#   e "Here's an example of a very simple screen. The screen statement is used to tell Ren'Py this is a screen, and its name is simple_screen."
    e "[TRADUCIR: Here's an example of a very simple screen. The screen statement is used to tell Ren'Py this is a screen, and its name is simple_screen.]"

#   e "Inside the screen statement, lines introduces displayables such as frame, vbox, text, and textbutton; or properties like action, xalign, and ypos."
    e "[TRADUCIR: Inside the screen statement, lines introduces displayables such as frame, vbox, text, and textbutton; or properties like action, xalign, and ypos.]"

#   e "I'll work from the inside out to describe the statements. But first, I'll show the screen so you can see it in action."
    e "[TRADUCIR: I'll work from the inside out to describe the statements. But first, I'll show the screen so you can see it in action.]"

#   e "The text statement is used to display the text provided."
    e "[TRADUCIR: The text statement is used to display the text provided.]"

#   e "The textbutton statement introduces a button that can be clicked. When the button is clicked, the provided action is run."
    e "[TRADUCIR: The textbutton statement introduces a button that can be clicked. When the button is clicked, the provided action is run.]"

#   e "Both are inside a vbox, which means vertical box, statement - that places the text on top of the button."
    e "[TRADUCIR: Both are inside a vbox, which means vertical box, statement - that places the text on top of the button.]"

#   e "And that is inside a frame that provides the background and borders. The frame has an at property that takes a transform giving its position."
    e "[TRADUCIR: And that is inside a frame that provides the background and borders. The frame has an at property that takes a transform giving its position.]"

#   e "There are a trio of statements that are used to display screens."
    e "[TRADUCIR: There are a trio of statements that are used to display screens.]"

#   e "The first is the show screen statement, which displays a screen and lets Ren'Py keep going."
    e "[TRADUCIR: The first is the show screen statement, which displays a screen and lets Ren'Py keep going.]"

#   e "The screen will stay shown until it is hidden."
    e "[TRADUCIR: The screen will stay shown until it is hidden.]"

#   e "Hiding a screen is done with the hide screen statement."
    e "[TRADUCIR: Hiding a screen is done with the hide screen statement.]"

#   e "The call screen statement stops Ren'Py from executing script until the screen either returns a value, or jumps the script somewhere else."
    e "[TRADUCIR: The call screen statement stops Ren'Py from executing script until the screen either returns a value, or jumps the script somewhere else.]"

#   e "Since we can't display dialogue at the same time, you'll have to click 'Okay' to continue."
    e "[TRADUCIR: Since we can't display dialogue at the same time, you'll have to click 'Okay' to continue.]"

#   e "When a call screen statement ends, the screen is automatically hidden."
    e "[TRADUCIR: When a call screen statement ends, the screen is automatically hidden.]"

#   e "Generally, you use show screen to show overlays that are up all the time, and call screen to show screens the player interacts with for a little while."
    e "[TRADUCIR: Generally, you use show screen to show overlays that are up all the time, and call screen to show screens the player interacts with for a little while.]"

#   text "[message!t]"
    text "[TRADUCIR: [message!t]]"

#   textbutton _( "Okay"
    textbutton _( "[TRADUCIR: Okay]"

#   textbutton _( "Cancel"
    textbutton _( "[TRADUCIR: Cancel]"

#   show screen parameter_screen(_( "Hello, world."
    show screen parameter_screen(_( "[TRADUCIR: Hello, world.]"

#   e "Here's an example of a screen that takes three parameters. The message parameter is a message to show, while the okay and cancel actions are run when the appropriate button is chosen."
    e "[TRADUCIR: Here's an example of a screen that takes three parameters. The message parameter is a message to show, while the okay and cancel actions are run when the appropriate button is chosen.]"

#   e "While the message parameter always has to be supplied, the okay and cancel parameters have default values that are used if no argument is given."
    e "[TRADUCIR: While the message parameter always has to be supplied, the okay and cancel parameters have default values that are used if no argument is given.]"

#   e "Each parameter is a variable that is defined inside the screen. Inside the screen, these variables take priority over those used in the rest of Ren'Py."
    e "[TRADUCIR: Each parameter is a variable that is defined inside the screen. Inside the screen, these variables take priority over those used in the rest of Ren'Py.]"

#   e "When a screen is shown, arguments can be supplied for each of the parameters. Arguments can be given by position or by name."
    e "[TRADUCIR: When a screen is shown, arguments can be supplied for each of the parameters. Arguments can be given by position or by name.]"

#   show screen parameter_screen(_( "Shiro was here."
    show screen parameter_screen(_( "[TRADUCIR: Shiro was here.]"

#   e "Parameters let us change what a screen displays, simply by re-showing it with different arguments."
    e "[TRADUCIR: Parameters let us change what a screen displays, simply by re-showing it with different arguments.]"

#   e "The call screen statement can also take arguments, much like show screen does."
    e "[TRADUCIR: The call screen statement can also take arguments, much like show screen does.]"

#   call screen parameter_screen(_( "Click either button to continue."
    call screen parameter_screen(_( "[TRADUCIR: Click either button to continue.]"

#   e "There are a few properties that can be applied to a screen itself."
    e "[TRADUCIR: There are a few properties that can be applied to a screen itself.]"

#   textbutton _( "Close This Screen"
    textbutton _( "[TRADUCIR: Close This Screen]"

#   action Hide( "modal_example"
    action Hide( "[TRADUCIR: modal_example]"

#   e "When the modal property is true, you can't interact with things beneath the screen. You'll have to click 'Close This Screen' before you can continue."
    e "[TRADUCIR: When the modal property is true, you can't interact with things beneath the screen. You'll have to click 'Close This Screen' before you can continue.]"

#   text _( "A Tag Screen"
    text _( "[TRADUCIR: A Tag Screen]"

#   text _( "B Tag Screen"
    text _( "[TRADUCIR: B Tag Screen]"

#   e "When a screen has the tag property, it's treated like the tag part of an image name. Here, I'm showing a_tag_screen."
    e "[TRADUCIR: When a screen has the tag property, it's treated like the tag part of an image name. Here, I'm showing a_tag_screen.]"

#   e "When I show b_tag_screen, it replaces a_tag_screen."
    e "[TRADUCIR: When I show b_tag_screen, it replaces a_tag_screen.]"

#   e "This is useful in the game and main menus, where you want the load screen to replace the preferences screen. By default, all those screens have tag menu."
    e "[TRADUCIR: This is useful in the game and main menus, where you want the load screen to replace the preferences screen. By default, all those screens have tag menu.]"

#   e "For some reason, tag takes a name, and not an expression. It's too late to change it."
    e "[TRADUCIR: For some reason, tag takes a name, and not an expression. It's too late to change it.]"

#   text "Zorder 100"
    text "[TRADUCIR: Zorder 100]"

#   text "Zorder 0"
    text "[TRADUCIR: Zorder 0]"

#   e "The zorder property controls the order in which screens overlap each other. The larger the zorder number, the closer the screen is to the player."
    e "[TRADUCIR: The zorder property controls the order in which screens overlap each other. The larger the zorder number, the closer the screen is to the player.]"

#   e "By default, a screen has a zorder of 0. When two screens have the same zorder number, the screen that is shown second is closer to the player."
    e "[TRADUCIR: By default, a screen has a zorder of 0. When two screens have the same zorder number, the screen that is shown second is closer to the player.]"

#   variant "small"
    variant "[TRADUCIR: small]"

#   text _( "You're on a small device."
    text _( "[TRADUCIR: You're on a small device.]"

#   text _( "You're not on a small device."
    text _( "[TRADUCIR: You're not on a small device.]"

#   e "The variant property selects a screen based on the properties of the device it's running on."
    e "[TRADUCIR: The variant property selects a screen based on the properties of the device it's running on.]"

#   e "In this example, the first screen will be used for small devices like telephones, and the other screen will be used for tablets and computers."
    e "[TRADUCIR: In this example, the first screen will be used for small devices like telephones, and the other screen will be used for tablets and computers.]"

#   style_prefix "red"
    style_prefix "[TRADUCIR: red]"

#   text _( "This text is red."
    text _( "[TRADUCIR: This text is red.]"

#   background "#440000d9"
    background "[TRADUCIR: #440000d9]"

#   color "#ffc0c0"
    color "[TRADUCIR: #ffc0c0]"

#   e "Finally, the style_prefix property specifies a prefix that's applied to the styles in the screen."
    e "[TRADUCIR: Finally, the style_prefix property specifies a prefix that's applied to the styles in the screen.]"

#   e "When the 'red' prefix is given, the frame gets the 'red_frame' style, and the text gets the 'red_text' style."
    e "[TRADUCIR: When the 'red' prefix is given, the frame gets the 'red_frame' style, and the text gets the 'red_text' style.]"

#   e "This can save a lot of typing when styling screens with many displayables in them."
    e "[TRADUCIR: This can save a lot of typing when styling screens with many displayables in them.]"

#   e "The screen language has a few statements that do things other than show displayables. If you haven't seen the section on {a=jump:warp_screen_displayables}Screen Displayables{/a} yet, you might want to check it out, then come back here."
    e "[TRADUCIR: The screen language has a few statements that do things other than show displayables. If you haven't seen the section on {a=jump:warp_screen_displayables}Screen Displayables{/a} yet, you might want to check it out, then come back here.]"

#   $ message = _( "Hello, World."
    $ message = _( "[TRADUCIR: Hello, World.]"

#   text "[message!t]"
    text "[TRADUCIR: [message!t]]"

#   e "The python statement works just about the same way it does in the script. A single line of Python is introduced with a dollar sign. This line is run each time the screen updates."
    e "[TRADUCIR: The python statement works just about the same way it does in the script. A single line of Python is introduced with a dollar sign. This line is run each time the screen updates.]"

#   message1 = _( "Hello, World."
    message1 = _( "[TRADUCIR: Hello, World.]"

#   message2 = _( "It's good to meet you."
    message2 = _( "[TRADUCIR: It's good to meet you.]"

#   text "[message1!t]"
    text "[TRADUCIR: [message1!t]]"

#   text "[message2!t]"
    text "[TRADUCIR: [message2!t]]"

#   e "Similarly, the python statement introduces an indented block of python statements. But there is one big difference in Python in screens and Python in scripts."
    e "[TRADUCIR: Similarly, the python statement introduces an indented block of python statements. But there is one big difference in Python in screens and Python in scripts.]"

#   e "The Python you use in screens isn't allowed to have side effects. That means that it can't do things like change the value of a variable."
    e "[TRADUCIR: The Python you use in screens isn't allowed to have side effects. That means that it can't do things like change the value of a variable.]"

#   e "The reason for this is that Ren'Py will run a screen, and the Python in it, during screen prediction."
    e "[TRADUCIR: The reason for this is that Ren'Py will run a screen, and the Python in it, during screen prediction.]"

#   text "n = [n]"
    text "[TRADUCIR: n = [n]]"

#   textbutton _( "Increase"
    textbutton _( "[TRADUCIR: Increase]"

#   e "The default statement lets you set the value of a screen variable the first time the screen runs. This value can be changed with the SetScreenVariable and ToggleScreenVariable actions."
    e "[TRADUCIR: The default statement lets you set the value of a screen variable the first time the screen runs. This value can be changed with the SetScreenVariable and ToggleScreenVariable actions.]"

#   e "The default statement differs from the Python statement in that it is only run once. Python runs each time the screen updates, and hence the variable would never change value."
    e "[TRADUCIR: The default statement differs from the Python statement in that it is only run once. Python runs each time the screen updates, and hence the variable would never change value.]"

#   text "n = [n]"
    text "[TRADUCIR: n = [n]]"

#   text "n = [n]"
    text "[TRADUCIR: n = [n]]"

#   textbutton _( "Increase"
    textbutton _( "[TRADUCIR: Increase]"

#   e "The if statement works like it does in script, running one block if the condition is true and another if the condition is false."
    e "[TRADUCIR: The if statement works like it does in script, running one block if the condition is true and another if the condition is false.]"

#   $ landings = [ _( "Earth"
    $ landings = [ _( "[TRADUCIR: Earth]"

#   textbutton "[i!t]"
    textbutton "[TRADUCIR: [i!t]]"

#   e "The for statement takes a list of values, and iterates through them, running the block inside the for loop with the variable bound to each list item."
    e "[TRADUCIR: The for statement takes a list of values, and iterates through them, running the block inside the for loop with the variable bound to each list item.]"

#   text _( "Now press 'a'."
    text _( "[TRADUCIR: Now press 'a'.]"

#   on "show"
    on "[TRADUCIR: show]"

#   key "a"
    key "[TRADUCIR: a]"

#   e "The on and key statements probably only make sense at the top level of the screen."
    e "[TRADUCIR: The on and key statements probably only make sense at the top level of the screen.]"

#   e "The on statement makes the screen run an action when an event occurs. The 'show' event happens when the screen is first shown, and the 'hide' event happens when it is hidden."
    e "[TRADUCIR: The on statement makes the screen run an action when an event occurs. The 'show' event happens when the screen is first shown, and the 'hide' event happens when it is hidden.]"

#   e "The key event runs an event when a key is pressed."
    e "[TRADUCIR: The key event runs an event when a key is pressed.]"

#   e "The screen language use statement lets you include a screen inside another. This can be useful to prevent duplication inside screens."
    e "[TRADUCIR: The screen language use statement lets you include a screen inside another. This can be useful to prevent duplication inside screens.]"

#   text _( "Health"
    text _( "[TRADUCIR: Health]"

#   text _( "Magic"
    text _( "[TRADUCIR: Magic]"

#   e "Take for example this screen, which shows two stat entries. There's already a lot of duplication there, and if we had more stats, there would be more."
    e "[TRADUCIR: Take for example this screen, which shows two stat entries. There's already a lot of duplication there, and if we had more stats, there would be more.]"

#   use stat(_( "Health"
    use stat(_( "[TRADUCIR: Health]"

#   use stat(_( "Magic"
    use stat(_( "[TRADUCIR: Magic]"

#   e "Here, we moved the statements that show the text and bar into a second screen, and the use statement includes that screen in the first one."
    e "[TRADUCIR: Here, we moved the statements that show the text and bar into a second screen, and the use statement includes that screen in the first one.]"

#   e "The name and amount of the stat are passed in as arguments to the screen, just as is done in the call screen statement."
    e "[TRADUCIR: The name and amount of the stat are passed in as arguments to the screen, just as is done in the call screen statement.]"

#   e "By doing it this way, we control the amount of duplication, and can change the stat in one place."
    e "[TRADUCIR: By doing it this way, we control the amount of duplication, and can change the stat in one place.]"

#   text _( "There's not much left to see."
    text _( "[TRADUCIR: There's not much left to see.]"

#   e "The transclude statement goes one step further, by letting the use statement take a block of screen language statements."
    e "[TRADUCIR: The transclude statement goes one step further, by letting the use statement take a block of screen language statements.]"

#   e "When the included screen reaches the transclude statement it is replaced with the block from the use statement."
    e "[TRADUCIR: When the included screen reaches the transclude statement it is replaced with the block from the use statement.]"

#   e "The boilerplate screen is included in the first one, and the text from the first screen is transcluded into the boilerplate screen."
    e "[TRADUCIR: The boilerplate screen is included in the first one, and the text from the first screen is transcluded into the boilerplate screen.]"

#   e "Use and transclude are complex, but very powerful. If you think about it, 'use boilerplate' is only one step removed from writing your own Screen Language statement."
    e "[TRADUCIR: Use and transclude are complex, but very powerful. If you think about it, 'use boilerplate' is only one step removed from writing your own Screen Language statement.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\tutorial_screen_displayables.rpy DIALOGOS: 244

#   e "There are quite a few screen displayables. Here, I'll tell you about some of the most important ones."
    e "[TRADUCIR: There are quite a few screen displayables. Here, I'll tell you about some of the most important ones.]"

#   e "What would you like to know about?"
    e "[TRADUCIR: What would you like to know about?]"

#   "Common properties all displayables share."
    "[TRADUCIR: Common properties all displayables share.]"

#   "Adding images and other displayables."
    "[TRADUCIR: Adding images and other displayables.]"

#   "Text."
    "[TRADUCIR: Text.]"

#   "Boxes and other layouts."
    "[TRADUCIR: Boxes and other layouts.]"

#   "Windows and frames."
    "[TRADUCIR: Windows and frames.]"

#   "Buttons."
    "[TRADUCIR: Buttons.]"

#   "Bars."
    "[TRADUCIR: Bars.]"

#   "Viewports."
    "[TRADUCIR: Viewports.]"

#   "Imagemaps."
    "[TRADUCIR: Imagemaps.]"

#   "That's all for now."
    "[TRADUCIR: That's all for now.]"

#   e "There are a few properties that every screen language displayable shares. Here, I'll demonstrate them for you."
    e "[TRADUCIR: There are a few properties that every screen language displayable shares. Here, I'll demonstrate them for you.]"

#   text _( "This uses position properties."
    text _( "[TRADUCIR: This uses position properties.]"

#   e "First off, every screen language displayable supports the position properties. When the container a displayable is in supports it, you can use properties like align, anchor, pos, and so so on."
    e "[TRADUCIR: First off, every screen language displayable supports the position properties. When the container a displayable is in supports it, you can use properties like align, anchor, pos, and so so on.]"

#   text _( "And the world turned upside down..."
    text _( "[TRADUCIR: And the world turned upside down...]"

#   e "The at property applies a transform to the displayable, the same way the at clause in the show statement does."
    e "[TRADUCIR: The at property applies a transform to the displayable, the same way the at clause in the show statement does.]"

#   #                 text _( "This is an event."
    #                 text _( "[TRADUCIR: This is an event.]"

#   #                     textbutton "Choice 1"
    #                     textbutton "[TRADUCIR: Choice 1]"

#   #                     textbutton "Choice 2"
    #                     textbutton "[TRADUCIR: Choice 2]"

#   #                     textbutton "Choice 3"
    #                     textbutton "[TRADUCIR: Choice 3]"

#   e "The id property is mostly used with the say screen, which is used to show dialogue. Outside of the say screen, it isn't used much."
    e "[TRADUCIR: The id property is mostly used with the say screen, which is used to show dialogue. Outside of the say screen, it isn't used much.]"

#   e "It tells Ren'Py which displayables are the background window, 'who' is speaking, and 'what' is being said. This used to apply per-Character styles, and help with auto-forward mode."
    e "[TRADUCIR: It tells Ren'Py which displayables are the background window, 'who' is speaking, and 'what' is being said. This used to apply per-Character styles, and help with auto-forward mode.]"

#   text _( "Flight pressure in tanks."
    text _( "[TRADUCIR: Flight pressure in tanks.]"

#   text _( "On internal power."
    text _( "[TRADUCIR: On internal power.]"

#   text _( "Launch enabled."
    text _( "[TRADUCIR: Launch enabled.]"

#   text _( "Liftoff!"
    text _( "[TRADUCIR: Liftoff!]"

#   color "#c8ffc8"
    color "[TRADUCIR: #c8ffc8]"

#   e "The style property lets you specify the style of a single displayable."
    e "[TRADUCIR: The style property lets you specify the style of a single displayable.]"

#   style_prefix "green"
    style_prefix "[TRADUCIR: green]"

#   text _( "Flight pressure in tanks."
    text _( "[TRADUCIR: Flight pressure in tanks.]"

#   text _( "On internal power."
    text _( "[TRADUCIR: On internal power.]"

#   style_prefix "yellow"
    style_prefix "[TRADUCIR: yellow]"

#   text _( "Launch enabled."
    text _( "[TRADUCIR: Launch enabled.]"

#   text _( "Liftoff!"
    text _( "[TRADUCIR: Liftoff!]"

#   color "#ffffc8"
    color "[TRADUCIR: #ffffc8]"

#   e "The style_prefix property sets the prefix of the style that's used for a displayable and its children."
    e "[TRADUCIR: The style_prefix property sets the prefix of the style that's used for a displayable and its children.]"

#   e "For example, when the style_prefix property is 'green', the vbox has the 'green_vbox' style, and the text in it has the 'green_text' style."
    e "[TRADUCIR: For example, when the style_prefix property is 'green', the vbox has the 'green_vbox' style, and the text in it has the 'green_text' style.]"

#   e "There are a few more properties than these, and you can find the rest in the documentation. But these are the ones you can expect to see in your game, in the default screens."
    e "[TRADUCIR: There are a few more properties than these, and you can find the rest in the documentation. But these are the ones you can expect to see in your game, in the default screens.]"

#   e "Sometimes you'll have a displayable, like an image, that you want to add to a screen."
    e "[TRADUCIR: Sometimes you'll have a displayable, like an image, that you want to add to a screen.]"

#   add "logo base"
    add "[TRADUCIR: logo base]"

#   e "This can be done using the add statement, which adds an image or other displayable to the screen."
    e "[TRADUCIR: This can be done using the add statement, which adds an image or other displayable to the screen.]"

#   e "There are a few ways to refer to the image. If it's in the images directory or defined with the image statement, you can just put the name inside a quoted string."
    e "[TRADUCIR: There are a few ways to refer to the image. If it's in the images directory or defined with the image statement, you can just put the name inside a quoted string.]"

#   add "images/logo base.png"
    add "[TRADUCIR: images/logo base.png]"

#   e "An image can also be referred to by its filename, relative to the game directory."
    e "[TRADUCIR: An image can also be referred to by its filename, relative to the game directory.]"

#   add Solid( "#0000ff"
    add Solid( "[TRADUCIR: #0000ff]"

#   e "Other displayables can also be added using the add statement. Here, we add the Solid displayable, showing a solid block of color."
    e "[TRADUCIR: Other displayables can also be added using the add statement. Here, we add the Solid displayable, showing a solid block of color.]"

#   add "logo base"
    add "[TRADUCIR: logo base]"

#   e "In addition to the displayable, the add statement can be given transform properties. These can place or otherwise transform the displayable being added."
    e "[TRADUCIR: In addition to the displayable, the add statement can be given transform properties. These can place or otherwise transform the displayable being added.]"

#   add "logo base"
    add "[TRADUCIR: logo base]"

#   e "Of course, the add statement can also take the at property, letting you give it a more complex transform."
    e "[TRADUCIR: Of course, the add statement can also take the at property, letting you give it a more complex transform.]"

#   text _( "This is a text displayable."
    text _( "[TRADUCIR: This is a text displayable.]"

#   e "The screen language text statement adds a text displayable to the screen. It takes one argument, the text to be displayed."
    e "[TRADUCIR: The screen language text statement adds a text displayable to the screen. It takes one argument, the text to be displayed.]"

#   e "In addition to the common properties that all displayables take, text takes the text style properties. For example, size sets the size of the text."
    e "[TRADUCIR: In addition to the common properties that all displayables take, text takes the text style properties. For example, size sets the size of the text.]"

#   text _( "The answer is [answer]."
    text _( "[TRADUCIR: The answer is [answer].]"

#   e "The text displayable can also interpolate values enclosed in square brackets."
    e "[TRADUCIR: The text displayable can also interpolate values enclosed in square brackets.]"

#   e "When text is displayed in a screen using the text statement, variables defined in the screen take precedence over those defined outside it."
    e "[TRADUCIR: When text is displayed in a screen using the text statement, variables defined in the screen take precedence over those defined outside it.]"

#   e "Those variables may be parameters given to the screen, defined with the default or python statements, or set using the SetScreenVariable action."
    e "[TRADUCIR: Those variables may be parameters given to the screen, defined with the default or python statements, or set using the SetScreenVariable action.]"

#   text _( "Text tags {color=#c8ffc8}work{/color} in screens."
    text _( "[TRADUCIR: Text tags {color=#c8ffc8}work{/color} in screens.]"

#   e "There's not much more to say about text in screens, as it works the same way as all other text in Ren'Py."
    e "[TRADUCIR: There's not much more to say about text in screens, as it works the same way as all other text in Ren'Py.]"

#   e "The layout displayables take other displayables and lay them out on the screen."
    e "[TRADUCIR: The layout displayables take other displayables and lay them out on the screen.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "For example, the hbox displayable takes its children and lays them out horizontally."
    e "[TRADUCIR: For example, the hbox displayable takes its children and lays them out horizontally.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "The vbox displayable is similar, except it takes its children and arranges them vertically."
    e "[TRADUCIR: The vbox displayable is similar, except it takes its children and arranges them vertically.]"

#   e "Both of the boxes take the box style properties, the most useful of which is spacing, the amount of space to leave between children."
    e "[TRADUCIR: Both of the boxes take the box style properties, the most useful of which is spacing, the amount of space to leave between children.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "The grid displayable displays its children in a grid of equally-sized cells. It takes two arguments, the number of columns and the number of rows."
    e "[TRADUCIR: The grid displayable displays its children in a grid of equally-sized cells. It takes two arguments, the number of columns and the number of rows.]"

#   e "The grid has to be full, or Ren'Py will produce an error. Notice how in this example, the empty cell is filled with a null."
    e "[TRADUCIR: The grid has to be full, or Ren'Py will produce an error. Notice how in this example, the empty cell is filled with a null.]"

#   e "Like the boxes, grid uses the spacing property to specify the space between cells."
    e "[TRADUCIR: Like the boxes, grid uses the spacing property to specify the space between cells.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "Grid also takes the transpose property, to make it fill top-to-bottom before it fills left-to-right."
    e "[TRADUCIR: Grid also takes the transpose property, to make it fill top-to-bottom before it fills left-to-right.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   text _( "Bigger"
    text _( "[TRADUCIR: Bigger]"

#   e "And just to demonstrate that all cells are equally-sized, here's what happens when once child is bigger than the others."
    e "[TRADUCIR: And just to demonstrate that all cells are equally-sized, here's what happens when once child is bigger than the others.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "The fixed displayable displays the children using Ren'Py's normal placement algorithm. This lets you place displayables anywhere in the screen."
    e "[TRADUCIR: The fixed displayable displays the children using Ren'Py's normal placement algorithm. This lets you place displayables anywhere in the screen.]"

#   e "By default, the layout expands to fill all the space available to it. To prevent that, we use the xsize and ysize properties to set its size in advance."
    e "[TRADUCIR: By default, the layout expands to fill all the space available to it. To prevent that, we use the xsize and ysize properties to set its size in advance.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "When a non-layout displayable is given two or more children, it's not necessary to create a fixed. A fixed is automatically added, and the children are added to it."
    e "[TRADUCIR: When a non-layout displayable is given two or more children, it's not necessary to create a fixed. A fixed is automatically added, and the children are added to it.]"

#   text "1"
    text "[TRADUCIR: 1]"

#   text "2"
    text "[TRADUCIR: 2]"

#   text "3"
    text "[TRADUCIR: 3]"

#   text "4"
    text "[TRADUCIR: 4]"

#   text "5"
    text "[TRADUCIR: 5]"

#   e "Finally, there's one convenience to save space. When many displayables are nested, adding a layout to each could cause crazy indent levels."
    e "[TRADUCIR: Finally, there's one convenience to save space. When many displayables are nested, adding a layout to each could cause crazy indent levels.]"

#   e "The has statement creates a layout, and then adds all further children of its parent to that layout. It's just a convenience to make screens more readable."
    e "[TRADUCIR: The has statement creates a layout, and then adds all further children of its parent to that layout. It's just a convenience to make screens more readable.]"

#   e "In the default GUI that Ren'Py creates for a game, most user interface elements expect some sort of background."
    e "[TRADUCIR: In the default GUI that Ren'Py creates for a game, most user interface elements expect some sort of background.]"

#   text _( "This is a screen."
    text _( "[TRADUCIR: This is a screen.]"

#   textbutton _( "Okay"
    textbutton _( "[TRADUCIR: Okay]"

#   e "Without the background, text can be hard to read. While a frame isn't strictly required, many screens have one or more of them."
    e "[TRADUCIR: Without the background, text can be hard to read. While a frame isn't strictly required, many screens have one or more of them.]"

#   text _( "This is a screen."
    text _( "[TRADUCIR: This is a screen.]"

#   textbutton _( "Okay"
    textbutton _( "[TRADUCIR: Okay]"

#   e "But when I add a background, it's much easier. That's why there are two displayables that are intended to give backgrounds to user interface elements."
    e "[TRADUCIR: But when I add a background, it's much easier. That's why there are two displayables that are intended to give backgrounds to user interface elements.]"

#   e "The two displayables are frame and window. Frame is the one we use above, and it's designed to provide a background for arbitrary parts of the user interface."
    e "[TRADUCIR: The two displayables are frame and window. Frame is the one we use above, and it's designed to provide a background for arbitrary parts of the user interface.]"

#   e "On the other hand, the window displayable is very specific. It's used to provide the text window. If you're reading what I'm saying, you're looking at the text window right now."
    e "[TRADUCIR: On the other hand, the window displayable is very specific. It's used to provide the text window. If you're reading what I'm saying, you're looking at the text window right now.]"

#   e "Both frames and windows can be given window style properties, allowing you to change things like the background, margins, and padding around the window."
    e "[TRADUCIR: Both frames and windows can be given window style properties, allowing you to change things like the background, margins, and padding around the window.]"

#   e "One of the most flexible displayables is the button displayable, and its textbutton and imagebutton variants."
    e "[TRADUCIR: One of the most flexible displayables is the button displayable, and its textbutton and imagebutton variants.]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   text _( "Click me."
    text _( "[TRADUCIR: Click me.]"

#   e "A button is a displayable that when selected runs an action. Buttons can be selected by clicking with the mouse, by touch, or with the keyboard and controller."
    e "[TRADUCIR: A button is a displayable that when selected runs an action. Buttons can be selected by clicking with the mouse, by touch, or with the keyboard and controller.]"

#   e "Actions can do many things, like setting variables, showing screens, jumping to a label, or returning a value. There are many {a=https://www.renpy.org/doc/html/screen_actions.html}actions in the Ren'Py documentation{/a}, and you can also write your own."
    e "[TRADUCIR: Actions can do many things, like setting variables, showing screens, jumping to a label, or returning a value. There are many {a=https://www.renpy.org/doc/html/screen_actions.html}actions in the Ren'Py documentation{/a}, and you can also write your own.]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   hovered Notify(_( "You hovered the button."
    hovered Notify(_( "[TRADUCIR: You hovered the button.]"

#   unhovered Notify(_( "You unhovered the button."
    unhovered Notify(_( "[TRADUCIR: You unhovered the button.]"

#   text _( "Click me."
    text _( "[TRADUCIR: Click me.]"

#   e "It's also possible to run actions when a button gains and loses focus."
    e "[TRADUCIR: It's also possible to run actions when a button gains and loses focus.]"

#   action SetScreenVariable( "health"
    action SetScreenVariable( "[TRADUCIR: health]"

#   text _( "Heal"
    text _( "[TRADUCIR: Heal]"

#   e "A button takes another displayable as a child. Since that child can be a layout, it can take as many children as you want."
    e "[TRADUCIR: A button takes another displayable as a child. Since that child can be a layout, it can take as many children as you want.]"

#   textbutton _( "This is a textbutton."
    textbutton _( "[TRADUCIR: This is a textbutton.]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   e "In many cases, buttons will be given text. To make that easier, there's the textbutton displayable that takes the text as an argument."
    e "[TRADUCIR: In many cases, buttons will be given text. To make that easier, there's the textbutton displayable that takes the text as an argument.]"

#   e "Since the textbutton displayable manages the style of the button text for you, it's the kind of button that's used most often in the default GUI."
    e "[TRADUCIR: Since the textbutton displayable manages the style of the button text for you, it's the kind of button that's used most often in the default GUI.]"

#   idle "logo bw"
    idle "[TRADUCIR: logo bw]"

#   hover "logo base"
    hover "[TRADUCIR: logo base]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   e "There's also the imagebutton, which takes displayables, one for each state the button can be in, and displays them as the button."
    e "[TRADUCIR: There's also the imagebutton, which takes displayables, one for each state the button can be in, and displays them as the button.]"

#   e "An imagebutton gives you the most control over what a button looks like, but is harder to translate and won't look as good if the game window is resized."
    e "[TRADUCIR: An imagebutton gives you the most control over what a button looks like, but is harder to translate and won't look as good if the game window is resized.]"

#   textbutton _( "Click me."
    textbutton _( "[TRADUCIR: Click me.]"

#   idle_background Frame( "button glossy idle"
    idle_background Frame( "[TRADUCIR: button glossy idle]"

#   hover_background Frame( "button glossy hover"
    hover_background Frame( "[TRADUCIR: button glossy hover]"

#   hover_sound "pong_beep.opus"
    hover_sound "[TRADUCIR: pong_beep.opus]"

#   text_idle_color "#c0c0c0"
    text_idle_color "[TRADUCIR: #c0c0c0]"

#   text_hover_color "#ffffff"
    text_hover_color "[TRADUCIR: #ffffff]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   e "Buttons take Window style properties, that are used to specify the background, margins, and padding. They also take Button-specific properties, like a sound to play on hover."
    e "[TRADUCIR: Buttons take Window style properties, that are used to specify the background, margins, and padding. They also take Button-specific properties, like a sound to play on hover.]"

#   e "When used with a button, style properties can be given prefixes like idle and hover to make the property change with the button state."
    e "[TRADUCIR: When used with a button, style properties can be given prefixes like idle and hover to make the property change with the button state.]"

#   e "A text button also takes Text style properties, prefixed with text. These are applied to the text displayable it creates internally."
    e "[TRADUCIR: A text button also takes Text style properties, prefixed with text. These are applied to the text displayable it creates internally.]"

#   textbutton _( "Click me."
    textbutton _( "[TRADUCIR: Click me.]"

#   style "custom_button"
    style "[TRADUCIR: custom_button]"

#   action Notify(_( "You clicked the button."
    action Notify(_( "[TRADUCIR: You clicked the button.]"

#   textbutton _( "Or me."
    textbutton _( "[TRADUCIR: Or me.]"

#   style "custom_button"
    style "[TRADUCIR: custom_button]"

#   action Notify(_( "You clicked the other button."
    action Notify(_( "[TRADUCIR: You clicked the other button.]"

#   idle_background Frame( "button glossy idle"
    idle_background Frame( "[TRADUCIR: button glossy idle]"

#   hover_background Frame( "button glossy hover"
    hover_background Frame( "[TRADUCIR: button glossy hover]"

#   size_group "custom_button"
    size_group "[TRADUCIR: custom_button]"

#   hover_sound "pong_beep.opus"
    hover_sound "[TRADUCIR: pong_beep.opus]"

#   idle_color "#c0c0c0"
    idle_color "[TRADUCIR: #c0c0c0]"

#   hover_color "#ffffff"
    hover_color "[TRADUCIR: #ffffff]"

#   e "Of course, it's prety rare we'd ever customize a button in a screen like that. Instead, we'd create custom styles and tell Ren'Py to use them."
    e "[TRADUCIR: Of course, it's prety rare we'd ever customize a button in a screen like that. Instead, we'd create custom styles and tell Ren'Py to use them.]"

#   e "The bar and vbar displayables are flexible displayables that show bars representing a value. The value can be static, animated, or adjustable by the player."
    e "[TRADUCIR: The bar and vbar displayables are flexible displayables that show bars representing a value. The value can be static, animated, or adjustable by the player.]"

#   e "The value property gives a BarValue, which is an object that determines the bar's value and range. Here, a StaticValue sets the range to 100 and the value to 66, making a bar that's two thirds full."
    e "[TRADUCIR: The value property gives a BarValue, which is an object that determines the bar's value and range. Here, a StaticValue sets the range to 100 and the value to 66, making a bar that's two thirds full.]"

#   e "A list of all the BarValues that can be used is found {a=https://www.renpy.org/doc/html/screen_actions.html#bar-values}in the Ren'Py documentation{/a}."
    e "[TRADUCIR: A list of all the BarValues that can be used is found {a=https://www.renpy.org/doc/html/screen_actions.html#bar-values}in the Ren'Py documentation{/a}.]"

#   e "In this example, we give the frame the xsize property. If we didn't do that, the bar would expand to fill all available horizontal space."
    e "[TRADUCIR: In this example, we give the frame the xsize property. If we didn't do that, the bar would expand to fill all available horizontal space.]"

#   bar value AnimatedValue(n, 100, 0.5) style "bar"
    bar value AnimatedValue(n, 100, 0.5) style "[TRADUCIR: bar]"

#   bar value ScreenVariableValue( "n"
    bar value ScreenVariableValue( "[TRADUCIR: n]"

#   bar value ScreenVariableValue( "n"
    bar value ScreenVariableValue( "[TRADUCIR: n]"

#   e "There are a few different bar styles that are defined in the default GUI. The styles are selected by the style property, with the default selected by the value."
    e "[TRADUCIR: There are a few different bar styles that are defined in the default GUI. The styles are selected by the style property, with the default selected by the value.]"

#   e "The top style is the 'bar' style. It's used to display values that the player can't adjust, like a life or progress bar."
    e "[TRADUCIR: The top style is the 'bar' style. It's used to display values that the player can't adjust, like a life or progress bar.]"

#   e "The middle style is the 'slider' value. It's used for values the player is expected to adjust, like a volume preference."
    e "[TRADUCIR: The middle style is the 'slider' value. It's used for values the player is expected to adjust, like a volume preference.]"

#   e "Finally, the bottom style is the 'scrollbar' style, which is used for horizontal scrollbars. When used as a scrollbar, the thumb in the center changes size to reflect the visible area of a viewport."
    e "[TRADUCIR: Finally, the bottom style is the 'scrollbar' style, which is used for horizontal scrollbars. When used as a scrollbar, the thumb in the center changes size to reflect the visible area of a viewport.]"

#   vbar value ScreenVariableValue( "n"
    vbar value ScreenVariableValue( "[TRADUCIR: n]"

#   vbar value ScreenVariableValue( "n"
    vbar value ScreenVariableValue( "[TRADUCIR: n]"

#   e "The vbar displayable is similar to the bar displayable, except it uses vertical styles - 'vbar', 'vslider', and 'vscrollbar' - by default."
    e "[TRADUCIR: The vbar displayable is similar to the bar displayable, except it uses vertical styles - 'vbar', 'vslider', and 'vscrollbar' - by default.]"

#   e "Bars take the Bar style properties, which can customize the look and feel greatly. Just look at the difference between the bar, slider, and scrollbar styles."
    e "[TRADUCIR: Bars take the Bar style properties, which can customize the look and feel greatly. Just look at the difference between the bar, slider, and scrollbar styles.]"

#   e "Imagemaps use two or more images to show buttons and bars. Let me start by showing you an example of an imagemap in action."
    e "[TRADUCIR: Imagemaps use two or more images to show buttons and bars. Let me start by showing you an example of an imagemap in action.]"

#   idle "imagemap ground"
    idle "[TRADUCIR: imagemap ground]"

#   hover "imagemap hover"
    hover "[TRADUCIR: imagemap hover]"

#   hotspot (44, 238, 93, 93) action Jump( "swimming"
    hotspot (44, 238, 93, 93) action Jump( "[TRADUCIR: swimming]"

#   hotspot (360, 62, 93, 93) action Jump( "science"
    hotspot (360, 62, 93, 93) action Jump( "[TRADUCIR: science]"

#   hotspot (726, 106, 93, 93) action Jump( "art"
    hotspot (726, 106, 93, 93) action Jump( "[TRADUCIR: art]"

#   hotspot (934, 461, 93, 93) action Jump( "home"
    hotspot (934, 461, 93, 93) action Jump( "[TRADUCIR: home]"

#   e "You chose swimming."
    e "[TRADUCIR: You chose swimming.]"

#   e "Swimming seems like a lot of fun, but I didn't bring my bathing suit with me."
    e "[TRADUCIR: Swimming seems like a lot of fun, but I didn't bring my bathing suit with me.]"

#   e "You chose science."
    e "[TRADUCIR: You chose science.]"

#   e "I've heard that some schools have a competitive science team, but to me research is something that can't be rushed."
    e "[TRADUCIR: I've heard that some schools have a competitive science team, but to me research is something that can't be rushed.]"

#   e "You chose art."
    e "[TRADUCIR: You chose art.]"

#   e "Really good background art is hard to make, which is why so many games use filtered photographs. Maybe you can change that."
    e "[TRADUCIR: Really good background art is hard to make, which is why so many games use filtered photographs. Maybe you can change that.]"

#   e "You chose to go home."
    e "[TRADUCIR: You chose to go home.]"

#   e "Anyway..."
    e "[TRADUCIR: Anyway...]"

#   e "To demonstrate how imagemaps are put together, I'll show you the five images that make up a smaller imagemap."
    e "[TRADUCIR: To demonstrate how imagemaps are put together, I'll show you the five images that make up a smaller imagemap.]"

#   e "The idle image is used for the background of the imagemap, for hotspot buttons that aren't focused or selected, and for the empty part of an unfocused bar."
    e "[TRADUCIR: The idle image is used for the background of the imagemap, for hotspot buttons that aren't focused or selected, and for the empty part of an unfocused bar.]"

#   e "The hover image is used for hotspots that are focused but not selected, and for the empty part of a focused bar."
    e "[TRADUCIR: The hover image is used for hotspots that are focused but not selected, and for the empty part of a focused bar.]"

#   e "Notice how both the bar and button are highlighted in this image. When we display them as part of a screen, only one of them will show up as focused."
    e "[TRADUCIR: Notice how both the bar and button are highlighted in this image. When we display them as part of a screen, only one of them will show up as focused.]"

#   e "Selected images like this selected_idle image are used for parts of the bar that are filled, and for selected buttons, like the current screen and a checked checkbox."
    e "[TRADUCIR: Selected images like this selected_idle image are used for parts of the bar that are filled, and for selected buttons, like the current screen and a checked checkbox.]"

#   e "Here's the selected_hover image. The button here will never be shown, since it will never be marked as selected."
    e "[TRADUCIR: Here's the selected_hover image. The button here will never be shown, since it will never be marked as selected.]"

#   e "Finally, an insensitive image can be given, which is used when a hotspot can't be interacted with."
    e "[TRADUCIR: Finally, an insensitive image can be given, which is used when a hotspot can't be interacted with.]"

#   e "Imagemaps aren't limited to just images. Any displayable can be used where an image is expected."
    e "[TRADUCIR: Imagemaps aren't limited to just images. Any displayable can be used where an image is expected.]"

#   idle "imagemap volume idle"
    idle "[TRADUCIR: imagemap volume idle]"

#   hover "imagemap volume hover"
    hover "[TRADUCIR: imagemap volume hover]"

#   selected_idle "imagemap volume selected_idle"
    selected_idle "[TRADUCIR: imagemap volume selected_idle]"

#   selected_hover "imagemap volume selected_hover"
    selected_hover "[TRADUCIR: imagemap volume selected_hover]"

#   insensitive "imagemap volume insensitive"
    insensitive "[TRADUCIR: imagemap volume insensitive]"

#   hotbar (51, 96, 498, 52) value Preference( "music volume"
    hotbar (51, 96, 498, 52) value Preference( "[TRADUCIR: music volume]"

#   e "Here's an imagemap built using those five images. Now that it's an imagemap, you can interact with it if you want to."
    e "[TRADUCIR: Here's an imagemap built using those five images. Now that it's an imagemap, you can interact with it if you want to.]"

#   auto "imagemap volume %s"
    auto "[TRADUCIR: imagemap volume %s]"

#   hotbar (51, 96, 498, 52) value Preference( "music volume"
    hotbar (51, 96, 498, 52) value Preference( "[TRADUCIR: music volume]"

#   e "To make this a little more concise, we can replace the five images with the auto property, which replaces '%%s' with 'idle', 'hover', 'selected_idle', 'selected_hover', or 'insensitive' as appropriate."
    e "[TRADUCIR: To make this a little more concise, we can replace the five images with the auto property, which replaces '%%s' with 'idle', 'hover', 'selected_idle', 'selected_hover', or 'insensitive' as appropriate.]"

#   e "Feel free to omit the selected and insensitive images if your game doesn't need them. Ren'Py will use the idle or hover images to replace them."
    e "[TRADUCIR: Feel free to omit the selected and insensitive images if your game doesn't need them. Ren'Py will use the idle or hover images to replace them.]"

#   e "The hotspot and hotbar statements describe areas of the imagemap that should act as buttons or bars, respectively."
    e "[TRADUCIR: The hotspot and hotbar statements describe areas of the imagemap that should act as buttons or bars, respectively.]"

#   e "Both take the coordinates of the area, in (x, y, width, height) format."
    e "[TRADUCIR: Both take the coordinates of the area, in (x, y, width, height) format.]"

#   e "A hotspot takes an action that is run when the hotspot is activated. It can also take actions that are run when it's hovered and unhovered, just like a button can."
    e "[TRADUCIR: A hotspot takes an action that is run when the hotspot is activated. It can also take actions that are run when it's hovered and unhovered, just like a button can.]"

#   e "A hotbar takes a BarValue object that describes how full the bar is, and the range of values the bar should display, just like a bar and vbar does."
    e "[TRADUCIR: A hotbar takes a BarValue object that describes how full the bar is, and the range of values the bar should display, just like a bar and vbar does.]"

#   e "A useful pattern is to define a screen with an imagemap that has hotspots that jump to labels, and call that using the call screen statement."
    e "[TRADUCIR: A useful pattern is to define a screen with an imagemap that has hotspots that jump to labels, and call that using the call screen statement.]"

#   e "That's what we did in the school example I showed before. Here's the script for it. It's long, but the imagemap itself is fairly simple."
    e "[TRADUCIR: That's what we did in the school example I showed before. Here's the script for it. It's long, but the imagemap itself is fairly simple.]"

#   e "Imagemaps have pluses and minuses. On one hand, they are easy for a designer to create, and can look very good. At the same time, they can be hard to translate, and text baked into images may be blurry when the window is scaled."
    e "[TRADUCIR: Imagemaps have pluses and minuses. On one hand, they are easy for a designer to create, and can look very good. At the same time, they can be hard to translate, and text baked into images may be blurry when the window is scaled.]"

#   e "It's up to you and your team to decide if imagemaps are right for your project."
    e "[TRADUCIR: It's up to you and your team to decide if imagemaps are right for your project.]"

#   e "Sometimes, you'll want to display something bigger than the screen. That's what the viewport displayable is for."
    e "[TRADUCIR: Sometimes, you'll want to display something bigger than the screen. That's what the viewport displayable is for.]"

#   add "bg band"
    add "[TRADUCIR: bg band]"

#   e "Here's an example of a simple viewport, used to display a single image that's far bigger than the screen. Since the viewport will expand to the size of the screen, we use the xysize property to make it smaller."
    e "[TRADUCIR: Here's an example of a simple viewport, used to display a single image that's far bigger than the screen. Since the viewport will expand to the size of the screen, we use the xysize property to make it smaller.]"

#   e "By default the viewport can't be moved, so we give the draggable, mousewheel, and arrowkeys properties to allow it to be moved in multiple ways."
    e "[TRADUCIR: By default the viewport can't be moved, so we give the draggable, mousewheel, and arrowkeys properties to allow it to be moved in multiple ways.]"

#   add "bg band"
    add "[TRADUCIR: bg band]"

#   e "When I give the viewport the edgescroll property, the viewport automatically scrolls when the mouse is near its edges. The two numbers are the size of the edges, and the speed in pixels per second."
    e "[TRADUCIR: When I give the viewport the edgescroll property, the viewport automatically scrolls when the mouse is near its edges. The two numbers are the size of the edges, and the speed in pixels per second.]"

#   scrollbars "both"
    scrollbars "[TRADUCIR: both]"

#   add "bg band"
    add "[TRADUCIR: bg band]"

#   e "Giving the viewport the scrollbars property surrounds it with scrollbars. The scrollbars property can take 'both', 'horizontal', and 'vertical' as values."
    e "[TRADUCIR: Giving the viewport the scrollbars property surrounds it with scrollbars. The scrollbars property can take 'both', 'horizontal', and 'vertical' as values.]"

#   e "The spacing property controls the space between the viewport and its scrollbars, in pixels."
    e "[TRADUCIR: The spacing property controls the space between the viewport and its scrollbars, in pixels.]"

#   scrollbars "both"
    scrollbars "[TRADUCIR: both]"

#   add "bg band"
    add "[TRADUCIR: bg band]"

#   e "The xinitial and yinitial properties set the initial amount of scrolling, as a fraction of the amount that can be scrolled."
    e "[TRADUCIR: The xinitial and yinitial properties set the initial amount of scrolling, as a fraction of the amount that can be scrolled.]"

#   scrollbars "both"
    scrollbars "[TRADUCIR: both]"

#   add "logo base"
    add "[TRADUCIR: logo base]"

#   e "Finally, there's the vpgrid displayable. It combines a viewport and a grid into a single displayable, except it's more efficient than either, since it doesn't have to draw every child."
    e "[TRADUCIR: Finally, there's the vpgrid displayable. It combines a viewport and a grid into a single displayable, except it's more efficient than either, since it doesn't have to draw every child.]"

#   e "It takes the cols and rows properties, which give the number of rows and columns of children. If one is omitted, Ren'Py figures it out from the other and the number of children."
    e "[TRADUCIR: It takes the cols and rows properties, which give the number of rows and columns of children. If one is omitted, Ren'Py figures it out from the other and the number of children.]"

# ARQUIVO: .\unrpyc-master\testcases\originals\tutorial-8.2\tutorial_video.rpy DIALOGOS: 10

#   image launch = Movie(play= "oa4_launch.webm"
    image launch = Movie(play= "[TRADUCIR: oa4_launch.webm]"

#   e "Ren'Py supports playing movies. There are two ways of doing this."
    e "[TRADUCIR: Ren'Py supports playing movies. There are two ways of doing this.]"

#   e "The first way allows you to show a movie as an image, along with every other image that's displayed on the screen."
    e "[TRADUCIR: The first way allows you to show a movie as an image, along with every other image that's displayed on the screen.]"

#   e "To do this, we first have to define an image to be a Movie displayable. Movie displayables take a movie to play, and can be given position properties."
    e "[TRADUCIR: To do this, we first have to define an image to be a Movie displayable. Movie displayables take a movie to play, and can be given position properties.]"

#   e "Then, we can show the movie displayable, which starts the movie playing."
    e "[TRADUCIR: Then, we can show the movie displayable, which starts the movie playing.]"

#   e "When we no longer want to play the movie, we can hide it."
    e "[TRADUCIR: When we no longer want to play the movie, we can hide it.]"

#   e "The other way to show a movie is with the renpy.movie_cutscene python function. This shows the movie fullscreen, either until it ends or until the user clicks."
    e "[TRADUCIR: The other way to show a movie is with the renpy.movie_cutscene python function. This shows the movie fullscreen, either until it ends or until the user clicks.]"

#   $ renpy.movie_cutscene( "oa4_launch.webm"
    $ renpy.movie_cutscene( "[TRADUCIR: oa4_launch.webm]"

#   e "A Movie displayable can also take a mask with an alpha channel, which lets you make movie sprites. But that's more complicated, so I'll stop here for now."
    e "[TRADUCIR: A Movie displayable can also take a mask with an alpha channel, which lets you make movie sprites. But that's more complicated, so I'll stop here for now.]"

#   play music "sunflower-slow-drag.ogg"
    play music "[TRADUCIR: sunflower-slow-drag.ogg]"
